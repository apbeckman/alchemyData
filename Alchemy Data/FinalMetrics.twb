<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1005.1835                               -->
<workbook original-version='18.1' source-build='2022.3.0 (20223.22.1005.1835)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Compare Broker' datatype='string' name='[Broker Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Torres Ltd NY&quot;'>
        <calculation class='tableau' formula='&quot;Torres Ltd NY&quot;' />
        <members>
          <member value='&quot;Adams-Clark GU&quot;' />
          <member value='&quot;Aguilar-Hughes NH&quot;' />
          <member value='&quot;Aguirre, Torres and Johnson DC&quot;' />
          <member value='&quot;Allen, Young and Smith ND&quot;' />
          <member value='&quot;Anderson-Rivers MD&quot;' />
          <member value='&quot;Anderson, Wilkins and Hicks OK&quot;' />
          <member value='&quot;Atkins, Chavez and Jones CO&quot;' />
          <member value='&quot;Baird Inc PR&quot;' />
          <member value='&quot;Baker Inc AR&quot;' />
          <member value='&quot;Barnes Inc LA&quot;' />
          <member value='&quot;Barnes LLC IN&quot;' />
          <member value='&quot;Barnett-Johnson DE&quot;' />
          <member value='&quot;Bauer PLC ND&quot;' />
          <member value='&quot;Becker-Burns SC&quot;' />
          <member value='&quot;Bell, Roberts and Schroeder AZ&quot;' />
          <member value='&quot;Berry, Hutchinson and Edwards NE&quot;' />
          <member value='&quot;Blanchard-Henson NJ&quot;' />
          <member value='&quot;Booker and Sons HI&quot;' />
          <member value='&quot;Boone, Beck and Martinez IL&quot;' />
          <member value='&quot;Brandt and Sons SD&quot;' />
          <member value='&quot;Bright, Huynh and Murphy WA&quot;' />
          <member value='&quot;Brock, Burgess and Cooper RI&quot;' />
          <member value='&quot;Brooks-Rivera AK&quot;' />
          <member value='&quot;Brown and Sons MI&quot;' />
          <member value='&quot;Brown Inc LA&quot;' />
          <member value='&quot;Brown-Ramirez CT&quot;' />
          <member value='&quot;Caldwell-Campbell IN&quot;' />
          <member value='&quot;Calhoun Group CA&quot;' />
          <member value='&quot;Campbell-Benson SC&quot;' />
          <member value='&quot;Campos Ltd WA&quot;' />
          <member value='&quot;Carpenter Ltd AL&quot;' />
          <member value='&quot;Castro and Sons RI&quot;' />
          <member value='&quot;Chaney-Fields ME&quot;' />
          <member value='&quot;Choi-Simpson HI&quot;' />
          <member value='&quot;Christensen Ltd VT&quot;' />
          <member value='&quot;Christensen-Sandoval VA&quot;' />
          <member value='&quot;Collins and Sons IL&quot;' />
          <member value='&quot;Collins, Kelly and Smith MP&quot;' />
          <member value='&quot;Cruz-Brown NE&quot;' />
          <member value='&quot;Cruz, Brooks and Smith OH&quot;' />
          <member value='&quot;Daniels Inc WV&quot;' />
          <member value='&quot;Daugherty, Snyder and Reyes NY&quot;' />
          <member value='&quot;Davenport and Sons IA&quot;' />
          <member value='&quot;Davies, Cole and Taylor CA&quot;' />
          <member value='&quot;Davis LLC MN&quot;' />
          <member value='&quot;Davis, Griffin and Garcia WV&quot;' />
          <member value='&quot;Delgado-Marsh NV&quot;' />
          <member value='&quot;Diaz, Robinson and Perez GA&quot;' />
          <member value='&quot;Dillon, Lopez and Ayers SC&quot;' />
          <member value='&quot;Dunn-Medina AZ&quot;' />
          <member value='&quot;English and Sons WA&quot;' />
          <member value='&quot;Farrell, Shaffer and Cardenas GU&quot;' />
          <member value='&quot;Flores PLC NC&quot;' />
          <member value='&quot;Flowers-Cooper HI&quot;' />
          <member value='&quot;Floyd, Gilmore and Marshall PR&quot;' />
          <member value='&quot;Ford, Oneal and Smith ND&quot;' />
          <member value='&quot;Francis Group AL&quot;' />
          <member value='&quot;Freeman-Fritz DE&quot;' />
          <member value='&quot;Garcia LLC TN&quot;' />
          <member value='&quot;Garcia-Berg ID&quot;' />
          <member value='&quot;Gordon, James and Hudson NJ&quot;' />
          <member value='&quot;Grant LLC DE&quot;' />
          <member value='&quot;Green Ltd MD&quot;' />
          <member value='&quot;Gutierrez-Henderson DC&quot;' />
          <member value='&quot;Hamilton Inc MI&quot;' />
          <member value='&quot;Hamilton, Wiggins and Mckenzie IA&quot;' />
          <member value='&quot;Hampton LLC GU&quot;' />
          <member value='&quot;Hardin-Shaw MT&quot;' />
          <member value='&quot;Hardy, Jackson and Martinez VI&quot;' />
          <member value='&quot;Harvey Ltd WY&quot;' />
          <member value='&quot;Henderson and Sons AL&quot;' />
          <member value='&quot;Herman-Skinner PR&quot;' />
          <member value='&quot;Hernandez and Sons IN&quot;' />
          <member value='&quot;Hernandez Group NA&quot;' />
          <member value='&quot;Ho-Nash MN&quot;' />
          <member value='&quot;Holland, Hubbard and Ellis AR&quot;' />
          <member value='&quot;Holmes-Jones OH&quot;' />
          <member value='&quot;Hudson Ltd ME&quot;' />
          <member value='&quot;Hughes, King and Jordan VT&quot;' />
          <member value='&quot;Hunt-Brown RI&quot;' />
          <member value='&quot;Hurley-Parker NH&quot;' />
          <member value='&quot;Jackson Group NH&quot;' />
          <member value='&quot;Jackson-Ingram RI&quot;' />
          <member value='&quot;Jackson, Wells and Hardy KS&quot;' />
          <member value='&quot;Jackson, Wise and Casey CA&quot;' />
          <member value='&quot;Jimenez PLC IA&quot;' />
          <member value='&quot;Johnson Group RI&quot;' />
          <member value='&quot;Johnson Group WV&quot;' />
          <member value='&quot;Johnson PLC MO&quot;' />
          <member value='&quot;Jones-Doyle AZ&quot;' />
          <member value='&quot;Kelly, Martinez and Harris CO&quot;' />
          <member value='&quot;Kennedy LLC PA&quot;' />
          <member value='&quot;King Inc NC&quot;' />
          <member value='&quot;Lawrence-Baker ME&quot;' />
          <member value='&quot;Lawson, Murphy and Flores RI&quot;' />
          <member value='&quot;Long-Lutz LA&quot;' />
          <member value='&quot;Lopez-Walker NV&quot;' />
          <member value='&quot;Lozano, Bryant and Carpenter AS&quot;' />
          <member value='&quot;Lyons, Mcdowell and Dunlap NC&quot;' />
          <member value='&quot;Mann, Fields and Sullivan AS&quot;' />
          <member value='&quot;Martin-Ortega MD&quot;' />
          <member value='&quot;Martin, Bryant and Boyd UT&quot;' />
          <member value='&quot;Mata, Williams and Diaz VA&quot;' />
          <member value='&quot;Matthews-Pace NC&quot;' />
          <member value='&quot;Maxwell and Sons MI&quot;' />
          <member value='&quot;Mccann Inc AS&quot;' />
          <member value='&quot;Mcintosh-Adams NA&quot;' />
          <member value='&quot;Mckenzie, Hunt and Rodriguez OH&quot;' />
          <member value='&quot;Meyers Ltd VA&quot;' />
          <member value='&quot;Meza-Ray WV&quot;' />
          <member value='&quot;Miller Ltd NY&quot;' />
          <member value='&quot;Moody, Bentley and Cohen OK&quot;' />
          <member value='&quot;Moore-Griffin WI&quot;' />
          <member value='&quot;Moore-Roberts MS&quot;' />
          <member value='&quot;Moran Group VA&quot;' />
          <member value='&quot;Moreno, Cline and Moreno CT&quot;' />
          <member value='&quot;Morgan LLC GA&quot;' />
          <member value='&quot;Morris, Baldwin and Gomez ID&quot;' />
          <member value='&quot;Morris, Ritter and Anderson AS&quot;' />
          <member value='&quot;Morrison, Blackwell and Black VA&quot;' />
          <member value='&quot;Myers Ltd MN&quot;' />
          <member value='&quot;Myers, Lewis and Gilbert OH&quot;' />
          <member value='&quot;Nelson and Sons MN&quot;' />
          <member value='&quot;Nelson-Rosario IA&quot;' />
          <member value='&quot;Nguyen, Johnson and Williamson CA&quot;' />
          <member value='&quot;Oneill LLC FL&quot;' />
          <member value='&quot;Oneill-Rogers NV&quot;' />
          <member value='&quot;Pacheco Group HI&quot;' />
          <member value='&quot;Parker PLC NE&quot;' />
          <member value='&quot;Patterson and Sons WA&quot;' />
          <member value='&quot;Patterson-Jones TX&quot;' />
          <member value='&quot;Peters-Jones AK&quot;' />
          <member value='&quot;Petersen, Foley and Compton CO&quot;' />
          <member value='&quot;Powers PLC IL&quot;' />
          <member value='&quot;Price, Ray and Rivera MP&quot;' />
          <member value='&quot;Price, Smith and Soto MO&quot;' />
          <member value='&quot;Pruitt, Spencer and Williams FL&quot;' />
          <member value='&quot;Ramirez and Sons WI&quot;' />
          <member value='&quot;Ramirez, Perry and Howard WI&quot;' />
          <member value='&quot;Ramos Inc AZ&quot;' />
          <member value='&quot;Ramos, Salazar and Wagner OH&quot;' />
          <member value='&quot;Ramsey Group TN&quot;' />
          <member value='&quot;Reed LLC TX&quot;' />
          <member value='&quot;Reeves PLC ME&quot;' />
          <member value='&quot;Reynolds, Simpson and Davenport MS&quot;' />
          <member value='&quot;Reynolds, Velazquez and Chase MD&quot;' />
          <member value='&quot;Richardson-Brown NC&quot;' />
          <member value='&quot;Rivera Ltd AS&quot;' />
          <member value='&quot;Robertson, Williamson and Lowe VI&quot;' />
          <member value='&quot;Robinson, Hickman and Le CO&quot;' />
          <member value='&quot;Romero, Hall and Stokes WY&quot;' />
          <member value='&quot;Ross-Garcia AS&quot;' />
          <member value='&quot;Ryan, Cantu and Graham HI&quot;' />
          <member value='&quot;Sampson, Austin and Baker AK&quot;' />
          <member value='&quot;Sandoval, Bell and Dunn AK&quot;' />
          <member value='&quot;Schmidt-Osborn ME&quot;' />
          <member value='&quot;Sellers, Peterson and Murillo VI&quot;' />
          <member value='&quot;Smith and Sons VI&quot;' />
          <member value='&quot;Smith Inc LA&quot;' />
          <member value='&quot;Snyder-Lewis CT&quot;' />
          <member value='&quot;Steele-Moore PR&quot;' />
          <member value='&quot;Steele, Hall and Johnson LA&quot;' />
          <member value='&quot;Stephenson-Alvarez IA&quot;' />
          <member value='&quot;Summers, Gonzalez and Evans KS&quot;' />
          <member value='&quot;Taylor PLC PR&quot;' />
          <member value='&quot;Taylor, Mills and Gordon SC&quot;' />
          <member value='&quot;Thomas, Crawford and Montoya MI&quot;' />
          <member value='&quot;Torres Ltd NY&quot;' />
          <member value='&quot;Torres-Anderson NM&quot;' />
          <member value='&quot;Trujillo-Greene NE&quot;' />
          <member value='&quot;Turner-Morales KY&quot;' />
          <member value='&quot;Vasquez Group IN&quot;' />
          <member value='&quot;Vasquez LLC DC&quot;' />
          <member value='&quot;Walters, Solis and Miller AS&quot;' />
          <member value='&quot;Wang, Williams and Johnson VT&quot;' />
          <member value='&quot;Watson-Calhoun LA&quot;' />
          <member value='&quot;Weeks-Leonard MS&quot;' />
          <member value='&quot;Wells-Anderson OH&quot;' />
          <member value='&quot;Wells, Beck and Brown NM&quot;' />
          <member value='&quot;Wheeler-Perry NY&quot;' />
          <member value='&quot;White-Mccormick SC&quot;' />
          <member value='&quot;Williams Ltd IN&quot;' />
          <member value='&quot;Williams-West CO&quot;' />
          <member value='&quot;Williams, Oconnor and Hayes NM&quot;' />
          <member value='&quot;Wong Ltd VA&quot;' />
          <member value='&quot;Wright and Sons VA&quot;' />
          <member value='&quot;Wu PLC IN&quot;' />
          <member value='&quot;Zamora PLC MO&quot;' />
        </members>
      </column>
      <column caption='Compare Broker ' datatype='string' name='[Compare Broker (copy)_420242175999508488]' param-domain-type='list' role='measure' type='nominal' value='&quot;Mckenzie, Hunt and Rodriguez OH&quot;'>
        <calculation class='tableau' formula='&quot;Mckenzie, Hunt and Rodriguez OH&quot;' />
        <members>
          <member value='&quot;Adams-Clark GU&quot;' />
          <member value='&quot;Aguilar-Hughes NH&quot;' />
          <member value='&quot;Aguirre, Torres and Johnson DC&quot;' />
          <member value='&quot;Allen, Young and Smith ND&quot;' />
          <member value='&quot;Anderson-Rivers MD&quot;' />
          <member value='&quot;Anderson, Wilkins and Hicks OK&quot;' />
          <member value='&quot;Atkins, Chavez and Jones CO&quot;' />
          <member value='&quot;Baird Inc PR&quot;' />
          <member value='&quot;Baker Inc AR&quot;' />
          <member value='&quot;Barnes Inc LA&quot;' />
          <member value='&quot;Barnes LLC IN&quot;' />
          <member value='&quot;Barnett-Johnson DE&quot;' />
          <member value='&quot;Bauer PLC ND&quot;' />
          <member value='&quot;Becker-Burns SC&quot;' />
          <member value='&quot;Bell, Roberts and Schroeder AZ&quot;' />
          <member value='&quot;Berry, Hutchinson and Edwards NE&quot;' />
          <member value='&quot;Blanchard-Henson NJ&quot;' />
          <member value='&quot;Booker and Sons HI&quot;' />
          <member value='&quot;Boone, Beck and Martinez IL&quot;' />
          <member value='&quot;Brandt and Sons SD&quot;' />
          <member value='&quot;Bright, Huynh and Murphy WA&quot;' />
          <member value='&quot;Brock, Burgess and Cooper RI&quot;' />
          <member value='&quot;Brooks-Rivera AK&quot;' />
          <member value='&quot;Brown and Sons MI&quot;' />
          <member value='&quot;Brown Inc LA&quot;' />
          <member value='&quot;Brown-Ramirez CT&quot;' />
          <member value='&quot;Caldwell-Campbell IN&quot;' />
          <member value='&quot;Calhoun Group CA&quot;' />
          <member value='&quot;Campbell-Benson SC&quot;' />
          <member value='&quot;Campos Ltd WA&quot;' />
          <member value='&quot;Carpenter Ltd AL&quot;' />
          <member value='&quot;Castro and Sons RI&quot;' />
          <member value='&quot;Chaney-Fields ME&quot;' />
          <member value='&quot;Choi-Simpson HI&quot;' />
          <member value='&quot;Christensen Ltd VT&quot;' />
          <member value='&quot;Christensen-Sandoval VA&quot;' />
          <member value='&quot;Collins and Sons IL&quot;' />
          <member value='&quot;Collins, Kelly and Smith MP&quot;' />
          <member value='&quot;Cruz-Brown NE&quot;' />
          <member value='&quot;Cruz, Brooks and Smith OH&quot;' />
          <member value='&quot;Daniels Inc WV&quot;' />
          <member value='&quot;Daugherty, Snyder and Reyes NY&quot;' />
          <member value='&quot;Davenport and Sons IA&quot;' />
          <member value='&quot;Davies, Cole and Taylor CA&quot;' />
          <member value='&quot;Davis LLC MN&quot;' />
          <member value='&quot;Davis, Griffin and Garcia WV&quot;' />
          <member value='&quot;Delgado-Marsh NV&quot;' />
          <member value='&quot;Diaz, Robinson and Perez GA&quot;' />
          <member value='&quot;Dillon, Lopez and Ayers SC&quot;' />
          <member value='&quot;Dunn-Medina AZ&quot;' />
          <member value='&quot;English and Sons WA&quot;' />
          <member value='&quot;Farrell, Shaffer and Cardenas GU&quot;' />
          <member value='&quot;Flores PLC NC&quot;' />
          <member value='&quot;Flowers-Cooper HI&quot;' />
          <member value='&quot;Floyd, Gilmore and Marshall PR&quot;' />
          <member value='&quot;Ford, Oneal and Smith ND&quot;' />
          <member value='&quot;Francis Group AL&quot;' />
          <member value='&quot;Freeman-Fritz DE&quot;' />
          <member value='&quot;Garcia LLC TN&quot;' />
          <member value='&quot;Garcia-Berg ID&quot;' />
          <member value='&quot;Gordon, James and Hudson NJ&quot;' />
          <member value='&quot;Grant LLC DE&quot;' />
          <member value='&quot;Green Ltd MD&quot;' />
          <member value='&quot;Gutierrez-Henderson DC&quot;' />
          <member value='&quot;Hamilton Inc MI&quot;' />
          <member value='&quot;Hamilton, Wiggins and Mckenzie IA&quot;' />
          <member value='&quot;Hampton LLC GU&quot;' />
          <member value='&quot;Hardin-Shaw MT&quot;' />
          <member value='&quot;Hardy, Jackson and Martinez VI&quot;' />
          <member value='&quot;Harvey Ltd WY&quot;' />
          <member value='&quot;Henderson and Sons AL&quot;' />
          <member value='&quot;Herman-Skinner PR&quot;' />
          <member value='&quot;Hernandez and Sons IN&quot;' />
          <member value='&quot;Hernandez Group NA&quot;' />
          <member value='&quot;Ho-Nash MN&quot;' />
          <member value='&quot;Holland, Hubbard and Ellis AR&quot;' />
          <member value='&quot;Holmes-Jones OH&quot;' />
          <member value='&quot;Hudson Ltd ME&quot;' />
          <member value='&quot;Hughes, King and Jordan VT&quot;' />
          <member value='&quot;Hunt-Brown RI&quot;' />
          <member value='&quot;Hurley-Parker NH&quot;' />
          <member value='&quot;Jackson Group NH&quot;' />
          <member value='&quot;Jackson-Ingram RI&quot;' />
          <member value='&quot;Jackson, Wells and Hardy KS&quot;' />
          <member value='&quot;Jackson, Wise and Casey CA&quot;' />
          <member value='&quot;Jimenez PLC IA&quot;' />
          <member value='&quot;Johnson Group RI&quot;' />
          <member value='&quot;Johnson Group WV&quot;' />
          <member value='&quot;Johnson PLC MO&quot;' />
          <member value='&quot;Jones-Doyle AZ&quot;' />
          <member value='&quot;Kelly, Martinez and Harris CO&quot;' />
          <member value='&quot;Kennedy LLC PA&quot;' />
          <member value='&quot;King Inc NC&quot;' />
          <member value='&quot;Lawrence-Baker ME&quot;' />
          <member value='&quot;Lawson, Murphy and Flores RI&quot;' />
          <member value='&quot;Long-Lutz LA&quot;' />
          <member value='&quot;Lopez-Walker NV&quot;' />
          <member value='&quot;Lozano, Bryant and Carpenter AS&quot;' />
          <member value='&quot;Lyons, Mcdowell and Dunlap NC&quot;' />
          <member value='&quot;Mann, Fields and Sullivan AS&quot;' />
          <member value='&quot;Martin-Ortega MD&quot;' />
          <member value='&quot;Martin, Bryant and Boyd UT&quot;' />
          <member value='&quot;Mata, Williams and Diaz VA&quot;' />
          <member value='&quot;Matthews-Pace NC&quot;' />
          <member value='&quot;Maxwell and Sons MI&quot;' />
          <member value='&quot;Mccann Inc AS&quot;' />
          <member value='&quot;Mcintosh-Adams NA&quot;' />
          <member value='&quot;Mckenzie, Hunt and Rodriguez OH&quot;' />
          <member value='&quot;Meyers Ltd VA&quot;' />
          <member value='&quot;Meza-Ray WV&quot;' />
          <member value='&quot;Miller Ltd NY&quot;' />
          <member value='&quot;Moody, Bentley and Cohen OK&quot;' />
          <member value='&quot;Moore-Griffin WI&quot;' />
          <member value='&quot;Moore-Roberts MS&quot;' />
          <member value='&quot;Moran Group VA&quot;' />
          <member value='&quot;Moreno, Cline and Moreno CT&quot;' />
          <member value='&quot;Morgan LLC GA&quot;' />
          <member value='&quot;Morris, Baldwin and Gomez ID&quot;' />
          <member value='&quot;Morris, Ritter and Anderson AS&quot;' />
          <member value='&quot;Morrison, Blackwell and Black VA&quot;' />
          <member value='&quot;Myers Ltd MN&quot;' />
          <member value='&quot;Myers, Lewis and Gilbert OH&quot;' />
          <member value='&quot;Nelson and Sons MN&quot;' />
          <member value='&quot;Nelson-Rosario IA&quot;' />
          <member value='&quot;Nguyen, Johnson and Williamson CA&quot;' />
          <member value='&quot;Oneill LLC FL&quot;' />
          <member value='&quot;Oneill-Rogers NV&quot;' />
          <member value='&quot;Pacheco Group HI&quot;' />
          <member value='&quot;Parker PLC NE&quot;' />
          <member value='&quot;Patterson and Sons WA&quot;' />
          <member value='&quot;Patterson-Jones TX&quot;' />
          <member value='&quot;Peters-Jones AK&quot;' />
          <member value='&quot;Petersen, Foley and Compton CO&quot;' />
          <member value='&quot;Powers PLC IL&quot;' />
          <member value='&quot;Price, Ray and Rivera MP&quot;' />
          <member value='&quot;Price, Smith and Soto MO&quot;' />
          <member value='&quot;Pruitt, Spencer and Williams FL&quot;' />
          <member value='&quot;Ramirez and Sons WI&quot;' />
          <member value='&quot;Ramirez, Perry and Howard WI&quot;' />
          <member value='&quot;Ramos Inc AZ&quot;' />
          <member value='&quot;Ramos, Salazar and Wagner OH&quot;' />
          <member value='&quot;Ramsey Group TN&quot;' />
          <member value='&quot;Reed LLC TX&quot;' />
          <member value='&quot;Reeves PLC ME&quot;' />
          <member value='&quot;Reynolds, Simpson and Davenport MS&quot;' />
          <member value='&quot;Reynolds, Velazquez and Chase MD&quot;' />
          <member value='&quot;Richardson-Brown NC&quot;' />
          <member value='&quot;Rivera Ltd AS&quot;' />
          <member value='&quot;Robertson, Williamson and Lowe VI&quot;' />
          <member value='&quot;Robinson, Hickman and Le CO&quot;' />
          <member value='&quot;Romero, Hall and Stokes WY&quot;' />
          <member value='&quot;Ross-Garcia AS&quot;' />
          <member value='&quot;Ryan, Cantu and Graham HI&quot;' />
          <member value='&quot;Sampson, Austin and Baker AK&quot;' />
          <member value='&quot;Sandoval, Bell and Dunn AK&quot;' />
          <member value='&quot;Schmidt-Osborn ME&quot;' />
          <member value='&quot;Sellers, Peterson and Murillo VI&quot;' />
          <member value='&quot;Smith and Sons VI&quot;' />
          <member value='&quot;Smith Inc LA&quot;' />
          <member value='&quot;Snyder-Lewis CT&quot;' />
          <member value='&quot;Steele-Moore PR&quot;' />
          <member value='&quot;Steele, Hall and Johnson LA&quot;' />
          <member value='&quot;Stephenson-Alvarez IA&quot;' />
          <member value='&quot;Summers, Gonzalez and Evans KS&quot;' />
          <member value='&quot;Taylor PLC PR&quot;' />
          <member value='&quot;Taylor, Mills and Gordon SC&quot;' />
          <member value='&quot;Thomas, Crawford and Montoya MI&quot;' />
          <member value='&quot;Torres Ltd NY&quot;' />
          <member value='&quot;Torres-Anderson NM&quot;' />
          <member value='&quot;Trujillo-Greene NE&quot;' />
          <member value='&quot;Turner-Morales KY&quot;' />
          <member value='&quot;Vasquez Group IN&quot;' />
          <member value='&quot;Vasquez LLC DC&quot;' />
          <member value='&quot;Walters, Solis and Miller AS&quot;' />
          <member value='&quot;Wang, Williams and Johnson VT&quot;' />
          <member value='&quot;Watson-Calhoun LA&quot;' />
          <member value='&quot;Weeks-Leonard MS&quot;' />
          <member value='&quot;Wells-Anderson OH&quot;' />
          <member value='&quot;Wells, Beck and Brown NM&quot;' />
          <member value='&quot;Wheeler-Perry NY&quot;' />
          <member value='&quot;White-Mccormick SC&quot;' />
          <member value='&quot;Williams Ltd IN&quot;' />
          <member value='&quot;Williams-West CO&quot;' />
          <member value='&quot;Williams, Oconnor and Hayes NM&quot;' />
          <member value='&quot;Wong Ltd VA&quot;' />
          <member value='&quot;Wright and Sons VA&quot;' />
          <member value='&quot;Wu PLC IN&quot;' />
          <member value='&quot;Zamora PLC MO&quot;' />
        </members>
      </column>
      <column caption='NullEliminator Parameter' datatype='boolean' name='[NullEliminator Parameter]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Region Comparison  ' datatype='string' name='[Region Comparison (copy)_838513994200203265]' param-domain-type='list' role='measure' type='nominal' value='&quot;East North Central&quot;'>
        <calculation class='tableau' formula='&quot;East North Central&quot;' />
        <members>
          <member value='&quot;Atlantic Island&quot;' />
          <member value='&quot;East North Central&quot;' />
          <member value='&quot;East South Central&quot;' />
          <member value='&quot;Mid Atlantic Coast&quot;' />
          <member value='&quot;Mountain&quot;' />
          <member value='&quot;New England&quot;' />
          <member value='&quot;Pacific Coast&quot;' />
          <member value='&quot;Pacific Island&quot;' />
          <member value='&quot;South Atlantic Coast&quot;' />
          <member value='&quot;West North Central&quot;' />
          <member value='&quot;West South Central&quot;' />
        </members>
      </column>
      <column caption='Region Comparison' datatype='string' name='[Region Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Mid Atlantic Coast&quot;'>
        <calculation class='tableau' formula='&quot;Mid Atlantic Coast&quot;' />
        <members>
          <member value='&quot;Atlantic Island&quot;' />
          <member value='&quot;East North Central&quot;' />
          <member value='&quot;East South Central&quot;' />
          <member value='&quot;Mid Atlantic Coast&quot;' />
          <member value='&quot;Mountain&quot;' />
          <member value='&quot;New England&quot;' />
          <member value='&quot;Pacific Coast&quot;' />
          <member value='&quot;Pacific Island&quot;' />
          <member value='&quot;South Atlantic Coast&quot;' />
          <member value='&quot;West North Central&quot;' />
          <member value='&quot;West South Central&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Compare Broker (copy)_420242175999508488]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Christensen-Sandoval VA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hamilton Inc MI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;English and Sons WA&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='broker_data' inline='true' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='broker_data' name='textscan.1f7ppor1ud15oc18adjkf11r0ygs'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='/Users/aidanbeckman/Desktop/School 2.0/465/Alchemy stuff/Alchemy Data/broker_data.csv' dataRefreshTime='' directory='C:/Users/Aidan/iCloudDrive/Desktop/School 2.0/465/Alchemy stuff/Alchemy Data' filename='/var/folders/pg/8dhryb0d5vb9fgz4zpwfqkxm0000gn/T/tableau-temp/0aybn9o1b1j05614c0awl1u0bs00/broker_data.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1f7ppor1ud15oc18adjkf11r0ygs' name='broker_data.csv' table='[broker_data#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:AL190:no:A1:AL190:2' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='broker_id broker_id' ordinal='0' />
            <column datatype='string' name='state state' ordinal='1' />
            <column datatype='string' name='broker_name broker_name' ordinal='2' />
            <column datatype='integer' name='Submissions_2015 Submissions_2015' ordinal='3' />
            <column datatype='integer' name='Submissions_2016 Submissions_2016' ordinal='4' />
            <column datatype='integer' name='Submissions_2017 Submissions_2017' ordinal='5' />
            <column datatype='integer' name='Submissions_2018 Submissions_2018' ordinal='6' />
            <column datatype='integer' name='Submissions_2019 Submissions_2019' ordinal='7' />
            <column datatype='integer' name='Submissions_2020 Submissions_2020' ordinal='8' />
            <column datatype='integer' name='QuoteCount_2014 QuoteCount_2014' ordinal='9' />
            <column datatype='integer' name='QuoteCount_2015 QuoteCount_2015' ordinal='10' />
            <column datatype='integer' name='QuoteCount_2016 QuoteCount_2016' ordinal='11' />
            <column datatype='integer' name='QuoteCount_2017 QuoteCount_2017' ordinal='12' />
            <column datatype='integer' name='QuoteCount_2018 QuoteCount_2018' ordinal='13' />
            <column datatype='integer' name='QuoteCount_2019 QuoteCount_2019' ordinal='14' />
            <column datatype='integer' name='QuoteCount_2020 QuoteCount_2020' ordinal='15' />
            <column datatype='real' name='AvgQuote_2014 AvgQuote_2014' ordinal='16' />
            <column datatype='real' name='AvgQuote_2015 AvgQuote_2015' ordinal='17' />
            <column datatype='real' name='AvgQuote_2016 AvgQuote_2016' ordinal='18' />
            <column datatype='real' name='AvgQuote_2017 AvgQuote_2017' ordinal='19' />
            <column datatype='real' name='AvgQuote_2018 AvgQuote_2018' ordinal='20' />
            <column datatype='real' name='AvgQuote_2019 AvgQuote_2019' ordinal='21' />
            <column datatype='real' name='AvgQuote_2020 AvgQuote_2020' ordinal='22' />
            <column datatype='integer' name='PolicyCount_2016 PolicyCount_2016' ordinal='23' />
            <column datatype='integer' name='PolicyCount_2017 PolicyCount_2017' ordinal='24' />
            <column datatype='integer' name='PolicyCount_2018 PolicyCount_2018' ordinal='25' />
            <column datatype='integer' name='PolicyCount_2019 PolicyCount_2019' ordinal='26' />
            <column datatype='integer' name='PolicyCount_2020 PolicyCount_2020' ordinal='27' />
            <column datatype='real' name='GWP_2016 GWP_2016' ordinal='28' />
            <column datatype='real' name='GWP_2017 GWP_2017' ordinal='29' />
            <column datatype='real' name='GWP_2018 GWP_2018' ordinal='30' />
            <column datatype='real' name='GWP_2019 GWP_2019' ordinal='31' />
            <column datatype='real' name='GWP_2020 GWP_2020' ordinal='32' />
            <column datatype='real' name='AvgTIV_2016 AvgTIV_2016' ordinal='33' />
            <column datatype='real' name='AvgTIV_2017 AvgTIV_2017' ordinal='34' />
            <column datatype='real' name='AvgTIV_2018 AvgTIV_2018' ordinal='35' />
            <column datatype='real' name='AvgTIV_2019 AvgTIV_2019' ordinal='36' />
            <column datatype='real' name='AvgTIV_2020 AvgTIV_2020' ordinal='37' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1f7ppor1ud15oc18adjkf11r0ygs' name='broker_data.csv' table='[broker_data#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:AL190:no:A1:AL190:2' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='broker_id broker_id' ordinal='0' />
            <column datatype='string' name='state state' ordinal='1' />
            <column datatype='string' name='broker_name broker_name' ordinal='2' />
            <column datatype='integer' name='Submissions_2015 Submissions_2015' ordinal='3' />
            <column datatype='integer' name='Submissions_2016 Submissions_2016' ordinal='4' />
            <column datatype='integer' name='Submissions_2017 Submissions_2017' ordinal='5' />
            <column datatype='integer' name='Submissions_2018 Submissions_2018' ordinal='6' />
            <column datatype='integer' name='Submissions_2019 Submissions_2019' ordinal='7' />
            <column datatype='integer' name='Submissions_2020 Submissions_2020' ordinal='8' />
            <column datatype='integer' name='QuoteCount_2014 QuoteCount_2014' ordinal='9' />
            <column datatype='integer' name='QuoteCount_2015 QuoteCount_2015' ordinal='10' />
            <column datatype='integer' name='QuoteCount_2016 QuoteCount_2016' ordinal='11' />
            <column datatype='integer' name='QuoteCount_2017 QuoteCount_2017' ordinal='12' />
            <column datatype='integer' name='QuoteCount_2018 QuoteCount_2018' ordinal='13' />
            <column datatype='integer' name='QuoteCount_2019 QuoteCount_2019' ordinal='14' />
            <column datatype='integer' name='QuoteCount_2020 QuoteCount_2020' ordinal='15' />
            <column datatype='real' name='AvgQuote_2014 AvgQuote_2014' ordinal='16' />
            <column datatype='real' name='AvgQuote_2015 AvgQuote_2015' ordinal='17' />
            <column datatype='real' name='AvgQuote_2016 AvgQuote_2016' ordinal='18' />
            <column datatype='real' name='AvgQuote_2017 AvgQuote_2017' ordinal='19' />
            <column datatype='real' name='AvgQuote_2018 AvgQuote_2018' ordinal='20' />
            <column datatype='real' name='AvgQuote_2019 AvgQuote_2019' ordinal='21' />
            <column datatype='real' name='AvgQuote_2020 AvgQuote_2020' ordinal='22' />
            <column datatype='integer' name='PolicyCount_2016 PolicyCount_2016' ordinal='23' />
            <column datatype='integer' name='PolicyCount_2017 PolicyCount_2017' ordinal='24' />
            <column datatype='integer' name='PolicyCount_2018 PolicyCount_2018' ordinal='25' />
            <column datatype='integer' name='PolicyCount_2019 PolicyCount_2019' ordinal='26' />
            <column datatype='integer' name='PolicyCount_2020 PolicyCount_2020' ordinal='27' />
            <column datatype='real' name='GWP_2016 GWP_2016' ordinal='28' />
            <column datatype='real' name='GWP_2017 GWP_2017' ordinal='29' />
            <column datatype='real' name='GWP_2018 GWP_2018' ordinal='30' />
            <column datatype='real' name='GWP_2019 GWP_2019' ordinal='31' />
            <column datatype='real' name='GWP_2020 GWP_2020' ordinal='32' />
            <column datatype='real' name='AvgTIV_2016 AvgTIV_2016' ordinal='33' />
            <column datatype='real' name='AvgTIV_2017 AvgTIV_2017' ordinal='34' />
            <column datatype='real' name='AvgTIV_2018 AvgTIV_2018' ordinal='35' />
            <column datatype='real' name='AvgTIV_2019 AvgTIV_2019' ordinal='36' />
            <column datatype='real' name='AvgTIV_2020 AvgTIV_2020' ordinal='37' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AL190:no:A1:AL190:2&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>5367</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>broker_id broker_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[broker_id broker_id]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>broker_id broker_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state state]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>state state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>broker_name broker_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[broker_name broker_name]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>broker_name broker_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Submissions_2015 Submissions_2015</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Submissions_2015 Submissions_2015]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>Submissions_2015 Submissions_2015</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Submissions_2016 Submissions_2016</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Submissions_2016 Submissions_2016]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>Submissions_2016 Submissions_2016</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Submissions_2017 Submissions_2017</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Submissions_2017 Submissions_2017]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>Submissions_2017 Submissions_2017</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Submissions_2018 Submissions_2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Submissions_2018 Submissions_2018]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>Submissions_2018 Submissions_2018</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Submissions_2019 Submissions_2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Submissions_2019 Submissions_2019]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>Submissions_2019 Submissions_2019</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Submissions_2020 Submissions_2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Submissions_2020 Submissions_2020]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>Submissions_2020 Submissions_2020</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QuoteCount_2014 QuoteCount_2014</remote-name>
            <remote-type>20</remote-type>
            <local-name>[QuoteCount_2014 QuoteCount_2014]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>QuoteCount_2014 QuoteCount_2014</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QuoteCount_2015 QuoteCount_2015</remote-name>
            <remote-type>20</remote-type>
            <local-name>[QuoteCount_2015 QuoteCount_2015]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>QuoteCount_2015 QuoteCount_2015</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QuoteCount_2016 QuoteCount_2016</remote-name>
            <remote-type>20</remote-type>
            <local-name>[QuoteCount_2016 QuoteCount_2016]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>QuoteCount_2016 QuoteCount_2016</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QuoteCount_2017 QuoteCount_2017</remote-name>
            <remote-type>20</remote-type>
            <local-name>[QuoteCount_2017 QuoteCount_2017]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>QuoteCount_2017 QuoteCount_2017</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QuoteCount_2018 QuoteCount_2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[QuoteCount_2018 QuoteCount_2018]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>QuoteCount_2018 QuoteCount_2018</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QuoteCount_2019 QuoteCount_2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[QuoteCount_2019 QuoteCount_2019]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>QuoteCount_2019 QuoteCount_2019</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QuoteCount_2020 QuoteCount_2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[QuoteCount_2020 QuoteCount_2020]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>QuoteCount_2020 QuoteCount_2020</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvgQuote_2014 AvgQuote_2014</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvgQuote_2014 AvgQuote_2014]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>AvgQuote_2014 AvgQuote_2014</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvgQuote_2015 AvgQuote_2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvgQuote_2015 AvgQuote_2015]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>AvgQuote_2015 AvgQuote_2015</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvgQuote_2016 AvgQuote_2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvgQuote_2016 AvgQuote_2016]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>AvgQuote_2016 AvgQuote_2016</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvgQuote_2017 AvgQuote_2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvgQuote_2017 AvgQuote_2017]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>AvgQuote_2017 AvgQuote_2017</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvgQuote_2018 AvgQuote_2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvgQuote_2018 AvgQuote_2018]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>AvgQuote_2018 AvgQuote_2018</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvgQuote_2019 AvgQuote_2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvgQuote_2019 AvgQuote_2019]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>AvgQuote_2019 AvgQuote_2019</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvgQuote_2020 AvgQuote_2020</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvgQuote_2020 AvgQuote_2020]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>AvgQuote_2020 AvgQuote_2020</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PolicyCount_2016 PolicyCount_2016</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PolicyCount_2016 PolicyCount_2016]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>PolicyCount_2016 PolicyCount_2016</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PolicyCount_2017 PolicyCount_2017</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PolicyCount_2017 PolicyCount_2017]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>PolicyCount_2017 PolicyCount_2017</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PolicyCount_2018 PolicyCount_2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PolicyCount_2018 PolicyCount_2018]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>PolicyCount_2018 PolicyCount_2018</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PolicyCount_2019 PolicyCount_2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PolicyCount_2019 PolicyCount_2019]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>PolicyCount_2019 PolicyCount_2019</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PolicyCount_2020 PolicyCount_2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PolicyCount_2020 PolicyCount_2020]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>PolicyCount_2020 PolicyCount_2020</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GWP_2016 GWP_2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GWP_2016 GWP_2016]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>GWP_2016 GWP_2016</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GWP_2017 GWP_2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GWP_2017 GWP_2017]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>GWP_2017 GWP_2017</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GWP_2018 GWP_2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GWP_2018 GWP_2018]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>GWP_2018 GWP_2018</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GWP_2019 GWP_2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GWP_2019 GWP_2019]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>GWP_2019 GWP_2019</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GWP_2020 GWP_2020</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GWP_2020 GWP_2020]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>GWP_2020 GWP_2020</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvgTIV_2016 AvgTIV_2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvgTIV_2016 AvgTIV_2016]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>AvgTIV_2016 AvgTIV_2016</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvgTIV_2017 AvgTIV_2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvgTIV_2017 AvgTIV_2017]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>AvgTIV_2017 AvgTIV_2017</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvgTIV_2018 AvgTIV_2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvgTIV_2018 AvgTIV_2018]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>AvgTIV_2018 AvgTIV_2018</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvgTIV_2019 AvgTIV_2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvgTIV_2019 AvgTIV_2019]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>AvgTIV_2019 AvgTIV_2019</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvgTIV_2020 AvgTIV_2020</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvgTIV_2020 AvgTIV_2020]</local-name>
            <parent-name>[broker_data.csv]</parent-name>
            <remote-alias>AvgTIV_2020 AvgTIV_2020</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_25614243727527940:qk]&quot;' value='Quote Ratio' />
          <alias key='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_25614243727880198:qk]&quot;' value='Hit Ratio' />
          <alias key='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_25614243728027656:qk]&quot;' value='Success Ratio' />
        </aliases>
      </column>
      <column caption='Avg WP per Sub' datatype='real' name='[Avg WP per Policy (copy)_242349976142811152]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_242349976118923277] / [Calculation_810366478443347992]' />
      </column>
      <column caption='AvgQuote 2014' datatype='real' name='[AvgQuote_2014 AvgQuote_2014]' role='measure' type='quantitative' />
      <column caption='AvgQuote 2015' datatype='real' name='[AvgQuote_2015 AvgQuote_2015]' role='measure' type='quantitative' />
      <column caption='AvgQuote 2016' datatype='real' name='[AvgQuote_2016 AvgQuote_2016]' role='measure' type='quantitative' />
      <column caption='AvgQuote 2017' datatype='real' name='[AvgQuote_2017 AvgQuote_2017]' role='measure' type='quantitative' />
      <column caption='AvgQuote 2018' datatype='real' name='[AvgQuote_2018 AvgQuote_2018]' role='measure' type='quantitative' />
      <column caption='AvgQuote 2019' datatype='real' name='[AvgQuote_2019 AvgQuote_2019]' role='measure' type='quantitative' />
      <column caption='AvgQuote 2020' datatype='real' name='[AvgQuote_2020 AvgQuote_2020]' role='measure' type='quantitative' />
      <column caption='Avg TIV 2016' datatype='real' name='[AvgTIV_2016 AvgTIV_2016]' role='measure' type='quantitative' />
      <column caption='Avg TIV 2017' datatype='real' name='[AvgTIV_2017 AvgTIV_2017]' role='measure' type='quantitative' />
      <column caption='Avg TIV 2018' datatype='real' name='[AvgTIV_2018 AvgTIV_2018]' role='measure' type='quantitative' />
      <column caption='Avg TIV 2019' datatype='real' name='[AvgTIV_2019 AvgTIV_2019]' role='measure' type='quantitative' />
      <column caption='Avg TIV 2020' datatype='real' name='[AvgTIV_2020 AvgTIV_2020]' role='measure' type='quantitative' />
      <column caption='Broker Count' datatype='integer' name='[Calculation_212021052426473472]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([broker_name broker_name])' />
      </column>
      <column caption='GWP Total' datatype='real' name='[Calculation_242349976118923277]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(ZN([GWP_2016 GWP_2016])+ZN([GWP_2017 GWP_2017])+ZN([GWP_2018 GWP_2018])+ZN([GWP_2019 GWP_2019])+ZN([GWP_2020 GWP_2020]))' />
      </column>
      <column caption='Avg WP per Policy' datatype='real' name='[Calculation_242349976139751438]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_242349976118923277] / [Calculation_810366478443126806]' />
      </column>
      <column caption='Average Quote Total' datatype='real' name='[Calculation_25614243723755520]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG({[Calculation_810366478443241495]})' />
      </column>
      <column caption='Focus Highlighter' datatype='boolean' name='[Calculation_420242175880962054]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[broker_name broker_name] = [Parameters].[Broker Name Parameter]' />
      </column>
      <column caption='Focus Broker Comparison' datatype='boolean' name='[Calculation_420242176002273291]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Broker Name Parameter] = ATTR([broker_name broker_name])' />
      </column>
      <column caption='Compare1' datatype='boolean' name='[Calculation_420242176005550093]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS([broker_name broker_name],[Parameters].[Broker Name Parameter])' />
      </column>
      <column caption='QR2020' datatype='integer' name='[Calculation_509188253661528066]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DIV(ZN([QuoteCount_2020 QuoteCount_2020]), ZN([Submissions_2020 Submissions_2020]))' />
      </column>
      <column caption='Hit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_509188253665107975]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443241495]' />
      </column>
      <column aggregation='Avg' caption='GWP Growth 2019-20' datatype='real' default-format='p0.00%' name='[Calculation_50947001529171978]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((ZN([GWP_2020 GWP_2020])-ZN([GWP_2019 GWP_2019])))/ZN([GWP_2019 GWP_2019])' />
      </column>
      <column caption='Avg GWP Growth YoY' datatype='real' default-format='p0.00%' name='[Calculation_50947001543557137]' role='measure' type='quantitative' visual-totals='Avg'>
        <calculation class='tableau' formula='([GWP Growth 2017-18 (copy)_50947001529905166]+[GWP Growth 2018-19 (copy)_50947001529724941]+[GWP Growth 2019-20 (copy)_50947001529548812]+[Calculation_50947001529171978])/4' />
      </column>
      <column caption='Focus Region Comparison' datatype='boolean' name='[Calculation_796855697594978305]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Region Parameter] = ATTR([State (group)])' />
      </column>
      <column caption='Region Comparison' datatype='boolean' name='[Calculation_796855697595588612]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS([State (group)],[Parameters].[Region Parameter])' />
      </column>
      <column caption='Policy Total' datatype='integer' name='[Calculation_810366478443126806]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(ZN([PolicyCount_2016 PolicyCount_2016])+ZN([PolicyCount_2017 PolicyCount_2017])+ZN([PolicyCount_2018 PolicyCount_2018])+ZN([PolicyCount_2019 PolicyCount_2019])+ZN([PolicyCount_2020 PolicyCount_2020]))' />
      </column>
      <column caption='Quote Total' datatype='integer' name='[Calculation_810366478443241495]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(ZN([QuoteCount_2014 QuoteCount_2014])+ZN([QuoteCount_2015 QuoteCount_2015])+ZN([QuoteCount_2016 QuoteCount_2016])+ZN([QuoteCount_2017 QuoteCount_2017])+ZN([QuoteCount_2018 QuoteCount_2018])+ZN([QuoteCount_2019 QuoteCount_2019])+ZN([QuoteCount_2020 QuoteCount_2020]))' />
      </column>
      <column caption='Submission Total' datatype='integer' name='[Calculation_810366478443347992]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(ZN([Submissions_2015 Submissions_2015])+ZN([Submissions_2016 Submissions_2016])+ZN([Submissions_2017 Submissions_2017])+ZN([Submissions_2018 Submissions_2018])+ZN([Submissions_2019 Submissions_2019])+ZN([Submissions_2020 Submissions_2020]))' />
      </column>
      <column caption='Quote Ratio' datatype='real' default-format='p0.0%' name='[Calculation_810366478443474969]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_810366478443241495] / [Calculation_810366478443347992]' />
      </column>
      <column caption='GWP Avg OutlierFilter' datatype='boolean' name='[Calculation_947726284753686534]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_50947001543557137]&lt;= 1.50' />
      </column>
      <column caption='NullEliminator' datatype='boolean' name='[Calculation_947726284754411527]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[PolicyCount_2016 PolicyCount_2016] == 0 OR  [PolicyCount_2017 PolicyCount_2017]==0 OR [PolicyCount_2018 PolicyCount_2018]==0 OR [PolicyCount_2019 PolicyCount_2019]==0 OR [PolicyCount_2020 PolicyCount_2020]==0' />
      </column>
      <column caption='Avg Policy Growth' datatype='real' default-format='p0.00%' name='[Calculation_947726284760293387]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0.25*([GWP Growth 2019-20 (copy)_947726284753268740]+[GWP Growth 2018-19 (copy)_947726284753051651]+[GWP Growth 2017-18 (copy)_947726284752896002]+[GWP Growth 2016-17 (copy)_947726284752707585])' />
      </column>
      <column caption='SR2016' datatype='real' default-format='p0.00%' name='[Calculation_947726284861599760]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN([PolicyCount_2016 PolicyCount_2016])/ZN([Submissions_2016 Submissions_2016])' />
      </column>
      <column caption='Avg TIV Overall' datatype='real' name='[Calculation_994451118823399424]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG(ZN([AvgTIV_2020 AvgTIV_2020])+ZN([AvgTIV_2019 AvgTIV_2019])+ZN([AvgTIV_2018 AvgTIV_2018])+ZN([AvgTIV_2017 AvgTIV_2017])+ZN([AvgTIV_2016 AvgTIV_2016]))' />
      </column>
      <column caption='GWP per Policy' datatype='real' name='[Calculation_994451118863060994]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_242349976118923277]/[Calculation_810366478443126806])' />
      </column>
      <column caption='Compare1 (copy)' datatype='boolean' name='[Compare1 (copy)_420242176005783566]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS([broker_name broker_name],[Parameters].[Compare Broker (copy)_420242175999508488])' />
      </column>
      <column aggregation='Avg' caption='Policy Growth 2016-17' datatype='real' default-format='p0.00%' name='[GWP Growth 2016-17 (copy)_947726284752707585]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((ZN([PolicyCount_2017 PolicyCount_2017])-ZN([PolicyCount_2016 PolicyCount_2016])))/ZN([PolicyCount_2016 PolicyCount_2016])' />
      </column>
      <column aggregation='Avg' caption='GWP Growth 2016-17' datatype='real' default-format='p0.00%' name='[GWP Growth 2017-18 (copy)_50947001529905166]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((ZN([GWP_2017 GWP_2017])-ZN([GWP_2016 GWP_2016])))/ZN([GWP_2016 GWP_2016])' />
      </column>
      <column aggregation='Avg' caption='Policy Growth 2017-18' datatype='real' default-format='p0.00%' name='[GWP Growth 2017-18 (copy)_947726284752896002]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN ([PolicyCount_2018 PolicyCount_2018])- ZN( [PolicyCount_2017 PolicyCount_2017]) ) /ZN([PolicyCount_2017 PolicyCount_2017])' />
      </column>
      <column aggregation='Avg' caption='GWP Growth 2017-18' datatype='real' default-format='p0.00%' name='[GWP Growth 2018-19 (copy)_50947001529724941]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN ([GWP_2018 GWP_2018])- ZN( [GWP_2017 GWP_2017]) ) /ZN([GWP_2017 GWP_2017])' />
      </column>
      <column aggregation='Avg' caption='Policy Growth 2018-19' datatype='real' default-format='p0.00%' name='[GWP Growth 2018-19 (copy)_947726284753051651]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((ZN([PolicyCount_2019 PolicyCount_2019])-ZN([PolicyCount_2018 PolicyCount_2018])))/ZN([PolicyCount_2018 PolicyCount_2018])' />
      </column>
      <column aggregation='Avg' caption='GWP Growth 2018-19' datatype='real' default-format='p0.00%' name='[GWP Growth 2019-20 (copy)_50947001529548812]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((ZN([GWP_2019 GWP_2019])-ZN([GWP_2018 GWP_2018])))/ZN([GWP_2018 GWP_2018])' />
      </column>
      <column aggregation='Avg' caption='Policy Growth 2019-20' datatype='real' default-format='p0.00%' name='[GWP Growth 2019-20 (copy)_947726284753268740]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((ZN([PolicyCount_2020 PolicyCount_2020])-ZN([PolicyCount_2019 PolicyCount_2019])))/ZN([PolicyCount_2019 PolicyCount_2019])' />
      </column>
      <column caption='GWP 2016' datatype='real' default-format='C1033%' name='[GWP_2016 GWP_2016]' role='measure' type='quantitative' />
      <column caption='GWP 2017' datatype='real' default-format='C1033%' name='[GWP_2017 GWP_2017]' role='measure' type='quantitative' />
      <column caption='GWP 2018' datatype='real' default-format='C1033%' name='[GWP_2018 GWP_2018]' role='measure' type='quantitative' />
      <column caption='GWP 2019' datatype='real' default-format='C1033%' name='[GWP_2019 GWP_2019]' role='measure' type='quantitative' />
      <column caption='GWP 2020' datatype='real' default-format='C1033%' name='[GWP_2020 GWP_2020]' role='measure' type='quantitative' />
      <column caption='Success Ratio' datatype='real' default-format='p0.0%' name='[Hit Ratio (copy)_25614243741290506]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443347992]' />
      </column>
      <column caption='Policy Count 2016' datatype='integer' name='[PolicyCount_2016 PolicyCount_2016]' role='measure' type='quantitative' />
      <column caption='Policy Count 2017' datatype='integer' name='[PolicyCount_2017 PolicyCount_2017]' role='measure' type='quantitative' />
      <column caption='Policy Count 2018' datatype='integer' name='[PolicyCount_2018 PolicyCount_2018]' role='measure' type='quantitative' />
      <column caption='Policy Count 2019' datatype='integer' name='[PolicyCount_2019 PolicyCount_2019]' role='measure' type='quantitative' />
      <column caption='Policy Count 2020' datatype='integer' name='[PolicyCount_2020 PolicyCount_2020]' role='measure' type='quantitative' />
      <column caption='QR2016' datatype='integer' name='[QR2017 (copy)_509188253662035974]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DIV(ZN([QuoteCount_2016 QuoteCount_2016]), ZN([Submissions_2016 Submissions_2016]))' />
      </column>
      <column caption='QR2017' datatype='integer' name='[QR2018 (copy)_509188253661982725]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DIV(ZN([QuoteCount_2017 QuoteCount_2017]), ZN([Submissions_2017 Submissions_2017]))' />
      </column>
      <column caption='QR2015' datatype='real' name='[QR2019 (copy)_509188253661933572]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[QuoteCount_2015 QuoteCount_2015] / [Submissions_2015 Submissions_2015]' />
      </column>
      <column caption='QR2019' datatype='integer' name='[QR2020 (copy)_509188253661859843]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DIV(ZN([QuoteCount_2019 QuoteCount_2019]), ZN([Submissions_2019 Submissions_2019]))' />
      </column>
      <column caption='Quote Count 2014' datatype='integer' name='[QuoteCount_2014 QuoteCount_2014]' role='measure' type='quantitative' />
      <column caption='Quote Count 2015' datatype='integer' name='[QuoteCount_2015 QuoteCount_2015]' role='measure' type='quantitative' />
      <column caption='Quote Count 2016' datatype='integer' name='[QuoteCount_2016 QuoteCount_2016]' role='measure' type='quantitative' />
      <column caption='Quote Count 2017' datatype='integer' name='[QuoteCount_2017 QuoteCount_2017]' role='measure' type='quantitative' />
      <column caption='Quote Count 2018' datatype='integer' name='[QuoteCount_2018 QuoteCount_2018]' role='measure' type='quantitative' />
      <column caption='Quote Count 2019' datatype='integer' name='[QuoteCount_2019 QuoteCount_2019]' role='measure' type='quantitative' />
      <column caption='Quote Count 2020' datatype='integer' name='[QuoteCount_2020 QuoteCount_2020]' role='measure' type='quantitative' />
      <column caption='Region Comparison (copy)' datatype='boolean' name='[Region Comparison (copy)_838513994200027136]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS([State (group)],[Parameters].[Region Comparison (copy)_838513994200203265])' />
      </column>
      <column caption='SR2017' datatype='real' default-format='p0.00%' name='[SR2016 (copy)_947726284861902865]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN([PolicyCount_2017 PolicyCount_2017])/ZN([Submissions_2017 Submissions_2017])' />
      </column>
      <column caption='SR2019' datatype='real' default-format='p0.00%' name='[SR2017 (copy) (copy)_947726284861968403]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN([PolicyCount_2019 PolicyCount_2019])/ZN([PolicyCount_2018 PolicyCount_2018])' />
      </column>
      <column caption='SR2018' datatype='real' default-format='p0.00%' name='[SR2017 (copy)_947726284861960210]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN([PolicyCount_2018 PolicyCount_2018])/ZN([Submissions_2018 Submissions_2018])' />
      </column>
      <column caption='SR2020' datatype='real' default-format='p0.00%' name='[SR2019 (copy)_947726284862050324]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN([PolicyCount_2020 PolicyCount_2020])/ZN([Submissions_2020 Submissions_2020])' />
      </column>
      <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[state state]' new-bin='true'>
          <bin default-name='false' value='&quot;Atlantic Island&quot;'>
            <value>&quot;PR&quot;</value>
            <value>&quot;VI&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;East North Central&quot;'>
            <value>&quot;IL&quot;</value>
            <value>&quot;IN&quot;</value>
            <value>&quot;MI&quot;</value>
            <value>&quot;OH&quot;</value>
            <value>&quot;WI&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;East South Central&quot;'>
            <value>&quot;AL&quot;</value>
            <value>&quot;AR&quot;</value>
            <value>&quot;KY&quot;</value>
            <value>&quot;MS&quot;</value>
            <value>&quot;TN&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Mid Atlantic Coast&quot;'>
            <value>&quot;NJ&quot;</value>
            <value>&quot;NY&quot;</value>
            <value>&quot;PA&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Mountain&quot;'>
            <value>&quot;AZ&quot;</value>
            <value>&quot;CO&quot;</value>
            <value>&quot;ID&quot;</value>
            <value>&quot;MT&quot;</value>
            <value>&quot;NM&quot;</value>
            <value>&quot;NV&quot;</value>
            <value>&quot;UT&quot;</value>
            <value>&quot;WY&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;New England&quot;'>
            <value>&quot;CT&quot;</value>
            <value>&quot;ME&quot;</value>
            <value>&quot;NH&quot;</value>
            <value>&quot;RI&quot;</value>
            <value>&quot;VT&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Pacific Coast&quot;'>
            <value>&quot;AK&quot;</value>
            <value>&quot;CA&quot;</value>
            <value>&quot;WA&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Pacific Island&quot;'>
            <value>&quot;AS&quot;</value>
            <value>&quot;GU&quot;</value>
            <value>&quot;HI&quot;</value>
            <value>&quot;MP&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South Atlantic Coast&quot;'>
            <value>&quot;DC&quot;</value>
            <value>&quot;DE&quot;</value>
            <value>&quot;FL&quot;</value>
            <value>&quot;GA&quot;</value>
            <value>&quot;MD&quot;</value>
            <value>&quot;NC&quot;</value>
            <value>&quot;SC&quot;</value>
            <value>&quot;VA&quot;</value>
            <value>&quot;WV&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West North Central&quot;'>
            <value>&quot;IA&quot;</value>
            <value>&quot;KS&quot;</value>
            <value>&quot;MN&quot;</value>
            <value>&quot;MO&quot;</value>
            <value>&quot;ND&quot;</value>
            <value>&quot;NE&quot;</value>
            <value>&quot;SD&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West South Central&quot;'>
            <value>&quot;LA&quot;</value>
            <value>&quot;OK&quot;</value>
            <value>&quot;TX&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Submissions 2015' datatype='integer' name='[Submissions_2015 Submissions_2015]' role='measure' type='quantitative' />
      <column caption='Submissions 2016' datatype='integer' name='[Submissions_2016 Submissions_2016]' role='measure' type='quantitative' />
      <column caption='Submissions 2017' datatype='integer' name='[Submissions_2017 Submissions_2017]' role='measure' type='quantitative' />
      <column caption='Submissions 2018' datatype='integer' name='[Submissions_2018 Submissions_2018]' role='measure' type='quantitative' />
      <column caption='Submissions 2019' datatype='integer' name='[Submissions_2019 Submissions_2019]' role='measure' type='quantitative' />
      <column caption='Submissions 2020' datatype='integer' name='[Submissions_2020 Submissions_2020]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='broker_data.csv' datatype='table' name='[__tableau_internal_object_id__].[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]' role='measure' type='quantitative' />
      <column caption='Broker ID' datatype='integer' name='[broker_id broker_id]' role='measure' type='quantitative' />
      <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[state state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[broker_data.csv_E241FE25B8C3457284AD118BB0F768D9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:broker_data.csv_E241FE25B8C3457284AD118BB0F768D9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_50947001529171978]' derivation='Avg' name='[avg:Calculation_50947001529171978:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GWP Growth 2016-17 (copy)_947726284752707585]' derivation='Avg' name='[avg:GWP Growth 2016-17 (copy)_947726284752707585:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GWP Growth 2017-18 (copy)_50947001529905166]' derivation='Avg' name='[avg:GWP Growth 2017-18 (copy)_50947001529905166:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GWP Growth 2017-18 (copy)_947726284752896002]' derivation='Avg' name='[avg:GWP Growth 2017-18 (copy)_947726284752896002:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GWP Growth 2018-19 (copy)_50947001529724941]' derivation='Avg' name='[avg:GWP Growth 2018-19 (copy)_50947001529724941:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GWP Growth 2018-19 (copy)_947726284753051651]' derivation='Avg' name='[avg:GWP Growth 2018-19 (copy)_947726284753051651:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GWP Growth 2019-20 (copy)_50947001529548812]' derivation='Avg' name='[avg:GWP Growth 2019-20 (copy)_50947001529548812:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GWP Growth 2019-20 (copy)_947726284753268740]' derivation='Avg' name='[avg:GWP Growth 2019-20 (copy)_947726284753268740:qk]' pivot='key' type='quantitative' />
      <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[AvgQuote_2014 AvgQuote_2014]' derivation='Sum' name='[sum:AvgQuote_2014 AvgQuote_2014:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AvgQuote_2015 AvgQuote_2015]' derivation='Sum' name='[sum:AvgQuote_2015 AvgQuote_2015:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AvgQuote_2016 AvgQuote_2016]' derivation='Sum' name='[sum:AvgQuote_2016 AvgQuote_2016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AvgQuote_2017 AvgQuote_2017]' derivation='Sum' name='[sum:AvgQuote_2017 AvgQuote_2017:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AvgQuote_2018 AvgQuote_2018]' derivation='Sum' name='[sum:AvgQuote_2018 AvgQuote_2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AvgQuote_2019 AvgQuote_2019]' derivation='Sum' name='[sum:AvgQuote_2019 AvgQuote_2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AvgQuote_2020 AvgQuote_2020]' derivation='Sum' name='[sum:AvgQuote_2020 AvgQuote_2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AvgTIV_2016 AvgTIV_2016]' derivation='Sum' name='[sum:AvgTIV_2016 AvgTIV_2016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AvgTIV_2017 AvgTIV_2017]' derivation='Sum' name='[sum:AvgTIV_2017 AvgTIV_2017:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AvgTIV_2018 AvgTIV_2018]' derivation='Sum' name='[sum:AvgTIV_2018 AvgTIV_2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AvgTIV_2019 AvgTIV_2019]' derivation='Sum' name='[sum:AvgTIV_2019 AvgTIV_2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AvgTIV_2020 AvgTIV_2020]' derivation='Sum' name='[sum:AvgTIV_2020 AvgTIV_2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_509188253661528066]' derivation='Sum' name='[sum:Calculation_509188253661528066:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_509188253665107975]' derivation='Sum' name='[sum:Calculation_509188253665107975:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_50947001529171978]' derivation='Sum' name='[sum:Calculation_50947001529171978:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_50947001543557137]' derivation='Sum' name='[sum:Calculation_50947001543557137:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
      <column-instance column='[Calculation_947726284760293387]' derivation='Sum' name='[sum:Calculation_947726284760293387:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_947726284861599760]' derivation='Sum' name='[sum:Calculation_947726284861599760:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GWP Growth 2017-18 (copy)_50947001529905166]' derivation='Sum' name='[sum:GWP Growth 2017-18 (copy)_50947001529905166:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GWP Growth 2018-19 (copy)_50947001529724941]' derivation='Sum' name='[sum:GWP Growth 2018-19 (copy)_50947001529724941:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GWP Growth 2019-20 (copy)_50947001529548812]' derivation='Sum' name='[sum:GWP Growth 2019-20 (copy)_50947001529548812:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GWP_2016 GWP_2016]' derivation='Sum' name='[sum:GWP_2016 GWP_2016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GWP_2017 GWP_2017]' derivation='Sum' name='[sum:GWP_2017 GWP_2017:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GWP_2018 GWP_2018]' derivation='Sum' name='[sum:GWP_2018 GWP_2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GWP_2019 GWP_2019]' derivation='Sum' name='[sum:GWP_2019 GWP_2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GWP_2020 GWP_2020]' derivation='Sum' name='[sum:GWP_2020 GWP_2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PolicyCount_2016 PolicyCount_2016]' derivation='Sum' name='[sum:PolicyCount_2016 PolicyCount_2016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PolicyCount_2017 PolicyCount_2017]' derivation='Sum' name='[sum:PolicyCount_2017 PolicyCount_2017:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PolicyCount_2018 PolicyCount_2018]' derivation='Sum' name='[sum:PolicyCount_2018 PolicyCount_2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PolicyCount_2019 PolicyCount_2019]' derivation='Sum' name='[sum:PolicyCount_2019 PolicyCount_2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PolicyCount_2020 PolicyCount_2020]' derivation='Sum' name='[sum:PolicyCount_2020 PolicyCount_2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QR2017 (copy)_509188253662035974]' derivation='Sum' name='[sum:QR2017 (copy)_509188253662035974:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QR2018 (copy)_509188253661982725]' derivation='Sum' name='[sum:QR2018 (copy)_509188253661982725:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QR2019 (copy)_509188253661933572]' derivation='Sum' name='[sum:QR2019 (copy)_509188253661933572:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QR2020 (copy)_509188253661859843]' derivation='Sum' name='[sum:QR2020 (copy)_509188253661859843:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QuoteCount_2014 QuoteCount_2014]' derivation='Sum' name='[sum:QuoteCount_2014 QuoteCount_2014:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QuoteCount_2015 QuoteCount_2015]' derivation='Sum' name='[sum:QuoteCount_2015 QuoteCount_2015:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QuoteCount_2016 QuoteCount_2016]' derivation='Sum' name='[sum:QuoteCount_2016 QuoteCount_2016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QuoteCount_2017 QuoteCount_2017]' derivation='Sum' name='[sum:QuoteCount_2017 QuoteCount_2017:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QuoteCount_2018 QuoteCount_2018]' derivation='Sum' name='[sum:QuoteCount_2018 QuoteCount_2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QuoteCount_2019 QuoteCount_2019]' derivation='Sum' name='[sum:QuoteCount_2019 QuoteCount_2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QuoteCount_2020 QuoteCount_2020]' derivation='Sum' name='[sum:QuoteCount_2020 QuoteCount_2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SR2016 (copy)_947726284861902865]' derivation='Sum' name='[sum:SR2016 (copy)_947726284861902865:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SR2017 (copy) (copy)_947726284861968403]' derivation='Sum' name='[sum:SR2017 (copy) (copy)_947726284861968403:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SR2017 (copy)_947726284861960210]' derivation='Sum' name='[sum:SR2017 (copy)_947726284861960210:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SR2019 (copy)_947726284862050324]' derivation='Sum' name='[sum:SR2019 (copy)_947726284862050324:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Submissions_2015 Submissions_2015]' derivation='Sum' name='[sum:Submissions_2015 Submissions_2015:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Submissions_2016 Submissions_2016]' derivation='Sum' name='[sum:Submissions_2016 Submissions_2016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Submissions_2017 Submissions_2017]' derivation='Sum' name='[sum:Submissions_2017 Submissions_2017:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Submissions_2018 Submissions_2018]' derivation='Sum' name='[sum:Submissions_2018 Submissions_2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Submissions_2019 Submissions_2019]' derivation='Sum' name='[sum:Submissions_2019 Submissions_2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Submissions_2020 Submissions_2020]' derivation='Sum' name='[sum:Submissions_2020 Submissions_2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[broker_id broker_id]' derivation='Sum' name='[sum:broker_id broker_id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg WP per Policy (copy)_242349976142811152]' derivation='User' name='[usr:Avg WP per Policy (copy)_242349976142811152:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_212021052426473472]' derivation='User' name='[usr:Calculation_212021052426473472:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_242349976118923277]' derivation='User' name='[usr:Calculation_242349976118923277:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_242349976139751438]' derivation='User' name='[usr:Calculation_242349976139751438:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_25614243723755520]' derivation='User' name='[usr:Calculation_25614243723755520:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_509188253665107975]' derivation='User' name='[usr:Calculation_509188253665107975:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_50947001543557137]' derivation='User' name='[usr:Calculation_50947001543557137:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_50947001543557137]' derivation='User' name='[usr:Calculation_50947001543557137:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
      <column-instance column='[Calculation_810366478443126806]' derivation='User' name='[usr:Calculation_810366478443126806:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_810366478443241495]' derivation='User' name='[usr:Calculation_810366478443241495:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_810366478443347992]' derivation='User' name='[usr:Calculation_810366478443347992:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_810366478443474969]' derivation='User' name='[usr:Calculation_810366478443474969:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_994451118823399424]' derivation='User' name='[usr:Calculation_994451118823399424:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_994451118863060994]' derivation='User' name='[usr:Calculation_994451118863060994:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hit Ratio (copy)_25614243741290506]' derivation='User' name='[usr:Hit Ratio (copy)_25614243741290506:qk]' pivot='key' type='quantitative' />
      <group caption='Broker Comparison' name='[Comparison]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='empty-level' member='[broker_name broker_name]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.874656' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.125344' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:broker_name broker_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Dillon, Lopez and Ayers SC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Flowers-Cooper HI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Johnson Group RI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kelly, Martinez and Harris CO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mccann Inc AS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morris, Ritter and Anderson AS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Smith and Sons VI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turner-Morales KY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zamora PLC MO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bauer PLC ND&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Campos Ltd WA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cruz-Brown NE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Davies, Cole and Taylor CA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Freeman-Fritz DE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hernandez and Sons IN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jackson, Wise and Casey CA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lopez-Walker NV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pruitt, Spencer and Williams FL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Williams-West CO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Castro and Sons RI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Christensen-Sandoval VA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Davis LLC MN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Johnson PLC MO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Martin-Ortega MD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Martin, Bryant and Boyd UT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moore-Roberts MS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morris, Baldwin and Gomez ID&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peters-Jones AK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reeves PLC ME&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davenport and Sons IA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hernandez Group NA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lyons, Mcdowell and Dunlap NC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno, Cline and Moreno CT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Price, Smith and Soto MO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Richardson-Brown NC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sandoval, Bell and Dunn AK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Walters, Solis and Miller AS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wu PLC IN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barnett-Johnson DE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Calhoun Group CA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Daniels Inc WV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Davis, Griffin and Garcia WV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gutierrez-Henderson DC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myers Ltd MN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romero, Hall and Stokes WY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ross-Garcia AS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Summers, Gonzalez and Evans KS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bell, Roberts and Schroeder AZ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Diaz, Robinson and Perez GA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holmes-Jones OH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;King Inc NC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mann, Fields and Sullivan AS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcintosh-Adams NA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moore-Griffin WI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ramos, Salazar and Wagner OH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reynolds, Simpson and Davenport MS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Williams, Oconnor and Hayes NM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Baird Inc PR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chaney-Fields ME&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;English and Sons WA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Flores PLC NC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moran Group VA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oneill-Rogers NV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pacheco Group HI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Robinson, Hickman and Le CO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smith Inc LA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aguirre, Torres and Johnson DC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Becker-Burns SC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Blanchard-Henson NJ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brandt and Sons SD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lozano, Bryant and Carpenter AS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Patterson and Sons WA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Price, Ray and Rivera MP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Steele-Moore PR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Torres-Anderson NM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wells, Beck and Brown NM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Berry, Hutchinson and Edwards NE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Booker and Sons HI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Garcia LLC TN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hardin-Shaw MT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Herman-Skinner PR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jimenez PLC IA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jones-Doyle AZ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mckenzie, Hunt and Rodriguez OH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wells-Anderson OH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Collins, Kelly and Smith MP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jackson, Wells and Hardy KS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kennedy LLC PA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Matthews-Pace NC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Petersen, Foley and Compton CO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ramsey Group TN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Reed LLC TX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taylor PLC PR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torres Ltd NY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wright and Sons VA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Choi-Simpson HI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dunn-Medina AZ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ford, Oneal and Smith ND&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hardy, Jackson and Martinez VI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jackson-Ingram RI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lawson, Murphy and Flores RI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Parker PLC NE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vasquez Group IN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Weeks-Leonard MS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adams-Clark GU&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Daugherty, Snyder and Reyes NY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hampton LLC GU&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson and Sons AL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mata, Williams and Diaz VA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morrison, Blackwell and Black VA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ramirez and Sons WI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steele, Hall and Johnson LA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thomas, Crawford and Montoya MI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barnes Inc LA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brooks-Rivera AK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brown and Sons MI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brown Inc LA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Collins and Sons IL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Ltd MD&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ho-Nash MN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Miller Ltd NY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ramirez, Perry and Howard WI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baker Inc AR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bright, Huynh and Murphy WA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Francis Group AL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hudson Ltd ME&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson Group WV&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meyers Ltd VA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nelson and Sons MN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sampson, Austin and Baker AK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wong Ltd VA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brock, Burgess and Cooper RI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Christensen Ltd VT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Farrell, Shaffer and Cardenas GU&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hamilton Inc MI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harvey Ltd WY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Long-Lutz LA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Meza-Ray WV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nelson-Rosario IA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Reynolds, Velazquez and Chase MD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aguilar-Hughes NH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Caldwell-Campbell IN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Campbell-Benson SC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gordon, James and Hudson NJ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grant LLC DE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Holland, Hubbard and Ellis AR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hunt-Brown RI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence-Baker ME&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Patterson-Jones TX&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sellers, Peterson and Murillo VI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barnes LLC IN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boone, Beck and Martinez IL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brown-Ramirez CT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carpenter Ltd AL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hughes, King and Jordan VT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jackson Group NH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myers, Lewis and Gilbert OH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ramos Inc AZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vasquez LLC DC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wheeler-Perry NY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anderson-Rivers MD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anderson, Wilkins and Hicks OK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moody, Bentley and Cohen OK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nguyen, Johnson and Williamson CA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rivera Ltd AS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Robertson, Williamson and Lowe VI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stephenson-Alvarez IA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trujillo-Greene NE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Williams Ltd IN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Allen, Young and Smith ND&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Atkins, Chavez and Jones CO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maxwell and Sons MI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oneill LLC FL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Schmidt-Osborn ME&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Snyder-Lewis CT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taylor, Mills and Gordon SC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wang, Williams and Johnson VT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Watson-Calhoun LA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cruz, Brooks and Smith OH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Delgado-Marsh NV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Floyd, Gilmore and Marshall PR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garcia-Berg ID&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hamilton, Wiggins and Mckenzie IA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hurley-Parker NH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morgan LLC GA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Powers PLC IL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ryan, Cantu and Graham HI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;White-Mccormick SC&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:QR2020 (copy)_509188253661859843:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:Calculation_1473451153849348098:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:Calculation_50947001529171978:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2016-17 (copy)_947726284752707585:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2017-18 (copy)_50947001529905166:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Avg GWP Growth YoY (copy)_420242175879086084:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_50947001543557137:vtavg:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_947726284861599760:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP Growth 2017-18 (copy)_50947001529905166:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2016 GWP_2016:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Submissions_2015 Submissions_2015:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_25614243723755520:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_50947001543557137:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443126806:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_994451118823399424:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[med:Calculation_247697999665569795:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_810366478442127373:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:AvgTIV_2017 AvgTIV_2017:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:AvgTIV_2020 AvgTIV_2020:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2020 GWP_2020:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:QuoteCount_2019 QuoteCount_2019:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:SR2019 (copy)_947726284862050324:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Submissions_2019 Submissions_2019:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478442422286:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:Calculation_247697999665569795:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:AvgTIV_2019 AvgTIV_2019:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_509188253665107975:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_50947001529171978:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2019 GWP_2019:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:SR2017 (copy) (copy)_947726284861968403:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_509188253665107975:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:AvgQuote_2015 AvgQuote_2015:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:QuoteCount_2016 QuoteCount_2016:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_509188253661528066:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:QR2019 (copy)_509188253661933572:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Submissions_2020 Submissions_2020:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:PolicyCount_2019 PolicyCount_2019:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_212021052426473472:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2017-18 (copy)_947726284752896002:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Submissions_2016 Submissions_2016:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_50947001543557137:vtavg:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:AvgQuote_2019 AvgQuote_2019:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_1473451153849348098:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:PolicyCount_2017 PolicyCount_2017:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:QuoteCount_2020 QuoteCount_2020:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:QR2017 (copy)_509188253662035974:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:AvgQuote_2016 AvgQuote_2016:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:QuoteCount_2017 QuoteCount_2017:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:AvgQuote_2017 AvgQuote_2017:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:QuoteCount_2018 QuoteCount_2018:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:AvgQuote_2020 AvgQuote_2020:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:PolicyCount_2018 PolicyCount_2018:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:broker_id broker_id:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:PolicyCount_2020 PolicyCount_2020:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2019-20 (copy)_50947001529548812:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:AvgTIV_2018 AvgTIV_2018:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_1473451153849163777:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_947726284760293387:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP Growth 2019-20 (copy)_50947001529548812:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2018 GWP_2018:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:QuoteCount_2014 QuoteCount_2014:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:SR2017 (copy)_947726284861960210:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Avg WP per Policy (copy)_242349976142811152:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443347992:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:Calculation_247697999667716101:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_994451118863060994:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:QR2018 (copy)_509188253661982725:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2018-19 (copy)_50947001529724941:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2018-19 (copy)_947726284753051651:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[med:Calculation_1473451153849348098:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:AvgTIV_2016 AvgTIV_2016:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP Growth 2018-19 (copy)_50947001529724941:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2017 GWP_2017:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:SR2016 (copy)_947726284861902865:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Submissions_2017 Submissions_2017:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976139751438:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_420242175868489728:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_50947001651040275:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443241495:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443474969:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:AvgQuote_2018 AvgQuote_2018:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:PolicyCount_2016 PolicyCount_2016:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:AvgQuote_2014 AvgQuote_2014:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:QuoteCount_2015 QuoteCount_2015:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_1473451153848430592:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[__tableau_internal_object_id__].[cnt:broker_data.csv_E241FE25B8C3457284AD118BB0F768D9:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2019-20 (copy)_947726284753268740:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Submissions_2018 Submissions_2018:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='broker_id' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='broker_name' />
        <field-sort-custom-order field='Submissions_2015' />
        <field-sort-custom-order field='Calculation_1473451153848430592' />
        <field-sort-custom-order field='Submissions_2016' />
        <field-sort-custom-order field='Submissions_2017' />
        <field-sort-custom-order field='Submissions_2018' />
        <field-sort-custom-order field='Submissions_2019' />
        <field-sort-custom-order field='Submissions_2020' />
        <field-sort-custom-order field='QuoteCount_2014' />
        <field-sort-custom-order field='Calculation_1473451153849163777' />
        <field-sort-custom-order field='QuoteCount_2015' />
        <field-sort-custom-order field='QuoteCount_2016' />
        <field-sort-custom-order field='QuoteCount_2017' />
        <field-sort-custom-order field='QuoteCount_2018' />
        <field-sort-custom-order field='QuoteCount_2019' />
        <field-sort-custom-order field='QuoteCount_2020' />
        <field-sort-custom-order field='AvgQuote_2014' />
        <field-sort-custom-order field='AvgQuote_2015' />
        <field-sort-custom-order field='AvgQuote_2016' />
        <field-sort-custom-order field='AvgQuote_2017' />
        <field-sort-custom-order field='AvgQuote_2018' />
        <field-sort-custom-order field='AvgQuote_2019' />
        <field-sort-custom-order field='AvgQuote_2020' />
        <field-sort-custom-order field='PolicyCount_2016' />
        <field-sort-custom-order field='Calculation_1473451153849348098' />
        <field-sort-custom-order field='PolicyCount_2017' />
        <field-sort-custom-order field='PolicyCount_2018' />
        <field-sort-custom-order field='PolicyCount_2019' />
        <field-sort-custom-order field='PolicyCount_2020' />
        <field-sort-custom-order field='GWP_2016' />
        <field-sort-custom-order field='GWP_2017' />
        <field-sort-custom-order field='GWP_2018' />
        <field-sort-custom-order field='GWP_2019' />
        <field-sort-custom-order field='GWP_2020' />
        <field-sort-custom-order field='AvgTIV_2016' />
        <field-sort-custom-order field='AvgTIV_2017' />
        <field-sort-custom-order field='AvgTIV_2018' />
        <field-sort-custom-order field='AvgTIV_2019' />
        <field-sort-custom-order field='AvgTIV_2020' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Compare Broker' datatype='string' name='[Broker Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Torres Ltd NY&quot;'>
          <calculation class='tableau' formula='&quot;Torres Ltd NY&quot;' />
        </column>
        <column caption='Compare Broker ' datatype='string' name='[Compare Broker (copy)_420242175999508488]' param-domain-type='list' role='measure' type='nominal' value='&quot;Mckenzie, Hunt and Rodriguez OH&quot;'>
          <calculation class='tableau' formula='&quot;Mckenzie, Hunt and Rodriguez OH&quot;' />
        </column>
        <column caption='Region Comparison  ' datatype='string' name='[Region Comparison (copy)_838513994200203265]' param-domain-type='list' role='measure' type='nominal' value='&quot;East North Central&quot;'>
          <calculation class='tableau' formula='&quot;East North Central&quot;' />
        </column>
        <column caption='Region Comparison' datatype='string' name='[Region Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Mid Atlantic Coast&quot;'>
          <calculation class='tableau' formula='&quot;Mid Atlantic Coast&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='broker_data.csv' id='broker_data.csv_E241FE25B8C3457284AD118BB0F768D9'>
            <properties context=''>
              <relation connection='textscan.1f7ppor1ud15oc18adjkf11r0ygs' name='broker_data.csv' table='[broker_data#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:AL190:no:A1:AL190:2' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='broker_id broker_id' ordinal='0' />
                  <column datatype='string' name='state state' ordinal='1' />
                  <column datatype='string' name='broker_name broker_name' ordinal='2' />
                  <column datatype='integer' name='Submissions_2015 Submissions_2015' ordinal='3' />
                  <column datatype='integer' name='Submissions_2016 Submissions_2016' ordinal='4' />
                  <column datatype='integer' name='Submissions_2017 Submissions_2017' ordinal='5' />
                  <column datatype='integer' name='Submissions_2018 Submissions_2018' ordinal='6' />
                  <column datatype='integer' name='Submissions_2019 Submissions_2019' ordinal='7' />
                  <column datatype='integer' name='Submissions_2020 Submissions_2020' ordinal='8' />
                  <column datatype='integer' name='QuoteCount_2014 QuoteCount_2014' ordinal='9' />
                  <column datatype='integer' name='QuoteCount_2015 QuoteCount_2015' ordinal='10' />
                  <column datatype='integer' name='QuoteCount_2016 QuoteCount_2016' ordinal='11' />
                  <column datatype='integer' name='QuoteCount_2017 QuoteCount_2017' ordinal='12' />
                  <column datatype='integer' name='QuoteCount_2018 QuoteCount_2018' ordinal='13' />
                  <column datatype='integer' name='QuoteCount_2019 QuoteCount_2019' ordinal='14' />
                  <column datatype='integer' name='QuoteCount_2020 QuoteCount_2020' ordinal='15' />
                  <column datatype='real' name='AvgQuote_2014 AvgQuote_2014' ordinal='16' />
                  <column datatype='real' name='AvgQuote_2015 AvgQuote_2015' ordinal='17' />
                  <column datatype='real' name='AvgQuote_2016 AvgQuote_2016' ordinal='18' />
                  <column datatype='real' name='AvgQuote_2017 AvgQuote_2017' ordinal='19' />
                  <column datatype='real' name='AvgQuote_2018 AvgQuote_2018' ordinal='20' />
                  <column datatype='real' name='AvgQuote_2019 AvgQuote_2019' ordinal='21' />
                  <column datatype='real' name='AvgQuote_2020 AvgQuote_2020' ordinal='22' />
                  <column datatype='integer' name='PolicyCount_2016 PolicyCount_2016' ordinal='23' />
                  <column datatype='integer' name='PolicyCount_2017 PolicyCount_2017' ordinal='24' />
                  <column datatype='integer' name='PolicyCount_2018 PolicyCount_2018' ordinal='25' />
                  <column datatype='integer' name='PolicyCount_2019 PolicyCount_2019' ordinal='26' />
                  <column datatype='integer' name='PolicyCount_2020 PolicyCount_2020' ordinal='27' />
                  <column datatype='real' name='GWP_2016 GWP_2016' ordinal='28' />
                  <column datatype='real' name='GWP_2017 GWP_2017' ordinal='29' />
                  <column datatype='real' name='GWP_2018 GWP_2018' ordinal='30' />
                  <column datatype='real' name='GWP_2019 GWP_2019' ordinal='31' />
                  <column datatype='real' name='GWP_2020 GWP_2020' ordinal='32' />
                  <column datatype='real' name='AvgTIV_2016 AvgTIV_2016' ordinal='33' />
                  <column datatype='real' name='AvgTIV_2017 AvgTIV_2017' ordinal='34' />
                  <column datatype='real' name='AvgTIV_2018 AvgTIV_2018' ordinal='35' />
                  <column datatype='real' name='AvgTIV_2019 AvgTIV_2019' ordinal='36' />
                  <column datatype='real' name='AvgTIV_2020 AvgTIV_2020' ordinal='37' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Avg Stats by Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Avg Stats by Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Region Comparison' datatype='string' name='[Region Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Mid Atlantic Coast&quot;'>
              <calculation class='tableau' formula='&quot;Mid Atlantic Coast&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column aggregation='Avg' caption='GWP Growth 2019-20' datatype='real' default-format='p0.00%' name='[Calculation_50947001529171978]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2020 GWP_2020])-ZN([GWP_2019 GWP_2019])))/ZN([GWP_2019 GWP_2019])' />
            </column>
            <column caption='Avg GWP Growth YoY' datatype='real' default-format='p0.00%' name='[Calculation_50947001543557137]' role='measure' type='quantitative' visual-totals='Avg'>
              <calculation class='tableau' formula='([GWP Growth 2017-18 (copy)_50947001529905166]+[GWP Growth 2018-19 (copy)_50947001529724941]+[GWP Growth 2019-20 (copy)_50947001529548812]+[Calculation_50947001529171978])/4' />
            </column>
            <column caption='Region Comparison' datatype='boolean' name='[Calculation_796855697595588612]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([State (group)],[Parameters].[Region Parameter])' />
            </column>
            <column caption='Policy Total' datatype='integer' name='[Calculation_810366478443126806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([PolicyCount_2016 PolicyCount_2016])+ZN([PolicyCount_2017 PolicyCount_2017])+ZN([PolicyCount_2018 PolicyCount_2018])+ZN([PolicyCount_2019 PolicyCount_2019])+ZN([PolicyCount_2020 PolicyCount_2020]))' />
            </column>
            <column caption='Submission Total' datatype='integer' name='[Calculation_810366478443347992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Submissions_2015 Submissions_2015])+ZN([Submissions_2016 Submissions_2016])+ZN([Submissions_2017 Submissions_2017])+ZN([Submissions_2018 Submissions_2018])+ZN([Submissions_2019 Submissions_2019])+ZN([Submissions_2020 Submissions_2020]))' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2016-17' datatype='real' default-format='p0.00%' name='[GWP Growth 2017-18 (copy)_50947001529905166]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2017 GWP_2017])-ZN([GWP_2016 GWP_2016])))/ZN([GWP_2016 GWP_2016])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2017-18' datatype='real' default-format='p0.00%' name='[GWP Growth 2018-19 (copy)_50947001529724941]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN ([GWP_2018 GWP_2018])- ZN( [GWP_2017 GWP_2017]) ) /ZN([GWP_2017 GWP_2017])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2018-19' datatype='real' default-format='p0.00%' name='[GWP Growth 2019-20 (copy)_50947001529548812]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2019 GWP_2019])-ZN([GWP_2018 GWP_2018])))/ZN([GWP_2018 GWP_2018])' />
            </column>
            <column caption='GWP 2016' datatype='real' default-format='C1033%' name='[GWP_2016 GWP_2016]' role='measure' type='quantitative' />
            <column caption='GWP 2017' datatype='real' default-format='C1033%' name='[GWP_2017 GWP_2017]' role='measure' type='quantitative' />
            <column caption='GWP 2018' datatype='real' default-format='C1033%' name='[GWP_2018 GWP_2018]' role='measure' type='quantitative' />
            <column caption='GWP 2019' datatype='real' default-format='C1033%' name='[GWP_2019 GWP_2019]' role='measure' type='quantitative' />
            <column caption='GWP 2020' datatype='real' default-format='C1033%' name='[GWP_2020 GWP_2020]' role='measure' type='quantitative' />
            <column caption='Success Ratio' datatype='real' default-format='p0.0%' name='[Hit Ratio (copy)_25614243741290506]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443347992]' />
            </column>
            <column caption='Policy Count 2016' datatype='integer' name='[PolicyCount_2016 PolicyCount_2016]' role='measure' type='quantitative' />
            <column caption='Policy Count 2017' datatype='integer' name='[PolicyCount_2017 PolicyCount_2017]' role='measure' type='quantitative' />
            <column caption='Policy Count 2018' datatype='integer' name='[PolicyCount_2018 PolicyCount_2018]' role='measure' type='quantitative' />
            <column caption='Policy Count 2019' datatype='integer' name='[PolicyCount_2019 PolicyCount_2019]' role='measure' type='quantitative' />
            <column caption='Policy Count 2020' datatype='integer' name='[PolicyCount_2020 PolicyCount_2020]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state state]' new-bin='true'>
                <bin default-name='false' value='&quot;Atlantic Island&quot;'>
                  <value>&quot;PR&quot;</value>
                  <value>&quot;VI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East North Central&quot;'>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;MI&quot;</value>
                  <value>&quot;OH&quot;</value>
                  <value>&quot;WI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East South Central&quot;'>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;KY&quot;</value>
                  <value>&quot;MS&quot;</value>
                  <value>&quot;TN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mid Atlantic Coast&quot;'>
                  <value>&quot;NJ&quot;</value>
                  <value>&quot;NY&quot;</value>
                  <value>&quot;PA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mountain&quot;'>
                  <value>&quot;AZ&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NM&quot;</value>
                  <value>&quot;NV&quot;</value>
                  <value>&quot;UT&quot;</value>
                  <value>&quot;WY&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New England&quot;'>
                  <value>&quot;CT&quot;</value>
                  <value>&quot;ME&quot;</value>
                  <value>&quot;NH&quot;</value>
                  <value>&quot;RI&quot;</value>
                  <value>&quot;VT&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Coast&quot;'>
                  <value>&quot;AK&quot;</value>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;WA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Island&quot;'>
                  <value>&quot;AS&quot;</value>
                  <value>&quot;GU&quot;</value>
                  <value>&quot;HI&quot;</value>
                  <value>&quot;MP&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Atlantic Coast&quot;'>
                  <value>&quot;DC&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;FL&quot;</value>
                  <value>&quot;GA&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;SC&quot;</value>
                  <value>&quot;VA&quot;</value>
                  <value>&quot;WV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West North Central&quot;'>
                  <value>&quot;IA&quot;</value>
                  <value>&quot;KS&quot;</value>
                  <value>&quot;MN&quot;</value>
                  <value>&quot;MO&quot;</value>
                  <value>&quot;ND&quot;</value>
                  <value>&quot;NE&quot;</value>
                  <value>&quot;SD&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West South Central&quot;'>
                  <value>&quot;LA&quot;</value>
                  <value>&quot;OK&quot;</value>
                  <value>&quot;TX&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Submissions 2015' datatype='integer' name='[Submissions_2015 Submissions_2015]' role='measure' type='quantitative' />
            <column caption='Submissions 2016' datatype='integer' name='[Submissions_2016 Submissions_2016]' role='measure' type='quantitative' />
            <column caption='Submissions 2017' datatype='integer' name='[Submissions_2017 Submissions_2017]' role='measure' type='quantitative' />
            <column caption='Submissions 2018' datatype='integer' name='[Submissions_2018 Submissions_2018]' role='measure' type='quantitative' />
            <column caption='Submissions 2019' datatype='integer' name='[Submissions_2019 Submissions_2019]' role='measure' type='quantitative' />
            <column caption='Submissions 2020' datatype='integer' name='[Submissions_2020 Submissions_2020]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_796855697595588612]' derivation='None' name='[none:Calculation_796855697595588612:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_50947001543557137]' derivation='Sum' name='[sum:Calculation_50947001543557137:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Hit Ratio (copy)_25614243741290506]' derivation='User' name='[usr:Hit Ratio (copy)_25614243741290506:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_50947001543557137:vtavg:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_50947001543557137:vtavg:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_796855697595588612:nk]'>
            <groupfilter function='member' level='[none:Calculation_796855697595588612:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_796855697595588612:nk]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Latitude (generated)]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Longitude (generated)]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[state state]' value='false' />
            <format attr='break-on-special' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[state state]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[state state]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)] / [federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names])</rows>
        <cols />
      </table>
      <simple-id uuid='{417750CA-6F22-403A-959E-42E62F88AA11}' />
    </worksheet>
    <worksheet name='Avg Stats by Region (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Avg Stats by Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Region Comparison  ' datatype='string' name='[Region Comparison (copy)_838513994200203265]' param-domain-type='list' role='measure' type='nominal' value='&quot;East North Central&quot;'>
              <calculation class='tableau' formula='&quot;East North Central&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column aggregation='Avg' caption='GWP Growth 2019-20' datatype='real' default-format='p0.00%' name='[Calculation_50947001529171978]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2020 GWP_2020])-ZN([GWP_2019 GWP_2019])))/ZN([GWP_2019 GWP_2019])' />
            </column>
            <column caption='Avg GWP Growth YoY' datatype='real' default-format='p0.00%' name='[Calculation_50947001543557137]' role='measure' type='quantitative' visual-totals='Avg'>
              <calculation class='tableau' formula='([GWP Growth 2017-18 (copy)_50947001529905166]+[GWP Growth 2018-19 (copy)_50947001529724941]+[GWP Growth 2019-20 (copy)_50947001529548812]+[Calculation_50947001529171978])/4' />
            </column>
            <column caption='Policy Total' datatype='integer' name='[Calculation_810366478443126806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([PolicyCount_2016 PolicyCount_2016])+ZN([PolicyCount_2017 PolicyCount_2017])+ZN([PolicyCount_2018 PolicyCount_2018])+ZN([PolicyCount_2019 PolicyCount_2019])+ZN([PolicyCount_2020 PolicyCount_2020]))' />
            </column>
            <column caption='Submission Total' datatype='integer' name='[Calculation_810366478443347992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Submissions_2015 Submissions_2015])+ZN([Submissions_2016 Submissions_2016])+ZN([Submissions_2017 Submissions_2017])+ZN([Submissions_2018 Submissions_2018])+ZN([Submissions_2019 Submissions_2019])+ZN([Submissions_2020 Submissions_2020]))' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2016-17' datatype='real' default-format='p0.00%' name='[GWP Growth 2017-18 (copy)_50947001529905166]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2017 GWP_2017])-ZN([GWP_2016 GWP_2016])))/ZN([GWP_2016 GWP_2016])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2017-18' datatype='real' default-format='p0.00%' name='[GWP Growth 2018-19 (copy)_50947001529724941]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN ([GWP_2018 GWP_2018])- ZN( [GWP_2017 GWP_2017]) ) /ZN([GWP_2017 GWP_2017])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2018-19' datatype='real' default-format='p0.00%' name='[GWP Growth 2019-20 (copy)_50947001529548812]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2019 GWP_2019])-ZN([GWP_2018 GWP_2018])))/ZN([GWP_2018 GWP_2018])' />
            </column>
            <column caption='GWP 2016' datatype='real' default-format='C1033%' name='[GWP_2016 GWP_2016]' role='measure' type='quantitative' />
            <column caption='GWP 2017' datatype='real' default-format='C1033%' name='[GWP_2017 GWP_2017]' role='measure' type='quantitative' />
            <column caption='GWP 2018' datatype='real' default-format='C1033%' name='[GWP_2018 GWP_2018]' role='measure' type='quantitative' />
            <column caption='GWP 2019' datatype='real' default-format='C1033%' name='[GWP_2019 GWP_2019]' role='measure' type='quantitative' />
            <column caption='GWP 2020' datatype='real' default-format='C1033%' name='[GWP_2020 GWP_2020]' role='measure' type='quantitative' />
            <column caption='Success Ratio' datatype='real' default-format='p0.0%' name='[Hit Ratio (copy)_25614243741290506]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443347992]' />
            </column>
            <column caption='Policy Count 2016' datatype='integer' name='[PolicyCount_2016 PolicyCount_2016]' role='measure' type='quantitative' />
            <column caption='Policy Count 2017' datatype='integer' name='[PolicyCount_2017 PolicyCount_2017]' role='measure' type='quantitative' />
            <column caption='Policy Count 2018' datatype='integer' name='[PolicyCount_2018 PolicyCount_2018]' role='measure' type='quantitative' />
            <column caption='Policy Count 2019' datatype='integer' name='[PolicyCount_2019 PolicyCount_2019]' role='measure' type='quantitative' />
            <column caption='Policy Count 2020' datatype='integer' name='[PolicyCount_2020 PolicyCount_2020]' role='measure' type='quantitative' />
            <column caption='Region Comparison (copy)' datatype='boolean' name='[Region Comparison (copy)_838513994200027136]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([State (group)],[Parameters].[Region Comparison (copy)_838513994200203265])' />
            </column>
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state state]' new-bin='true'>
                <bin default-name='false' value='&quot;Atlantic Island&quot;'>
                  <value>&quot;PR&quot;</value>
                  <value>&quot;VI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East North Central&quot;'>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;MI&quot;</value>
                  <value>&quot;OH&quot;</value>
                  <value>&quot;WI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East South Central&quot;'>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;KY&quot;</value>
                  <value>&quot;MS&quot;</value>
                  <value>&quot;TN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mid Atlantic Coast&quot;'>
                  <value>&quot;NJ&quot;</value>
                  <value>&quot;NY&quot;</value>
                  <value>&quot;PA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mountain&quot;'>
                  <value>&quot;AZ&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NM&quot;</value>
                  <value>&quot;NV&quot;</value>
                  <value>&quot;UT&quot;</value>
                  <value>&quot;WY&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New England&quot;'>
                  <value>&quot;CT&quot;</value>
                  <value>&quot;ME&quot;</value>
                  <value>&quot;NH&quot;</value>
                  <value>&quot;RI&quot;</value>
                  <value>&quot;VT&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Coast&quot;'>
                  <value>&quot;AK&quot;</value>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;WA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Island&quot;'>
                  <value>&quot;AS&quot;</value>
                  <value>&quot;GU&quot;</value>
                  <value>&quot;HI&quot;</value>
                  <value>&quot;MP&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Atlantic Coast&quot;'>
                  <value>&quot;DC&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;FL&quot;</value>
                  <value>&quot;GA&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;SC&quot;</value>
                  <value>&quot;VA&quot;</value>
                  <value>&quot;WV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West North Central&quot;'>
                  <value>&quot;IA&quot;</value>
                  <value>&quot;KS&quot;</value>
                  <value>&quot;MN&quot;</value>
                  <value>&quot;MO&quot;</value>
                  <value>&quot;ND&quot;</value>
                  <value>&quot;NE&quot;</value>
                  <value>&quot;SD&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West South Central&quot;'>
                  <value>&quot;LA&quot;</value>
                  <value>&quot;OK&quot;</value>
                  <value>&quot;TX&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Submissions 2015' datatype='integer' name='[Submissions_2015 Submissions_2015]' role='measure' type='quantitative' />
            <column caption='Submissions 2016' datatype='integer' name='[Submissions_2016 Submissions_2016]' role='measure' type='quantitative' />
            <column caption='Submissions 2017' datatype='integer' name='[Submissions_2017 Submissions_2017]' role='measure' type='quantitative' />
            <column caption='Submissions 2018' datatype='integer' name='[Submissions_2018 Submissions_2018]' role='measure' type='quantitative' />
            <column caption='Submissions 2019' datatype='integer' name='[Submissions_2019 Submissions_2019]' role='measure' type='quantitative' />
            <column caption='Submissions 2020' datatype='integer' name='[Submissions_2020 Submissions_2020]' role='measure' type='quantitative' />
            <column-instance column='[Region Comparison (copy)_838513994200027136]' derivation='None' name='[none:Region Comparison (copy)_838513994200027136:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_50947001543557137]' derivation='Sum' name='[sum:Calculation_50947001543557137:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Hit Ratio (copy)_25614243741290506]' derivation='User' name='[usr:Hit Ratio (copy)_25614243741290506:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_50947001543557137:vtavg:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_50947001543557137:vtavg:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Region Comparison (copy)_838513994200027136:nk]'>
            <groupfilter function='member' level='[none:Region Comparison (copy)_838513994200027136:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Region Comparison (copy)_838513994200027136:nk]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Latitude (generated)]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Longitude (generated)]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[state state]' value='false' />
            <format attr='break-on-special' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[state state]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[state state]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)] / [federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names])</rows>
        <cols />
      </table>
      <simple-id uuid='{49660302-8422-4D3D-9C85-99EA71829B70}' />
    </worksheet>
    <worksheet name='GWP'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>GWP Totals</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare Broker' datatype='string' name='[Broker Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Torres Ltd NY&quot;'>
              <calculation class='tableau' formula='&quot;Torres Ltd NY&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column caption='Compare1' datatype='boolean' name='[Calculation_420242176005550093]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([broker_name broker_name],[Parameters].[Broker Name Parameter])' />
            </column>
            <column caption='Hit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_509188253665107975]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443241495]' />
            </column>
            <column caption='Policy Total' datatype='integer' name='[Calculation_810366478443126806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([PolicyCount_2016 PolicyCount_2016])+ZN([PolicyCount_2017 PolicyCount_2017])+ZN([PolicyCount_2018 PolicyCount_2018])+ZN([PolicyCount_2019 PolicyCount_2019])+ZN([PolicyCount_2020 PolicyCount_2020]))' />
            </column>
            <column caption='Quote Total' datatype='integer' name='[Calculation_810366478443241495]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([QuoteCount_2014 QuoteCount_2014])+ZN([QuoteCount_2015 QuoteCount_2015])+ZN([QuoteCount_2016 QuoteCount_2016])+ZN([QuoteCount_2017 QuoteCount_2017])+ZN([QuoteCount_2018 QuoteCount_2018])+ZN([QuoteCount_2019 QuoteCount_2019])+ZN([QuoteCount_2020 QuoteCount_2020]))' />
            </column>
            <column caption='Submission Total' datatype='integer' name='[Calculation_810366478443347992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Submissions_2015 Submissions_2015])+ZN([Submissions_2016 Submissions_2016])+ZN([Submissions_2017 Submissions_2017])+ZN([Submissions_2018 Submissions_2018])+ZN([Submissions_2019 Submissions_2019])+ZN([Submissions_2020 Submissions_2020]))' />
            </column>
            <column caption='Quote Ratio' datatype='real' default-format='p0.0%' name='[Calculation_810366478443474969]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443241495] / [Calculation_810366478443347992]' />
            </column>
            <column caption='GWP 2016' datatype='real' default-format='C1033%' name='[GWP_2016 GWP_2016]' role='measure' type='quantitative' />
            <column caption='GWP 2017' datatype='real' default-format='C1033%' name='[GWP_2017 GWP_2017]' role='measure' type='quantitative' />
            <column caption='GWP 2018' datatype='real' default-format='C1033%' name='[GWP_2018 GWP_2018]' role='measure' type='quantitative' />
            <column caption='GWP 2019' datatype='real' default-format='C1033%' name='[GWP_2019 GWP_2019]' role='measure' type='quantitative' />
            <column caption='GWP 2020' datatype='real' default-format='C1033%' name='[GWP_2020 GWP_2020]' role='measure' type='quantitative' />
            <column caption='Success Ratio' datatype='real' default-format='p0.0%' name='[Hit Ratio (copy)_25614243741290506]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443347992]' />
            </column>
            <column caption='Policy Count 2016' datatype='integer' name='[PolicyCount_2016 PolicyCount_2016]' role='measure' type='quantitative' />
            <column caption='Policy Count 2017' datatype='integer' name='[PolicyCount_2017 PolicyCount_2017]' role='measure' type='quantitative' />
            <column caption='Policy Count 2018' datatype='integer' name='[PolicyCount_2018 PolicyCount_2018]' role='measure' type='quantitative' />
            <column caption='Policy Count 2019' datatype='integer' name='[PolicyCount_2019 PolicyCount_2019]' role='measure' type='quantitative' />
            <column caption='Policy Count 2020' datatype='integer' name='[PolicyCount_2020 PolicyCount_2020]' role='measure' type='quantitative' />
            <column caption='Quote Count 2014' datatype='integer' name='[QuoteCount_2014 QuoteCount_2014]' role='measure' type='quantitative' />
            <column caption='Quote Count 2015' datatype='integer' name='[QuoteCount_2015 QuoteCount_2015]' role='measure' type='quantitative' />
            <column caption='Quote Count 2016' datatype='integer' name='[QuoteCount_2016 QuoteCount_2016]' role='measure' type='quantitative' />
            <column caption='Quote Count 2017' datatype='integer' name='[QuoteCount_2017 QuoteCount_2017]' role='measure' type='quantitative' />
            <column caption='Quote Count 2018' datatype='integer' name='[QuoteCount_2018 QuoteCount_2018]' role='measure' type='quantitative' />
            <column caption='Quote Count 2019' datatype='integer' name='[QuoteCount_2019 QuoteCount_2019]' role='measure' type='quantitative' />
            <column caption='Quote Count 2020' datatype='integer' name='[QuoteCount_2020 QuoteCount_2020]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state state]' new-bin='true'>
                <bin default-name='false' value='&quot;Atlantic Island&quot;'>
                  <value>&quot;PR&quot;</value>
                  <value>&quot;VI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East North Central&quot;'>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;MI&quot;</value>
                  <value>&quot;OH&quot;</value>
                  <value>&quot;WI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East South Central&quot;'>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;KY&quot;</value>
                  <value>&quot;MS&quot;</value>
                  <value>&quot;TN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mid Atlantic Coast&quot;'>
                  <value>&quot;NJ&quot;</value>
                  <value>&quot;NY&quot;</value>
                  <value>&quot;PA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mountain&quot;'>
                  <value>&quot;AZ&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NM&quot;</value>
                  <value>&quot;NV&quot;</value>
                  <value>&quot;UT&quot;</value>
                  <value>&quot;WY&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New England&quot;'>
                  <value>&quot;CT&quot;</value>
                  <value>&quot;ME&quot;</value>
                  <value>&quot;NH&quot;</value>
                  <value>&quot;RI&quot;</value>
                  <value>&quot;VT&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Coast&quot;'>
                  <value>&quot;AK&quot;</value>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;WA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Island&quot;'>
                  <value>&quot;AS&quot;</value>
                  <value>&quot;GU&quot;</value>
                  <value>&quot;HI&quot;</value>
                  <value>&quot;MP&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Atlantic Coast&quot;'>
                  <value>&quot;DC&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;FL&quot;</value>
                  <value>&quot;GA&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;SC&quot;</value>
                  <value>&quot;VA&quot;</value>
                  <value>&quot;WV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West North Central&quot;'>
                  <value>&quot;IA&quot;</value>
                  <value>&quot;KS&quot;</value>
                  <value>&quot;MN&quot;</value>
                  <value>&quot;MO&quot;</value>
                  <value>&quot;ND&quot;</value>
                  <value>&quot;NE&quot;</value>
                  <value>&quot;SD&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West South Central&quot;'>
                  <value>&quot;LA&quot;</value>
                  <value>&quot;OK&quot;</value>
                  <value>&quot;TX&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Submissions 2015' datatype='integer' name='[Submissions_2015 Submissions_2015]' role='measure' type='quantitative' />
            <column caption='Submissions 2016' datatype='integer' name='[Submissions_2016 Submissions_2016]' role='measure' type='quantitative' />
            <column caption='Submissions 2017' datatype='integer' name='[Submissions_2017 Submissions_2017]' role='measure' type='quantitative' />
            <column caption='Submissions 2018' datatype='integer' name='[Submissions_2018 Submissions_2018]' role='measure' type='quantitative' />
            <column caption='Submissions 2019' datatype='integer' name='[Submissions_2019 Submissions_2019]' role='measure' type='quantitative' />
            <column caption='Submissions 2020' datatype='integer' name='[Submissions_2020 Submissions_2020]' role='measure' type='quantitative' />
            <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_420242176005550093]' derivation='None' name='[none:Calculation_420242176005550093:nk]' pivot='key' type='nominal' />
            <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[GWP_2016 GWP_2016]' derivation='Sum' name='[sum:GWP_2016 GWP_2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GWP_2017 GWP_2017]' derivation='Sum' name='[sum:GWP_2017 GWP_2017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GWP_2018 GWP_2018]' derivation='Sum' name='[sum:GWP_2018 GWP_2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GWP_2019 GWP_2019]' derivation='Sum' name='[sum:GWP_2019 GWP_2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GWP_2020 GWP_2020]' derivation='Sum' name='[sum:GWP_2020 GWP_2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_509188253665107975]' derivation='User' name='[usr:Calculation_509188253665107975:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_810366478443474969]' derivation='User' name='[usr:Calculation_810366478443474969:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hit Ratio (copy)_25614243741290506]' derivation='User' name='[usr:Hit Ratio (copy)_25614243741290506:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2016 GWP_2016:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2017 GWP_2017:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2018 GWP_2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2019 GWP_2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2020 GWP_2020:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_509188253665107975:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443474969:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]'>
            <groupfilter function='member' level='[none:Calculation_420242176005550093:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' direction='DESC' using='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' />
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' scope='cols' value='' />
            <format attr='height' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' value='33' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_509188253665107975:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' value='p0.0%' />
            <format attr='height' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='32' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]' value='#efebe8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='false' />
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' value='false' />
            <format attr='break-on-special' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1314364671707153' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)] / ([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk] / [federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]))</rows>
        <cols>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{97F72847-87B7-469C-B774-C3CAED661149}' />
    </worksheet>
    <worksheet name='GWP '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>GWP Totals</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare Broker ' datatype='string' name='[Compare Broker (copy)_420242175999508488]' param-domain-type='list' role='measure' type='nominal' value='&quot;Mckenzie, Hunt and Rodriguez OH&quot;'>
              <calculation class='tableau' formula='&quot;Mckenzie, Hunt and Rodriguez OH&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column caption='Hit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_509188253665107975]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443241495]' />
            </column>
            <column caption='Policy Total' datatype='integer' name='[Calculation_810366478443126806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([PolicyCount_2016 PolicyCount_2016])+ZN([PolicyCount_2017 PolicyCount_2017])+ZN([PolicyCount_2018 PolicyCount_2018])+ZN([PolicyCount_2019 PolicyCount_2019])+ZN([PolicyCount_2020 PolicyCount_2020]))' />
            </column>
            <column caption='Quote Total' datatype='integer' name='[Calculation_810366478443241495]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([QuoteCount_2014 QuoteCount_2014])+ZN([QuoteCount_2015 QuoteCount_2015])+ZN([QuoteCount_2016 QuoteCount_2016])+ZN([QuoteCount_2017 QuoteCount_2017])+ZN([QuoteCount_2018 QuoteCount_2018])+ZN([QuoteCount_2019 QuoteCount_2019])+ZN([QuoteCount_2020 QuoteCount_2020]))' />
            </column>
            <column caption='Submission Total' datatype='integer' name='[Calculation_810366478443347992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Submissions_2015 Submissions_2015])+ZN([Submissions_2016 Submissions_2016])+ZN([Submissions_2017 Submissions_2017])+ZN([Submissions_2018 Submissions_2018])+ZN([Submissions_2019 Submissions_2019])+ZN([Submissions_2020 Submissions_2020]))' />
            </column>
            <column caption='Quote Ratio' datatype='real' default-format='p0.0%' name='[Calculation_810366478443474969]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443241495] / [Calculation_810366478443347992]' />
            </column>
            <column caption='Compare1 (copy)' datatype='boolean' name='[Compare1 (copy)_420242176005783566]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([broker_name broker_name],[Parameters].[Compare Broker (copy)_420242175999508488])' />
            </column>
            <column caption='GWP 2016' datatype='real' default-format='C1033%' name='[GWP_2016 GWP_2016]' role='measure' type='quantitative' />
            <column caption='GWP 2017' datatype='real' default-format='C1033%' name='[GWP_2017 GWP_2017]' role='measure' type='quantitative' />
            <column caption='GWP 2018' datatype='real' default-format='C1033%' name='[GWP_2018 GWP_2018]' role='measure' type='quantitative' />
            <column caption='GWP 2019' datatype='real' default-format='C1033%' name='[GWP_2019 GWP_2019]' role='measure' type='quantitative' />
            <column caption='GWP 2020' datatype='real' default-format='C1033%' name='[GWP_2020 GWP_2020]' role='measure' type='quantitative' />
            <column caption='Success Ratio' datatype='real' default-format='p0.0%' name='[Hit Ratio (copy)_25614243741290506]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443347992]' />
            </column>
            <column caption='Policy Count 2016' datatype='integer' name='[PolicyCount_2016 PolicyCount_2016]' role='measure' type='quantitative' />
            <column caption='Policy Count 2017' datatype='integer' name='[PolicyCount_2017 PolicyCount_2017]' role='measure' type='quantitative' />
            <column caption='Policy Count 2018' datatype='integer' name='[PolicyCount_2018 PolicyCount_2018]' role='measure' type='quantitative' />
            <column caption='Policy Count 2019' datatype='integer' name='[PolicyCount_2019 PolicyCount_2019]' role='measure' type='quantitative' />
            <column caption='Policy Count 2020' datatype='integer' name='[PolicyCount_2020 PolicyCount_2020]' role='measure' type='quantitative' />
            <column caption='Quote Count 2014' datatype='integer' name='[QuoteCount_2014 QuoteCount_2014]' role='measure' type='quantitative' />
            <column caption='Quote Count 2015' datatype='integer' name='[QuoteCount_2015 QuoteCount_2015]' role='measure' type='quantitative' />
            <column caption='Quote Count 2016' datatype='integer' name='[QuoteCount_2016 QuoteCount_2016]' role='measure' type='quantitative' />
            <column caption='Quote Count 2017' datatype='integer' name='[QuoteCount_2017 QuoteCount_2017]' role='measure' type='quantitative' />
            <column caption='Quote Count 2018' datatype='integer' name='[QuoteCount_2018 QuoteCount_2018]' role='measure' type='quantitative' />
            <column caption='Quote Count 2019' datatype='integer' name='[QuoteCount_2019 QuoteCount_2019]' role='measure' type='quantitative' />
            <column caption='Quote Count 2020' datatype='integer' name='[QuoteCount_2020 QuoteCount_2020]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state state]' new-bin='true'>
                <bin default-name='false' value='&quot;Atlantic Island&quot;'>
                  <value>&quot;PR&quot;</value>
                  <value>&quot;VI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East North Central&quot;'>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;MI&quot;</value>
                  <value>&quot;OH&quot;</value>
                  <value>&quot;WI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East South Central&quot;'>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;KY&quot;</value>
                  <value>&quot;MS&quot;</value>
                  <value>&quot;TN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mid Atlantic Coast&quot;'>
                  <value>&quot;NJ&quot;</value>
                  <value>&quot;NY&quot;</value>
                  <value>&quot;PA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mountain&quot;'>
                  <value>&quot;AZ&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NM&quot;</value>
                  <value>&quot;NV&quot;</value>
                  <value>&quot;UT&quot;</value>
                  <value>&quot;WY&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New England&quot;'>
                  <value>&quot;CT&quot;</value>
                  <value>&quot;ME&quot;</value>
                  <value>&quot;NH&quot;</value>
                  <value>&quot;RI&quot;</value>
                  <value>&quot;VT&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Coast&quot;'>
                  <value>&quot;AK&quot;</value>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;WA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Island&quot;'>
                  <value>&quot;AS&quot;</value>
                  <value>&quot;GU&quot;</value>
                  <value>&quot;HI&quot;</value>
                  <value>&quot;MP&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Atlantic Coast&quot;'>
                  <value>&quot;DC&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;FL&quot;</value>
                  <value>&quot;GA&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;SC&quot;</value>
                  <value>&quot;VA&quot;</value>
                  <value>&quot;WV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West North Central&quot;'>
                  <value>&quot;IA&quot;</value>
                  <value>&quot;KS&quot;</value>
                  <value>&quot;MN&quot;</value>
                  <value>&quot;MO&quot;</value>
                  <value>&quot;ND&quot;</value>
                  <value>&quot;NE&quot;</value>
                  <value>&quot;SD&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West South Central&quot;'>
                  <value>&quot;LA&quot;</value>
                  <value>&quot;OK&quot;</value>
                  <value>&quot;TX&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Submissions 2015' datatype='integer' name='[Submissions_2015 Submissions_2015]' role='measure' type='quantitative' />
            <column caption='Submissions 2016' datatype='integer' name='[Submissions_2016 Submissions_2016]' role='measure' type='quantitative' />
            <column caption='Submissions 2017' datatype='integer' name='[Submissions_2017 Submissions_2017]' role='measure' type='quantitative' />
            <column caption='Submissions 2018' datatype='integer' name='[Submissions_2018 Submissions_2018]' role='measure' type='quantitative' />
            <column caption='Submissions 2019' datatype='integer' name='[Submissions_2019 Submissions_2019]' role='measure' type='quantitative' />
            <column caption='Submissions 2020' datatype='integer' name='[Submissions_2020 Submissions_2020]' role='measure' type='quantitative' />
            <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
            <column-instance column='[Compare1 (copy)_420242176005783566]' derivation='None' name='[none:Compare1 (copy)_420242176005783566:nk]' pivot='key' type='nominal' />
            <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[GWP_2016 GWP_2016]' derivation='Sum' name='[sum:GWP_2016 GWP_2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GWP_2017 GWP_2017]' derivation='Sum' name='[sum:GWP_2017 GWP_2017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GWP_2018 GWP_2018]' derivation='Sum' name='[sum:GWP_2018 GWP_2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GWP_2019 GWP_2019]' derivation='Sum' name='[sum:GWP_2019 GWP_2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GWP_2020 GWP_2020]' derivation='Sum' name='[sum:GWP_2020 GWP_2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_509188253665107975]' derivation='User' name='[usr:Calculation_509188253665107975:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_810366478443474969]' derivation='User' name='[usr:Calculation_810366478443474969:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hit Ratio (copy)_25614243741290506]' derivation='User' name='[usr:Hit Ratio (copy)_25614243741290506:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2016 GWP_2016:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2017 GWP_2017:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2018 GWP_2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2019 GWP_2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2020 GWP_2020:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_509188253665107975:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443474969:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]'>
            <groupfilter function='member' level='[none:Compare1 (copy)_420242176005783566:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' direction='DESC' using='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' />
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_509188253665107975:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' value='p0.0%' />
            <format attr='height' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='33' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]' value='#efebe8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]' value='false' />
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1314364671707153' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)] / ([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk] / [federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]))</rows>
        <cols>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{BFD010FE-E428-4167-B549-F2D4128719AD}' />
    </worksheet>
    <worksheet name='GWP by TIV'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Avg TIV Overall vs. GWP Total.  Illustrates the relationship between the value of the property being insured by a written policy and the revenue generated for Alchemy. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
          </datasources>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column caption='Avg TIV 2016' datatype='real' name='[AvgTIV_2016 AvgTIV_2016]' role='measure' type='quantitative' />
            <column caption='Avg TIV 2017' datatype='real' name='[AvgTIV_2017 AvgTIV_2017]' role='measure' type='quantitative' />
            <column caption='Avg TIV 2018' datatype='real' name='[AvgTIV_2018 AvgTIV_2018]' role='measure' type='quantitative' />
            <column caption='Avg TIV 2019' datatype='real' name='[AvgTIV_2019 AvgTIV_2019]' role='measure' type='quantitative' />
            <column caption='Avg TIV 2020' datatype='real' name='[AvgTIV_2020 AvgTIV_2020]' role='measure' type='quantitative' />
            <column caption='GWP Total' datatype='real' name='[Calculation_242349976118923277]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([GWP_2016 GWP_2016])+ZN([GWP_2017 GWP_2017])+ZN([GWP_2018 GWP_2018])+ZN([GWP_2019 GWP_2019])+ZN([GWP_2020 GWP_2020]))' />
            </column>
            <column caption='NullEliminator' datatype='boolean' name='[Calculation_947726284754411527]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[PolicyCount_2016 PolicyCount_2016] == 0 OR  [PolicyCount_2017 PolicyCount_2017]==0 OR [PolicyCount_2018 PolicyCount_2018]==0 OR [PolicyCount_2019 PolicyCount_2019]==0 OR [PolicyCount_2020 PolicyCount_2020]==0' />
            </column>
            <column caption='Avg TIV Overall' datatype='real' name='[Calculation_994451118823399424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG(ZN([AvgTIV_2020 AvgTIV_2020])+ZN([AvgTIV_2019 AvgTIV_2019])+ZN([AvgTIV_2018 AvgTIV_2018])+ZN([AvgTIV_2017 AvgTIV_2017])+ZN([AvgTIV_2016 AvgTIV_2016]))' />
            </column>
            <column caption='GWP 2016' datatype='real' default-format='C1033%' name='[GWP_2016 GWP_2016]' role='measure' type='quantitative' />
            <column caption='GWP 2017' datatype='real' default-format='C1033%' name='[GWP_2017 GWP_2017]' role='measure' type='quantitative' />
            <column caption='GWP 2018' datatype='real' default-format='C1033%' name='[GWP_2018 GWP_2018]' role='measure' type='quantitative' />
            <column caption='GWP 2019' datatype='real' default-format='C1033%' name='[GWP_2019 GWP_2019]' role='measure' type='quantitative' />
            <column caption='GWP 2020' datatype='real' default-format='C1033%' name='[GWP_2020 GWP_2020]' role='measure' type='quantitative' />
            <column caption='Policy Count 2016' datatype='integer' name='[PolicyCount_2016 PolicyCount_2016]' role='measure' type='quantitative' />
            <column caption='Policy Count 2017' datatype='integer' name='[PolicyCount_2017 PolicyCount_2017]' role='measure' type='quantitative' />
            <column caption='Policy Count 2018' datatype='integer' name='[PolicyCount_2018 PolicyCount_2018]' role='measure' type='quantitative' />
            <column caption='Policy Count 2019' datatype='integer' name='[PolicyCount_2019 PolicyCount_2019]' role='measure' type='quantitative' />
            <column caption='Policy Count 2020' datatype='integer' name='[PolicyCount_2020 PolicyCount_2020]' role='measure' type='quantitative' />
            <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_947726284754411527]' derivation='None' name='[none:Calculation_947726284754411527:nk]' pivot='key' type='nominal' />
            <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_242349976118923277]' derivation='User' name='[usr:Calculation_242349976118923277:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_994451118823399424]' derivation='User' name='[usr:Calculation_994451118823399424:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_947726284754411527:nk]'>
            <groupfilter function='member' level='[none:Calculation_947726284754411527:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_947726284754411527:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_994451118823399424:qk]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_994451118823399424:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_994451118823399424:qk]' z-order='1' />
            <reference-line axis-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]' z-order='2' />
            <reference-line axis-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_994451118823399424:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline2' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_994451118823399424:qk]' z-order='3' />
            <reference-line axis-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_994451118823399424:qk]' enable-instant-analytics='true' formula='median' id='refline3' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_994451118823399424:qk]' z-order='4' />
            <reference-line axis-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline4' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]' z-order='5' />
            <reference-line axis-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]' enable-instant-analytics='true' formula='median' id='refline5' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]' z-order='6' />
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.91154694557189941' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]</rows>
        <cols>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_994451118823399424:qk]</cols>
      </table>
      <simple-id uuid='{6901D331-2D34-450A-BAB8-C662BECA5C3A}' />
    </worksheet>
    <worksheet name='GWP: Avg. Growth and Total'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>GWP: Avg. Growth and Total</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare Broker ' datatype='string' name='[Compare Broker (copy)_420242175999508488]' param-domain-type='list' role='measure' type='nominal' value='&quot;Mckenzie, Hunt and Rodriguez OH&quot;'>
              <calculation class='tableau' formula='&quot;Mckenzie, Hunt and Rodriguez OH&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column caption='GWP Total' datatype='real' name='[Calculation_242349976118923277]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([GWP_2016 GWP_2016])+ZN([GWP_2017 GWP_2017])+ZN([GWP_2018 GWP_2018])+ZN([GWP_2019 GWP_2019])+ZN([GWP_2020 GWP_2020]))' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2019-20' datatype='real' default-format='p0.00%' name='[Calculation_50947001529171978]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2020 GWP_2020])-ZN([GWP_2019 GWP_2019])))/ZN([GWP_2019 GWP_2019])' />
            </column>
            <column caption='Avg GWP Growth YoY' datatype='real' default-format='p0.00%' name='[Calculation_50947001543557137]' role='measure' type='quantitative' visual-totals='Avg'>
              <calculation class='tableau' formula='([GWP Growth 2017-18 (copy)_50947001529905166]+[GWP Growth 2018-19 (copy)_50947001529724941]+[GWP Growth 2019-20 (copy)_50947001529548812]+[Calculation_50947001529171978])/4' />
            </column>
            <column caption='Policy Total' datatype='integer' name='[Calculation_810366478443126806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([PolicyCount_2016 PolicyCount_2016])+ZN([PolicyCount_2017 PolicyCount_2017])+ZN([PolicyCount_2018 PolicyCount_2018])+ZN([PolicyCount_2019 PolicyCount_2019])+ZN([PolicyCount_2020 PolicyCount_2020]))' />
            </column>
            <column caption='Submission Total' datatype='integer' name='[Calculation_810366478443347992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Submissions_2015 Submissions_2015])+ZN([Submissions_2016 Submissions_2016])+ZN([Submissions_2017 Submissions_2017])+ZN([Submissions_2018 Submissions_2018])+ZN([Submissions_2019 Submissions_2019])+ZN([Submissions_2020 Submissions_2020]))' />
            </column>
            <column caption='Compare1 (copy)' datatype='boolean' name='[Compare1 (copy)_420242176005783566]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([broker_name broker_name],[Parameters].[Compare Broker (copy)_420242175999508488])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2016-17' datatype='real' default-format='p0.00%' name='[GWP Growth 2017-18 (copy)_50947001529905166]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2017 GWP_2017])-ZN([GWP_2016 GWP_2016])))/ZN([GWP_2016 GWP_2016])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2017-18' datatype='real' default-format='p0.00%' name='[GWP Growth 2018-19 (copy)_50947001529724941]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN ([GWP_2018 GWP_2018])- ZN( [GWP_2017 GWP_2017]) ) /ZN([GWP_2017 GWP_2017])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2018-19' datatype='real' default-format='p0.00%' name='[GWP Growth 2019-20 (copy)_50947001529548812]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2019 GWP_2019])-ZN([GWP_2018 GWP_2018])))/ZN([GWP_2018 GWP_2018])' />
            </column>
            <column caption='GWP 2016' datatype='real' default-format='C1033%' name='[GWP_2016 GWP_2016]' role='measure' type='quantitative' />
            <column caption='GWP 2017' datatype='real' default-format='C1033%' name='[GWP_2017 GWP_2017]' role='measure' type='quantitative' />
            <column caption='GWP 2018' datatype='real' default-format='C1033%' name='[GWP_2018 GWP_2018]' role='measure' type='quantitative' />
            <column caption='GWP 2019' datatype='real' default-format='C1033%' name='[GWP_2019 GWP_2019]' role='measure' type='quantitative' />
            <column caption='GWP 2020' datatype='real' default-format='C1033%' name='[GWP_2020 GWP_2020]' role='measure' type='quantitative' />
            <column caption='Success Ratio' datatype='real' default-format='p0.0%' name='[Hit Ratio (copy)_25614243741290506]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443347992]' />
            </column>
            <column caption='Policy Count 2016' datatype='integer' name='[PolicyCount_2016 PolicyCount_2016]' role='measure' type='quantitative' />
            <column caption='Policy Count 2017' datatype='integer' name='[PolicyCount_2017 PolicyCount_2017]' role='measure' type='quantitative' />
            <column caption='Policy Count 2018' datatype='integer' name='[PolicyCount_2018 PolicyCount_2018]' role='measure' type='quantitative' />
            <column caption='Policy Count 2019' datatype='integer' name='[PolicyCount_2019 PolicyCount_2019]' role='measure' type='quantitative' />
            <column caption='Policy Count 2020' datatype='integer' name='[PolicyCount_2020 PolicyCount_2020]' role='measure' type='quantitative' />
            <column caption='Submissions 2015' datatype='integer' name='[Submissions_2015 Submissions_2015]' role='measure' type='quantitative' />
            <column caption='Submissions 2016' datatype='integer' name='[Submissions_2016 Submissions_2016]' role='measure' type='quantitative' />
            <column caption='Submissions 2017' datatype='integer' name='[Submissions_2017 Submissions_2017]' role='measure' type='quantitative' />
            <column caption='Submissions 2018' datatype='integer' name='[Submissions_2018 Submissions_2018]' role='measure' type='quantitative' />
            <column caption='Submissions 2019' datatype='integer' name='[Submissions_2019 Submissions_2019]' role='measure' type='quantitative' />
            <column caption='Submissions 2020' datatype='integer' name='[Submissions_2020 Submissions_2020]' role='measure' type='quantitative' />
            <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
            <column-instance column='[Compare1 (copy)_420242176005783566]' derivation='None' name='[none:Compare1 (copy)_420242176005783566:nk]' pivot='key' type='nominal' />
            <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_50947001543557137]' derivation='Sum' name='[sum:Calculation_50947001543557137:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Calculation_242349976118923277]' derivation='User' name='[usr:Calculation_242349976118923277:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hit Ratio (copy)_25614243741290506]' derivation='User' name='[usr:Hit Ratio (copy)_25614243741290506:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_50947001543557137:vtavg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]'>
            <groupfilter function='member' level='[none:Compare1 (copy)_420242176005783566:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='122' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='164' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</rows>
        <cols>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]</cols>
      </table>
      <simple-id uuid='{D285F17B-91E9-4345-B614-680355A46F51}' />
    </worksheet>
    <worksheet name='GWP: Avg. Growth and Total '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>GWP: Avg. Growth and Total</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare Broker' datatype='string' name='[Broker Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Torres Ltd NY&quot;'>
              <calculation class='tableau' formula='&quot;Torres Ltd NY&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column caption='GWP Total' datatype='real' name='[Calculation_242349976118923277]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([GWP_2016 GWP_2016])+ZN([GWP_2017 GWP_2017])+ZN([GWP_2018 GWP_2018])+ZN([GWP_2019 GWP_2019])+ZN([GWP_2020 GWP_2020]))' />
            </column>
            <column caption='Compare1' datatype='boolean' name='[Calculation_420242176005550093]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([broker_name broker_name],[Parameters].[Broker Name Parameter])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2019-20' datatype='real' default-format='p0.00%' name='[Calculation_50947001529171978]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2020 GWP_2020])-ZN([GWP_2019 GWP_2019])))/ZN([GWP_2019 GWP_2019])' />
            </column>
            <column caption='Avg GWP Growth YoY' datatype='real' default-format='p0.00%' name='[Calculation_50947001543557137]' role='measure' type='quantitative' visual-totals='Avg'>
              <calculation class='tableau' formula='([GWP Growth 2017-18 (copy)_50947001529905166]+[GWP Growth 2018-19 (copy)_50947001529724941]+[GWP Growth 2019-20 (copy)_50947001529548812]+[Calculation_50947001529171978])/4' />
            </column>
            <column caption='Policy Total' datatype='integer' name='[Calculation_810366478443126806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([PolicyCount_2016 PolicyCount_2016])+ZN([PolicyCount_2017 PolicyCount_2017])+ZN([PolicyCount_2018 PolicyCount_2018])+ZN([PolicyCount_2019 PolicyCount_2019])+ZN([PolicyCount_2020 PolicyCount_2020]))' />
            </column>
            <column caption='Submission Total' datatype='integer' name='[Calculation_810366478443347992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Submissions_2015 Submissions_2015])+ZN([Submissions_2016 Submissions_2016])+ZN([Submissions_2017 Submissions_2017])+ZN([Submissions_2018 Submissions_2018])+ZN([Submissions_2019 Submissions_2019])+ZN([Submissions_2020 Submissions_2020]))' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2016-17' datatype='real' default-format='p0.00%' name='[GWP Growth 2017-18 (copy)_50947001529905166]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2017 GWP_2017])-ZN([GWP_2016 GWP_2016])))/ZN([GWP_2016 GWP_2016])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2017-18' datatype='real' default-format='p0.00%' name='[GWP Growth 2018-19 (copy)_50947001529724941]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN ([GWP_2018 GWP_2018])- ZN( [GWP_2017 GWP_2017]) ) /ZN([GWP_2017 GWP_2017])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2018-19' datatype='real' default-format='p0.00%' name='[GWP Growth 2019-20 (copy)_50947001529548812]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2019 GWP_2019])-ZN([GWP_2018 GWP_2018])))/ZN([GWP_2018 GWP_2018])' />
            </column>
            <column caption='GWP 2016' datatype='real' default-format='C1033%' name='[GWP_2016 GWP_2016]' role='measure' type='quantitative' />
            <column caption='GWP 2017' datatype='real' default-format='C1033%' name='[GWP_2017 GWP_2017]' role='measure' type='quantitative' />
            <column caption='GWP 2018' datatype='real' default-format='C1033%' name='[GWP_2018 GWP_2018]' role='measure' type='quantitative' />
            <column caption='GWP 2019' datatype='real' default-format='C1033%' name='[GWP_2019 GWP_2019]' role='measure' type='quantitative' />
            <column caption='GWP 2020' datatype='real' default-format='C1033%' name='[GWP_2020 GWP_2020]' role='measure' type='quantitative' />
            <column caption='Success Ratio' datatype='real' default-format='p0.0%' name='[Hit Ratio (copy)_25614243741290506]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443347992]' />
            </column>
            <column caption='Policy Count 2016' datatype='integer' name='[PolicyCount_2016 PolicyCount_2016]' role='measure' type='quantitative' />
            <column caption='Policy Count 2017' datatype='integer' name='[PolicyCount_2017 PolicyCount_2017]' role='measure' type='quantitative' />
            <column caption='Policy Count 2018' datatype='integer' name='[PolicyCount_2018 PolicyCount_2018]' role='measure' type='quantitative' />
            <column caption='Policy Count 2019' datatype='integer' name='[PolicyCount_2019 PolicyCount_2019]' role='measure' type='quantitative' />
            <column caption='Policy Count 2020' datatype='integer' name='[PolicyCount_2020 PolicyCount_2020]' role='measure' type='quantitative' />
            <column caption='Submissions 2015' datatype='integer' name='[Submissions_2015 Submissions_2015]' role='measure' type='quantitative' />
            <column caption='Submissions 2016' datatype='integer' name='[Submissions_2016 Submissions_2016]' role='measure' type='quantitative' />
            <column caption='Submissions 2017' datatype='integer' name='[Submissions_2017 Submissions_2017]' role='measure' type='quantitative' />
            <column caption='Submissions 2018' datatype='integer' name='[Submissions_2018 Submissions_2018]' role='measure' type='quantitative' />
            <column caption='Submissions 2019' datatype='integer' name='[Submissions_2019 Submissions_2019]' role='measure' type='quantitative' />
            <column caption='Submissions 2020' datatype='integer' name='[Submissions_2020 Submissions_2020]' role='measure' type='quantitative' />
            <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_420242176005550093]' derivation='None' name='[none:Calculation_420242176005550093:nk]' pivot='key' type='nominal' />
            <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_50947001543557137]' derivation='Sum' name='[sum:Calculation_50947001543557137:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Calculation_242349976118923277]' derivation='User' name='[usr:Calculation_242349976118923277:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hit Ratio (copy)_25614243741290506]' derivation='User' name='[usr:Hit Ratio (copy)_25614243741290506:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_50947001543557137:vtavg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]'>
            <groupfilter function='member' level='[none:Calculation_420242176005550093:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='122' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='164' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' />
              <lod column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</rows>
        <cols>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]</cols>
      </table>
      <simple-id uuid='{40BAF25A-C8BA-4C57-9C31-9F79AACCC620}' />
    </worksheet>
    <worksheet name='Overall Distribution: GWP Growth by Success Ratio'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Overall Distribution: GWP Growth by Success Ratio</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Overall measure of broker quality, illustrating the relationship between the likelihood that a given brokers&apos; submissions will become policies and the revenue that broker represents to Alchemy. Brokers who perform on this chart consistently submit worthwhile risks that become policies, and bring in significant revenue — through either individual policy size or overall policy volume.
</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
          </datasources>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column aggregation='Avg' caption='GWP Growth 2019-20' datatype='real' default-format='p0.00%' name='[Calculation_50947001529171978]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2020 GWP_2020])-ZN([GWP_2019 GWP_2019])))/ZN([GWP_2019 GWP_2019])' />
            </column>
            <column caption='Avg GWP Growth YoY' datatype='real' default-format='p0.00%' name='[Calculation_50947001543557137]' role='measure' type='quantitative' visual-totals='Avg'>
              <calculation class='tableau' formula='([GWP Growth 2017-18 (copy)_50947001529905166]+[GWP Growth 2018-19 (copy)_50947001529724941]+[GWP Growth 2019-20 (copy)_50947001529548812]+[Calculation_50947001529171978])/4' />
            </column>
            <column caption='Policy Total' datatype='integer' name='[Calculation_810366478443126806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([PolicyCount_2016 PolicyCount_2016])+ZN([PolicyCount_2017 PolicyCount_2017])+ZN([PolicyCount_2018 PolicyCount_2018])+ZN([PolicyCount_2019 PolicyCount_2019])+ZN([PolicyCount_2020 PolicyCount_2020]))' />
            </column>
            <column caption='Submission Total' datatype='integer' name='[Calculation_810366478443347992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Submissions_2015 Submissions_2015])+ZN([Submissions_2016 Submissions_2016])+ZN([Submissions_2017 Submissions_2017])+ZN([Submissions_2018 Submissions_2018])+ZN([Submissions_2019 Submissions_2019])+ZN([Submissions_2020 Submissions_2020]))' />
            </column>
            <column caption='NullEliminator' datatype='boolean' name='[Calculation_947726284754411527]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[PolicyCount_2016 PolicyCount_2016] == 0 OR  [PolicyCount_2017 PolicyCount_2017]==0 OR [PolicyCount_2018 PolicyCount_2018]==0 OR [PolicyCount_2019 PolicyCount_2019]==0 OR [PolicyCount_2020 PolicyCount_2020]==0' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2016-17' datatype='real' default-format='p0.00%' name='[GWP Growth 2017-18 (copy)_50947001529905166]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2017 GWP_2017])-ZN([GWP_2016 GWP_2016])))/ZN([GWP_2016 GWP_2016])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2017-18' datatype='real' default-format='p0.00%' name='[GWP Growth 2018-19 (copy)_50947001529724941]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN ([GWP_2018 GWP_2018])- ZN( [GWP_2017 GWP_2017]) ) /ZN([GWP_2017 GWP_2017])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2018-19' datatype='real' default-format='p0.00%' name='[GWP Growth 2019-20 (copy)_50947001529548812]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2019 GWP_2019])-ZN([GWP_2018 GWP_2018])))/ZN([GWP_2018 GWP_2018])' />
            </column>
            <column caption='GWP 2016' datatype='real' default-format='C1033%' name='[GWP_2016 GWP_2016]' role='measure' type='quantitative' />
            <column caption='GWP 2017' datatype='real' default-format='C1033%' name='[GWP_2017 GWP_2017]' role='measure' type='quantitative' />
            <column caption='GWP 2018' datatype='real' default-format='C1033%' name='[GWP_2018 GWP_2018]' role='measure' type='quantitative' />
            <column caption='GWP 2019' datatype='real' default-format='C1033%' name='[GWP_2019 GWP_2019]' role='measure' type='quantitative' />
            <column caption='GWP 2020' datatype='real' default-format='C1033%' name='[GWP_2020 GWP_2020]' role='measure' type='quantitative' />
            <column caption='Success Ratio' datatype='real' default-format='p0.0%' name='[Hit Ratio (copy)_25614243741290506]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443347992]' />
            </column>
            <column caption='Policy Count 2016' datatype='integer' name='[PolicyCount_2016 PolicyCount_2016]' role='measure' type='quantitative' />
            <column caption='Policy Count 2017' datatype='integer' name='[PolicyCount_2017 PolicyCount_2017]' role='measure' type='quantitative' />
            <column caption='Policy Count 2018' datatype='integer' name='[PolicyCount_2018 PolicyCount_2018]' role='measure' type='quantitative' />
            <column caption='Policy Count 2019' datatype='integer' name='[PolicyCount_2019 PolicyCount_2019]' role='measure' type='quantitative' />
            <column caption='Policy Count 2020' datatype='integer' name='[PolicyCount_2020 PolicyCount_2020]' role='measure' type='quantitative' />
            <column caption='Submissions 2015' datatype='integer' name='[Submissions_2015 Submissions_2015]' role='measure' type='quantitative' />
            <column caption='Submissions 2016' datatype='integer' name='[Submissions_2016 Submissions_2016]' role='measure' type='quantitative' />
            <column caption='Submissions 2017' datatype='integer' name='[Submissions_2017 Submissions_2017]' role='measure' type='quantitative' />
            <column caption='Submissions 2018' datatype='integer' name='[Submissions_2018 Submissions_2018]' role='measure' type='quantitative' />
            <column caption='Submissions 2019' datatype='integer' name='[Submissions_2019 Submissions_2019]' role='measure' type='quantitative' />
            <column caption='Submissions 2020' datatype='integer' name='[Submissions_2020 Submissions_2020]' role='measure' type='quantitative' />
            <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_947726284754411527]' derivation='None' name='[none:Calculation_947726284754411527:nk]' pivot='key' type='nominal' />
            <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_50947001543557137]' derivation='Sum' name='[sum:Calculation_50947001543557137:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[GWP_2020 GWP_2020]' derivation='Sum' name='[sum:GWP_2020 GWP_2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hit Ratio (copy)_25614243741290506]' derivation='User' name='[usr:Hit Ratio (copy)_25614243741290506:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_947726284754411527:nk]'>
            <groupfilter function='member' level='[none:Calculation_947726284754411527:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' direction='ASC' using='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2020 GWP_2020:qk]' />
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_947726284754411527:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' num-steps='9' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cedee5</color>
                <color>#aecbda</color>
                <color>#90bace</color>
                <color>#75a9c3</color>
                <color>#5c99b8</color>
                <color>#458aac</color>
                <color>#307ba1</color>
                <color>#1d6e95</color>
                <color>#0d618a</color>
                <color>#00557f</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' />
              <lod column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_50947001543557137:vtavg:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline0' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' z-order='1' />
            <reference-line axis-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' z-order='2' />
            <reference-line axis-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_50947001543557137:vtavg:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline2' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_50947001543557137:vtavg:qk]' z-order='3' />
            <reference-line axis-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_50947001543557137:vtavg:qk]' enable-instant-analytics='true' formula='median' id='refline3' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_50947001543557137:vtavg:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='510' />
                <format attr='maxheight' value='510' />
                <format attr='minwidth' value='469' />
                <format attr='maxwidth' value='469' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_50947001543557137:vtavg:qk]</rows>
        <cols>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]</cols>
      </table>
      <simple-id uuid='{8DBC0569-5350-461C-B3A4-B336A0A0DC92}' />
    </worksheet>
    <worksheet name='Overall Distribution: GWP Total by Success Ratio'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Overall Distribution: GWP Total by Success Ratio</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Overall measure of broker quality, illustrating the relationship between the likelihood that a given brokers&apos; submissions will become policies and the revenue that broker represents to Alchemy. Brokers who perform on this chart consistently submit worthwhile risks that become policies, and bring in significant revenue — through either individual policy size or overall policy volume.
</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
          </datasources>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column caption='GWP Total' datatype='real' name='[Calculation_242349976118923277]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([GWP_2016 GWP_2016])+ZN([GWP_2017 GWP_2017])+ZN([GWP_2018 GWP_2018])+ZN([GWP_2019 GWP_2019])+ZN([GWP_2020 GWP_2020]))' />
            </column>
            <column caption='Policy Total' datatype='integer' name='[Calculation_810366478443126806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([PolicyCount_2016 PolicyCount_2016])+ZN([PolicyCount_2017 PolicyCount_2017])+ZN([PolicyCount_2018 PolicyCount_2018])+ZN([PolicyCount_2019 PolicyCount_2019])+ZN([PolicyCount_2020 PolicyCount_2020]))' />
            </column>
            <column caption='Submission Total' datatype='integer' name='[Calculation_810366478443347992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Submissions_2015 Submissions_2015])+ZN([Submissions_2016 Submissions_2016])+ZN([Submissions_2017 Submissions_2017])+ZN([Submissions_2018 Submissions_2018])+ZN([Submissions_2019 Submissions_2019])+ZN([Submissions_2020 Submissions_2020]))' />
            </column>
            <column caption='NullEliminator' datatype='boolean' name='[Calculation_947726284754411527]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[PolicyCount_2016 PolicyCount_2016] == 0 OR  [PolicyCount_2017 PolicyCount_2017]==0 OR [PolicyCount_2018 PolicyCount_2018]==0 OR [PolicyCount_2019 PolicyCount_2019]==0 OR [PolicyCount_2020 PolicyCount_2020]==0' />
            </column>
            <column caption='GWP 2016' datatype='real' default-format='C1033%' name='[GWP_2016 GWP_2016]' role='measure' type='quantitative' />
            <column caption='GWP 2017' datatype='real' default-format='C1033%' name='[GWP_2017 GWP_2017]' role='measure' type='quantitative' />
            <column caption='GWP 2018' datatype='real' default-format='C1033%' name='[GWP_2018 GWP_2018]' role='measure' type='quantitative' />
            <column caption='GWP 2019' datatype='real' default-format='C1033%' name='[GWP_2019 GWP_2019]' role='measure' type='quantitative' />
            <column caption='GWP 2020' datatype='real' default-format='C1033%' name='[GWP_2020 GWP_2020]' role='measure' type='quantitative' />
            <column caption='Success Ratio' datatype='real' default-format='p0.0%' name='[Hit Ratio (copy)_25614243741290506]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443347992]' />
            </column>
            <column caption='Policy Count 2016' datatype='integer' name='[PolicyCount_2016 PolicyCount_2016]' role='measure' type='quantitative' />
            <column caption='Policy Count 2017' datatype='integer' name='[PolicyCount_2017 PolicyCount_2017]' role='measure' type='quantitative' />
            <column caption='Policy Count 2018' datatype='integer' name='[PolicyCount_2018 PolicyCount_2018]' role='measure' type='quantitative' />
            <column caption='Policy Count 2019' datatype='integer' name='[PolicyCount_2019 PolicyCount_2019]' role='measure' type='quantitative' />
            <column caption='Policy Count 2020' datatype='integer' name='[PolicyCount_2020 PolicyCount_2020]' role='measure' type='quantitative' />
            <column caption='Submissions 2015' datatype='integer' name='[Submissions_2015 Submissions_2015]' role='measure' type='quantitative' />
            <column caption='Submissions 2016' datatype='integer' name='[Submissions_2016 Submissions_2016]' role='measure' type='quantitative' />
            <column caption='Submissions 2017' datatype='integer' name='[Submissions_2017 Submissions_2017]' role='measure' type='quantitative' />
            <column caption='Submissions 2018' datatype='integer' name='[Submissions_2018 Submissions_2018]' role='measure' type='quantitative' />
            <column caption='Submissions 2019' datatype='integer' name='[Submissions_2019 Submissions_2019]' role='measure' type='quantitative' />
            <column caption='Submissions 2020' datatype='integer' name='[Submissions_2020 Submissions_2020]' role='measure' type='quantitative' />
            <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_947726284754411527]' derivation='None' name='[none:Calculation_947726284754411527:nk]' pivot='key' type='nominal' />
            <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GWP_2020 GWP_2020]' derivation='Sum' name='[sum:GWP_2020 GWP_2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_242349976118923277]' derivation='User' name='[usr:Calculation_242349976118923277:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hit Ratio (copy)_25614243741290506]' derivation='User' name='[usr:Hit Ratio (copy)_25614243741290506:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_947726284754411527:nk]'>
            <groupfilter function='member' level='[none:Calculation_947726284754411527:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]'>
            <groupfilter function='level-members' level='[none:broker_name broker_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' direction='ASC' using='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:GWP_2020 GWP_2020:qk]' />
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_947726284754411527:nk]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' num-steps='9' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cedee5</color>
                <color>#aecbda</color>
                <color>#90bace</color>
                <color>#75a9c3</color>
                <color>#5c99b8</color>
                <color>#458aac</color>
                <color>#307ba1</color>
                <color>#1d6e95</color>
                <color>#0d618a</color>
                <color>#00557f</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' />
              <lod column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline0' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' z-order='1' />
            <reference-line axis-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' z-order='2' />
            <reference-line axis-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline2' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]' z-order='3' />
            <reference-line axis-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]' enable-instant-analytics='true' formula='median' id='refline3' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]</rows>
        <cols>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]</cols>
      </table>
      <simple-id uuid='{FA8812A0-ADB8-46A7-8D1E-CB65DC0993CA}' />
    </worksheet>
    <worksheet name='Policy Lifecycle'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Policy Lifecycle</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare Broker' datatype='string' name='[Broker Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Torres Ltd NY&quot;'>
              <calculation class='tableau' formula='&quot;Torres Ltd NY&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column caption='Compare1' datatype='boolean' name='[Calculation_420242176005550093]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([broker_name broker_name],[Parameters].[Broker Name Parameter])' />
            </column>
            <column caption='Policy Total' datatype='integer' name='[Calculation_810366478443126806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([PolicyCount_2016 PolicyCount_2016])+ZN([PolicyCount_2017 PolicyCount_2017])+ZN([PolicyCount_2018 PolicyCount_2018])+ZN([PolicyCount_2019 PolicyCount_2019])+ZN([PolicyCount_2020 PolicyCount_2020]))' />
            </column>
            <column caption='Quote Total' datatype='integer' name='[Calculation_810366478443241495]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([QuoteCount_2014 QuoteCount_2014])+ZN([QuoteCount_2015 QuoteCount_2015])+ZN([QuoteCount_2016 QuoteCount_2016])+ZN([QuoteCount_2017 QuoteCount_2017])+ZN([QuoteCount_2018 QuoteCount_2018])+ZN([QuoteCount_2019 QuoteCount_2019])+ZN([QuoteCount_2020 QuoteCount_2020]))' />
            </column>
            <column caption='Submission Total' datatype='integer' name='[Calculation_810366478443347992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Submissions_2015 Submissions_2015])+ZN([Submissions_2016 Submissions_2016])+ZN([Submissions_2017 Submissions_2017])+ZN([Submissions_2018 Submissions_2018])+ZN([Submissions_2019 Submissions_2019])+ZN([Submissions_2020 Submissions_2020]))' />
            </column>
            <column caption='Policy Count 2016' datatype='integer' name='[PolicyCount_2016 PolicyCount_2016]' role='measure' type='quantitative' />
            <column caption='Policy Count 2017' datatype='integer' name='[PolicyCount_2017 PolicyCount_2017]' role='measure' type='quantitative' />
            <column caption='Policy Count 2018' datatype='integer' name='[PolicyCount_2018 PolicyCount_2018]' role='measure' type='quantitative' />
            <column caption='Policy Count 2019' datatype='integer' name='[PolicyCount_2019 PolicyCount_2019]' role='measure' type='quantitative' />
            <column caption='Policy Count 2020' datatype='integer' name='[PolicyCount_2020 PolicyCount_2020]' role='measure' type='quantitative' />
            <column caption='Quote Count 2014' datatype='integer' name='[QuoteCount_2014 QuoteCount_2014]' role='measure' type='quantitative' />
            <column caption='Quote Count 2015' datatype='integer' name='[QuoteCount_2015 QuoteCount_2015]' role='measure' type='quantitative' />
            <column caption='Quote Count 2016' datatype='integer' name='[QuoteCount_2016 QuoteCount_2016]' role='measure' type='quantitative' />
            <column caption='Quote Count 2017' datatype='integer' name='[QuoteCount_2017 QuoteCount_2017]' role='measure' type='quantitative' />
            <column caption='Quote Count 2018' datatype='integer' name='[QuoteCount_2018 QuoteCount_2018]' role='measure' type='quantitative' />
            <column caption='Quote Count 2019' datatype='integer' name='[QuoteCount_2019 QuoteCount_2019]' role='measure' type='quantitative' />
            <column caption='Quote Count 2020' datatype='integer' name='[QuoteCount_2020 QuoteCount_2020]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state state]' new-bin='true'>
                <bin default-name='false' value='&quot;Atlantic Island&quot;'>
                  <value>&quot;PR&quot;</value>
                  <value>&quot;VI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East North Central&quot;'>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;MI&quot;</value>
                  <value>&quot;OH&quot;</value>
                  <value>&quot;WI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East South Central&quot;'>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;KY&quot;</value>
                  <value>&quot;MS&quot;</value>
                  <value>&quot;TN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mid Atlantic Coast&quot;'>
                  <value>&quot;NJ&quot;</value>
                  <value>&quot;NY&quot;</value>
                  <value>&quot;PA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mountain&quot;'>
                  <value>&quot;AZ&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NM&quot;</value>
                  <value>&quot;NV&quot;</value>
                  <value>&quot;UT&quot;</value>
                  <value>&quot;WY&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New England&quot;'>
                  <value>&quot;CT&quot;</value>
                  <value>&quot;ME&quot;</value>
                  <value>&quot;NH&quot;</value>
                  <value>&quot;RI&quot;</value>
                  <value>&quot;VT&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Coast&quot;'>
                  <value>&quot;AK&quot;</value>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;WA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Island&quot;'>
                  <value>&quot;AS&quot;</value>
                  <value>&quot;GU&quot;</value>
                  <value>&quot;HI&quot;</value>
                  <value>&quot;MP&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Atlantic Coast&quot;'>
                  <value>&quot;DC&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;FL&quot;</value>
                  <value>&quot;GA&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;SC&quot;</value>
                  <value>&quot;VA&quot;</value>
                  <value>&quot;WV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West North Central&quot;'>
                  <value>&quot;IA&quot;</value>
                  <value>&quot;KS&quot;</value>
                  <value>&quot;MN&quot;</value>
                  <value>&quot;MO&quot;</value>
                  <value>&quot;ND&quot;</value>
                  <value>&quot;NE&quot;</value>
                  <value>&quot;SD&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West South Central&quot;'>
                  <value>&quot;LA&quot;</value>
                  <value>&quot;OK&quot;</value>
                  <value>&quot;TX&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Submissions 2015' datatype='integer' name='[Submissions_2015 Submissions_2015]' role='measure' type='quantitative' />
            <column caption='Submissions 2016' datatype='integer' name='[Submissions_2016 Submissions_2016]' role='measure' type='quantitative' />
            <column caption='Submissions 2017' datatype='integer' name='[Submissions_2017 Submissions_2017]' role='measure' type='quantitative' />
            <column caption='Submissions 2018' datatype='integer' name='[Submissions_2018 Submissions_2018]' role='measure' type='quantitative' />
            <column caption='Submissions 2019' datatype='integer' name='[Submissions_2019 Submissions_2019]' role='measure' type='quantitative' />
            <column caption='Submissions 2020' datatype='integer' name='[Submissions_2020 Submissions_2020]' role='measure' type='quantitative' />
            <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_420242176005550093]' derivation='None' name='[none:Calculation_420242176005550093:nk]' pivot='key' type='nominal' />
            <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_810366478443126806]' derivation='User' name='[usr:Calculation_810366478443126806:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_810366478443241495]' derivation='User' name='[usr:Calculation_810366478443241495:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_810366478443347992]' derivation='User' name='[usr:Calculation_810366478443347992:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443347992:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443241495:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443126806:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443347992:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443241495:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443126806:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]'>
            <groupfilter function='member' level='[none:Calculation_420242176005550093:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='48' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='122' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]' value='#efebe8' />
            <format attr='height' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='on' />
            <format attr='text-align' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='center' />
            <format attr='text-orientation' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='0' />
            <format attr='wrap' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='on' />
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]' value='false' />
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='740' />
                <format attr='maxheight' value='740' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]</rows>
        <cols>([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)] / ([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk] / [federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{DF2EDA72-163A-492A-BE3D-809A011004B5}' />
    </worksheet>
    <worksheet name='Policy Lifecycle (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Policy Lifecycle</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare Broker ' datatype='string' name='[Compare Broker (copy)_420242175999508488]' param-domain-type='list' role='measure' type='nominal' value='&quot;Mckenzie, Hunt and Rodriguez OH&quot;'>
              <calculation class='tableau' formula='&quot;Mckenzie, Hunt and Rodriguez OH&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column caption='Policy Total' datatype='integer' name='[Calculation_810366478443126806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([PolicyCount_2016 PolicyCount_2016])+ZN([PolicyCount_2017 PolicyCount_2017])+ZN([PolicyCount_2018 PolicyCount_2018])+ZN([PolicyCount_2019 PolicyCount_2019])+ZN([PolicyCount_2020 PolicyCount_2020]))' />
            </column>
            <column caption='Quote Total' datatype='integer' name='[Calculation_810366478443241495]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([QuoteCount_2014 QuoteCount_2014])+ZN([QuoteCount_2015 QuoteCount_2015])+ZN([QuoteCount_2016 QuoteCount_2016])+ZN([QuoteCount_2017 QuoteCount_2017])+ZN([QuoteCount_2018 QuoteCount_2018])+ZN([QuoteCount_2019 QuoteCount_2019])+ZN([QuoteCount_2020 QuoteCount_2020]))' />
            </column>
            <column caption='Submission Total' datatype='integer' name='[Calculation_810366478443347992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Submissions_2015 Submissions_2015])+ZN([Submissions_2016 Submissions_2016])+ZN([Submissions_2017 Submissions_2017])+ZN([Submissions_2018 Submissions_2018])+ZN([Submissions_2019 Submissions_2019])+ZN([Submissions_2020 Submissions_2020]))' />
            </column>
            <column caption='Compare1 (copy)' datatype='boolean' name='[Compare1 (copy)_420242176005783566]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([broker_name broker_name],[Parameters].[Compare Broker (copy)_420242175999508488])' />
            </column>
            <column caption='Policy Count 2016' datatype='integer' name='[PolicyCount_2016 PolicyCount_2016]' role='measure' type='quantitative' />
            <column caption='Policy Count 2017' datatype='integer' name='[PolicyCount_2017 PolicyCount_2017]' role='measure' type='quantitative' />
            <column caption='Policy Count 2018' datatype='integer' name='[PolicyCount_2018 PolicyCount_2018]' role='measure' type='quantitative' />
            <column caption='Policy Count 2019' datatype='integer' name='[PolicyCount_2019 PolicyCount_2019]' role='measure' type='quantitative' />
            <column caption='Policy Count 2020' datatype='integer' name='[PolicyCount_2020 PolicyCount_2020]' role='measure' type='quantitative' />
            <column caption='Quote Count 2014' datatype='integer' name='[QuoteCount_2014 QuoteCount_2014]' role='measure' type='quantitative' />
            <column caption='Quote Count 2015' datatype='integer' name='[QuoteCount_2015 QuoteCount_2015]' role='measure' type='quantitative' />
            <column caption='Quote Count 2016' datatype='integer' name='[QuoteCount_2016 QuoteCount_2016]' role='measure' type='quantitative' />
            <column caption='Quote Count 2017' datatype='integer' name='[QuoteCount_2017 QuoteCount_2017]' role='measure' type='quantitative' />
            <column caption='Quote Count 2018' datatype='integer' name='[QuoteCount_2018 QuoteCount_2018]' role='measure' type='quantitative' />
            <column caption='Quote Count 2019' datatype='integer' name='[QuoteCount_2019 QuoteCount_2019]' role='measure' type='quantitative' />
            <column caption='Quote Count 2020' datatype='integer' name='[QuoteCount_2020 QuoteCount_2020]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state state]' new-bin='true'>
                <bin default-name='false' value='&quot;Atlantic Island&quot;'>
                  <value>&quot;PR&quot;</value>
                  <value>&quot;VI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East North Central&quot;'>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;MI&quot;</value>
                  <value>&quot;OH&quot;</value>
                  <value>&quot;WI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East South Central&quot;'>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;KY&quot;</value>
                  <value>&quot;MS&quot;</value>
                  <value>&quot;TN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mid Atlantic Coast&quot;'>
                  <value>&quot;NJ&quot;</value>
                  <value>&quot;NY&quot;</value>
                  <value>&quot;PA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mountain&quot;'>
                  <value>&quot;AZ&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NM&quot;</value>
                  <value>&quot;NV&quot;</value>
                  <value>&quot;UT&quot;</value>
                  <value>&quot;WY&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New England&quot;'>
                  <value>&quot;CT&quot;</value>
                  <value>&quot;ME&quot;</value>
                  <value>&quot;NH&quot;</value>
                  <value>&quot;RI&quot;</value>
                  <value>&quot;VT&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Coast&quot;'>
                  <value>&quot;AK&quot;</value>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;WA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Island&quot;'>
                  <value>&quot;AS&quot;</value>
                  <value>&quot;GU&quot;</value>
                  <value>&quot;HI&quot;</value>
                  <value>&quot;MP&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Atlantic Coast&quot;'>
                  <value>&quot;DC&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;FL&quot;</value>
                  <value>&quot;GA&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;SC&quot;</value>
                  <value>&quot;VA&quot;</value>
                  <value>&quot;WV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West North Central&quot;'>
                  <value>&quot;IA&quot;</value>
                  <value>&quot;KS&quot;</value>
                  <value>&quot;MN&quot;</value>
                  <value>&quot;MO&quot;</value>
                  <value>&quot;ND&quot;</value>
                  <value>&quot;NE&quot;</value>
                  <value>&quot;SD&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West South Central&quot;'>
                  <value>&quot;LA&quot;</value>
                  <value>&quot;OK&quot;</value>
                  <value>&quot;TX&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Submissions 2015' datatype='integer' name='[Submissions_2015 Submissions_2015]' role='measure' type='quantitative' />
            <column caption='Submissions 2016' datatype='integer' name='[Submissions_2016 Submissions_2016]' role='measure' type='quantitative' />
            <column caption='Submissions 2017' datatype='integer' name='[Submissions_2017 Submissions_2017]' role='measure' type='quantitative' />
            <column caption='Submissions 2018' datatype='integer' name='[Submissions_2018 Submissions_2018]' role='measure' type='quantitative' />
            <column caption='Submissions 2019' datatype='integer' name='[Submissions_2019 Submissions_2019]' role='measure' type='quantitative' />
            <column caption='Submissions 2020' datatype='integer' name='[Submissions_2020 Submissions_2020]' role='measure' type='quantitative' />
            <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
            <column-instance column='[Compare1 (copy)_420242176005783566]' derivation='None' name='[none:Compare1 (copy)_420242176005783566:nk]' pivot='key' type='nominal' />
            <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_810366478443126806]' derivation='User' name='[usr:Calculation_810366478443126806:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_810366478443241495]' derivation='User' name='[usr:Calculation_810366478443241495:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_810366478443347992]' derivation='User' name='[usr:Calculation_810366478443347992:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443347992:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443241495:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443126806:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443347992:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443241495:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443126806:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]'>
            <groupfilter function='member' level='[none:Compare1 (copy)_420242176005783566:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='46' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='122' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]' value='#efebe8' />
            <format attr='height' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='on' />
            <format attr='text-align' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='center' />
            <format attr='text-orientation' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='0' />
            <format attr='wrap' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='on' />
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]' value='false' />
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='false' y-axis='true' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='740' />
                <format attr='maxheight' value='740' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]</rows>
        <cols>([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)] / ([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk] / [federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{B0654A4B-A9B3-4E06-B885-BF0D8CC97372}' />
    </worksheet>
    <worksheet name='Quote/Hit/Success Ratio'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Quote/Hit/Success Ratio</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare Broker' datatype='string' name='[Broker Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Torres Ltd NY&quot;'>
              <calculation class='tableau' formula='&quot;Torres Ltd NY&quot;' />
            </column>
            <column caption='Compare Broker ' datatype='string' name='[Compare Broker (copy)_420242175999508488]' param-domain-type='list' role='measure' type='nominal' value='&quot;Mckenzie, Hunt and Rodriguez OH&quot;'>
              <calculation class='tableau' formula='&quot;Mckenzie, Hunt and Rodriguez OH&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column caption='Hit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_509188253665107975]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443241495]' />
            </column>
            <column caption='Policy Total' datatype='integer' name='[Calculation_810366478443126806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([PolicyCount_2016 PolicyCount_2016])+ZN([PolicyCount_2017 PolicyCount_2017])+ZN([PolicyCount_2018 PolicyCount_2018])+ZN([PolicyCount_2019 PolicyCount_2019])+ZN([PolicyCount_2020 PolicyCount_2020]))' />
            </column>
            <column caption='Quote Total' datatype='integer' name='[Calculation_810366478443241495]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([QuoteCount_2014 QuoteCount_2014])+ZN([QuoteCount_2015 QuoteCount_2015])+ZN([QuoteCount_2016 QuoteCount_2016])+ZN([QuoteCount_2017 QuoteCount_2017])+ZN([QuoteCount_2018 QuoteCount_2018])+ZN([QuoteCount_2019 QuoteCount_2019])+ZN([QuoteCount_2020 QuoteCount_2020]))' />
            </column>
            <column caption='Submission Total' datatype='integer' name='[Calculation_810366478443347992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Submissions_2015 Submissions_2015])+ZN([Submissions_2016 Submissions_2016])+ZN([Submissions_2017 Submissions_2017])+ZN([Submissions_2018 Submissions_2018])+ZN([Submissions_2019 Submissions_2019])+ZN([Submissions_2020 Submissions_2020]))' />
            </column>
            <column caption='Quote Ratio' datatype='real' default-format='p0.0%' name='[Calculation_810366478443474969]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443241495] / [Calculation_810366478443347992]' />
            </column>
            <column caption='Compare1 (copy)' datatype='boolean' name='[Compare1 (copy)_420242176005783566]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([broker_name broker_name],[Parameters].[Compare Broker (copy)_420242175999508488])' />
            </column>
            <column caption='Success Ratio' datatype='real' default-format='p0.0%' name='[Hit Ratio (copy)_25614243741290506]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443347992]' />
            </column>
            <column caption='Policy Count 2016' datatype='integer' name='[PolicyCount_2016 PolicyCount_2016]' role='measure' type='quantitative' />
            <column caption='Policy Count 2017' datatype='integer' name='[PolicyCount_2017 PolicyCount_2017]' role='measure' type='quantitative' />
            <column caption='Policy Count 2018' datatype='integer' name='[PolicyCount_2018 PolicyCount_2018]' role='measure' type='quantitative' />
            <column caption='Policy Count 2019' datatype='integer' name='[PolicyCount_2019 PolicyCount_2019]' role='measure' type='quantitative' />
            <column caption='Policy Count 2020' datatype='integer' name='[PolicyCount_2020 PolicyCount_2020]' role='measure' type='quantitative' />
            <column caption='Quote Count 2014' datatype='integer' name='[QuoteCount_2014 QuoteCount_2014]' role='measure' type='quantitative' />
            <column caption='Quote Count 2015' datatype='integer' name='[QuoteCount_2015 QuoteCount_2015]' role='measure' type='quantitative' />
            <column caption='Quote Count 2016' datatype='integer' name='[QuoteCount_2016 QuoteCount_2016]' role='measure' type='quantitative' />
            <column caption='Quote Count 2017' datatype='integer' name='[QuoteCount_2017 QuoteCount_2017]' role='measure' type='quantitative' />
            <column caption='Quote Count 2018' datatype='integer' name='[QuoteCount_2018 QuoteCount_2018]' role='measure' type='quantitative' />
            <column caption='Quote Count 2019' datatype='integer' name='[QuoteCount_2019 QuoteCount_2019]' role='measure' type='quantitative' />
            <column caption='Quote Count 2020' datatype='integer' name='[QuoteCount_2020 QuoteCount_2020]' role='measure' type='quantitative' />
            <column caption='Submissions 2015' datatype='integer' name='[Submissions_2015 Submissions_2015]' role='measure' type='quantitative' />
            <column caption='Submissions 2016' datatype='integer' name='[Submissions_2016 Submissions_2016]' role='measure' type='quantitative' />
            <column caption='Submissions 2017' datatype='integer' name='[Submissions_2017 Submissions_2017]' role='measure' type='quantitative' />
            <column caption='Submissions 2018' datatype='integer' name='[Submissions_2018 Submissions_2018]' role='measure' type='quantitative' />
            <column caption='Submissions 2019' datatype='integer' name='[Submissions_2019 Submissions_2019]' role='measure' type='quantitative' />
            <column caption='Submissions 2020' datatype='integer' name='[Submissions_2020 Submissions_2020]' role='measure' type='quantitative' />
            <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
            <column-instance column='[Compare1 (copy)_420242176005783566]' derivation='None' name='[none:Compare1 (copy)_420242176005783566:nk]' pivot='key' type='nominal' />
            <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_509188253665107975]' derivation='User' name='[usr:Calculation_509188253665107975:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_810366478443474969]' derivation='User' name='[usr:Calculation_810366478443474969:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hit Ratio (copy)_25614243741290506]' derivation='User' name='[usr:Hit Ratio (copy)_25614243741290506:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443474969:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_509188253665107975:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443474969:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_509188253665107975:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]'>
            <groupfilter function='member' level='[none:Compare1 (copy)_420242176005783566:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:broker_name broker_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Aguirre, Torres and Johnson DC&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Allen, Young and Smith ND&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Brown Inc LA&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Caldwell-Campbell IN&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Campbell-Benson SC&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Carpenter Ltd AL&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Davis, Griffin and Garcia WV&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Dillon, Lopez and Ayers SC&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Gordon, James and Hudson NJ&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Gutierrez-Henderson DC&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Herman-Skinner PR&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Hurley-Parker NH&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Kelly, Martinez and Harris CO&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Mata, Williams and Diaz VA&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Moreno, Cline and Moreno CT&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Myers, Lewis and Gilbert OH&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Nguyen, Johnson and Williamson CA&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Price, Smith and Soto MO&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Pruitt, Spencer and Williams FL&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Sampson, Austin and Baker AK&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Smith and Sons VI&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Turner-Morales KY&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Vasquez Group IN&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Williams-West CO&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Wu PLC IN&quot;' />
                <groupfilter function='member' level='[none:broker_name broker_name:nk]' member='&quot;Zamora PLC MO&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' field-type='quantitative' max='1.25' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='height' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' value='87' />
            <format attr='title' class='0' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='false' />
            <format attr='display' field='[Parameters].[Broker Name Parameter]' value='false' />
            <format attr='display' field='[Parameters].[Compare Broker (copy)_420242175999508488]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='140' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' />
              <text column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk] / [federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names])</rows>
        <cols>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{59F0E8E4-AAC3-4F4D-B4F8-040A20207AD0}' />
    </worksheet>
    <worksheet name='Ratios'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Success Ratios</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare Broker' datatype='string' name='[Broker Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Torres Ltd NY&quot;'>
              <calculation class='tableau' formula='&quot;Torres Ltd NY&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column caption='Compare1' datatype='boolean' name='[Calculation_420242176005550093]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([broker_name broker_name],[Parameters].[Broker Name Parameter])' />
            </column>
            <column caption='Hit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_509188253665107975]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443241495]' />
            </column>
            <column caption='Policy Total' datatype='integer' name='[Calculation_810366478443126806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([PolicyCount_2016 PolicyCount_2016])+ZN([PolicyCount_2017 PolicyCount_2017])+ZN([PolicyCount_2018 PolicyCount_2018])+ZN([PolicyCount_2019 PolicyCount_2019])+ZN([PolicyCount_2020 PolicyCount_2020]))' />
            </column>
            <column caption='Quote Total' datatype='integer' name='[Calculation_810366478443241495]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([QuoteCount_2014 QuoteCount_2014])+ZN([QuoteCount_2015 QuoteCount_2015])+ZN([QuoteCount_2016 QuoteCount_2016])+ZN([QuoteCount_2017 QuoteCount_2017])+ZN([QuoteCount_2018 QuoteCount_2018])+ZN([QuoteCount_2019 QuoteCount_2019])+ZN([QuoteCount_2020 QuoteCount_2020]))' />
            </column>
            <column caption='Submission Total' datatype='integer' name='[Calculation_810366478443347992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Submissions_2015 Submissions_2015])+ZN([Submissions_2016 Submissions_2016])+ZN([Submissions_2017 Submissions_2017])+ZN([Submissions_2018 Submissions_2018])+ZN([Submissions_2019 Submissions_2019])+ZN([Submissions_2020 Submissions_2020]))' />
            </column>
            <column caption='Quote Ratio' datatype='real' default-format='p0.0%' name='[Calculation_810366478443474969]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443241495] / [Calculation_810366478443347992]' />
            </column>
            <column caption='SR2016' datatype='real' default-format='p0.00%' name='[Calculation_947726284861599760]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN([PolicyCount_2016 PolicyCount_2016])/ZN([Submissions_2016 Submissions_2016])' />
            </column>
            <column caption='Success Ratio' datatype='real' default-format='p0.0%' name='[Hit Ratio (copy)_25614243741290506]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443347992]' />
            </column>
            <column caption='Policy Count 2016' datatype='integer' name='[PolicyCount_2016 PolicyCount_2016]' role='measure' type='quantitative' />
            <column caption='Policy Count 2017' datatype='integer' name='[PolicyCount_2017 PolicyCount_2017]' role='measure' type='quantitative' />
            <column caption='Policy Count 2018' datatype='integer' name='[PolicyCount_2018 PolicyCount_2018]' role='measure' type='quantitative' />
            <column caption='Policy Count 2019' datatype='integer' name='[PolicyCount_2019 PolicyCount_2019]' role='measure' type='quantitative' />
            <column caption='Policy Count 2020' datatype='integer' name='[PolicyCount_2020 PolicyCount_2020]' role='measure' type='quantitative' />
            <column caption='Quote Count 2014' datatype='integer' name='[QuoteCount_2014 QuoteCount_2014]' role='measure' type='quantitative' />
            <column caption='Quote Count 2015' datatype='integer' name='[QuoteCount_2015 QuoteCount_2015]' role='measure' type='quantitative' />
            <column caption='Quote Count 2016' datatype='integer' name='[QuoteCount_2016 QuoteCount_2016]' role='measure' type='quantitative' />
            <column caption='Quote Count 2017' datatype='integer' name='[QuoteCount_2017 QuoteCount_2017]' role='measure' type='quantitative' />
            <column caption='Quote Count 2018' datatype='integer' name='[QuoteCount_2018 QuoteCount_2018]' role='measure' type='quantitative' />
            <column caption='Quote Count 2019' datatype='integer' name='[QuoteCount_2019 QuoteCount_2019]' role='measure' type='quantitative' />
            <column caption='Quote Count 2020' datatype='integer' name='[QuoteCount_2020 QuoteCount_2020]' role='measure' type='quantitative' />
            <column caption='SR2017' datatype='real' default-format='p0.00%' name='[SR2016 (copy)_947726284861902865]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN([PolicyCount_2017 PolicyCount_2017])/ZN([Submissions_2017 Submissions_2017])' />
            </column>
            <column caption='SR2019' datatype='real' default-format='p0.00%' name='[SR2017 (copy) (copy)_947726284861968403]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN([PolicyCount_2019 PolicyCount_2019])/ZN([PolicyCount_2018 PolicyCount_2018])' />
            </column>
            <column caption='SR2018' datatype='real' default-format='p0.00%' name='[SR2017 (copy)_947726284861960210]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN([PolicyCount_2018 PolicyCount_2018])/ZN([Submissions_2018 Submissions_2018])' />
            </column>
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state state]' new-bin='true'>
                <bin default-name='false' value='&quot;Atlantic Island&quot;'>
                  <value>&quot;PR&quot;</value>
                  <value>&quot;VI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East North Central&quot;'>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;MI&quot;</value>
                  <value>&quot;OH&quot;</value>
                  <value>&quot;WI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East South Central&quot;'>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;KY&quot;</value>
                  <value>&quot;MS&quot;</value>
                  <value>&quot;TN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mid Atlantic Coast&quot;'>
                  <value>&quot;NJ&quot;</value>
                  <value>&quot;NY&quot;</value>
                  <value>&quot;PA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mountain&quot;'>
                  <value>&quot;AZ&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NM&quot;</value>
                  <value>&quot;NV&quot;</value>
                  <value>&quot;UT&quot;</value>
                  <value>&quot;WY&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New England&quot;'>
                  <value>&quot;CT&quot;</value>
                  <value>&quot;ME&quot;</value>
                  <value>&quot;NH&quot;</value>
                  <value>&quot;RI&quot;</value>
                  <value>&quot;VT&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Coast&quot;'>
                  <value>&quot;AK&quot;</value>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;WA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Island&quot;'>
                  <value>&quot;AS&quot;</value>
                  <value>&quot;GU&quot;</value>
                  <value>&quot;HI&quot;</value>
                  <value>&quot;MP&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Atlantic Coast&quot;'>
                  <value>&quot;DC&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;FL&quot;</value>
                  <value>&quot;GA&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;SC&quot;</value>
                  <value>&quot;VA&quot;</value>
                  <value>&quot;WV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West North Central&quot;'>
                  <value>&quot;IA&quot;</value>
                  <value>&quot;KS&quot;</value>
                  <value>&quot;MN&quot;</value>
                  <value>&quot;MO&quot;</value>
                  <value>&quot;ND&quot;</value>
                  <value>&quot;NE&quot;</value>
                  <value>&quot;SD&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West South Central&quot;'>
                  <value>&quot;LA&quot;</value>
                  <value>&quot;OK&quot;</value>
                  <value>&quot;TX&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Submissions 2015' datatype='integer' name='[Submissions_2015 Submissions_2015]' role='measure' type='quantitative' />
            <column caption='Submissions 2016' datatype='integer' name='[Submissions_2016 Submissions_2016]' role='measure' type='quantitative' />
            <column caption='Submissions 2017' datatype='integer' name='[Submissions_2017 Submissions_2017]' role='measure' type='quantitative' />
            <column caption='Submissions 2018' datatype='integer' name='[Submissions_2018 Submissions_2018]' role='measure' type='quantitative' />
            <column caption='Submissions 2019' datatype='integer' name='[Submissions_2019 Submissions_2019]' role='measure' type='quantitative' />
            <column caption='Submissions 2020' datatype='integer' name='[Submissions_2020 Submissions_2020]' role='measure' type='quantitative' />
            <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_420242176005550093]' derivation='None' name='[none:Calculation_420242176005550093:nk]' pivot='key' type='nominal' />
            <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_947726284861599760]' derivation='Sum' name='[sum:Calculation_947726284861599760:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SR2016 (copy)_947726284861902865]' derivation='Sum' name='[sum:SR2016 (copy)_947726284861902865:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SR2017 (copy) (copy)_947726284861968403]' derivation='Sum' name='[sum:SR2017 (copy) (copy)_947726284861968403:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SR2017 (copy)_947726284861960210]' derivation='Sum' name='[sum:SR2017 (copy)_947726284861960210:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_509188253665107975]' derivation='User' name='[usr:Calculation_509188253665107975:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_810366478443474969]' derivation='User' name='[usr:Calculation_810366478443474969:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hit Ratio (copy)_25614243741290506]' derivation='User' name='[usr:Hit Ratio (copy)_25614243741290506:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_947726284861599760:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:SR2016 (copy)_947726284861902865:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:SR2017 (copy)_947726284861960210:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:SR2017 (copy) (copy)_947726284861968403:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_509188253665107975:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443474969:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]'>
            <groupfilter function='member' level='[none:Calculation_420242176005550093:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' direction='DESC' using='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' />
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' field-type='quantitative' max='1.6472575075619671' min='0.018664646013806747' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' scope='cols' value='' />
            <format attr='height' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' value='25' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_509188253665107975:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' value='p0.0%' />
            <format attr='height' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='32' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]' value='#efebe8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='false' />
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' />
              <lod column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' />
              <lod column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_509188253665107975:qk]' />
              <lod column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443474969:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1314364671707153' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)] / ([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk] / [federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]))</rows>
        <cols>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{E79CCE99-750F-40F0-86A0-0A022D33480B}' />
    </worksheet>
    <worksheet name='Ratios (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Success Ratios</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare Broker ' datatype='string' name='[Compare Broker (copy)_420242175999508488]' param-domain-type='list' role='measure' type='nominal' value='&quot;Mckenzie, Hunt and Rodriguez OH&quot;'>
              <calculation class='tableau' formula='&quot;Mckenzie, Hunt and Rodriguez OH&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column caption='Hit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_509188253665107975]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443241495]' />
            </column>
            <column caption='Policy Total' datatype='integer' name='[Calculation_810366478443126806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([PolicyCount_2016 PolicyCount_2016])+ZN([PolicyCount_2017 PolicyCount_2017])+ZN([PolicyCount_2018 PolicyCount_2018])+ZN([PolicyCount_2019 PolicyCount_2019])+ZN([PolicyCount_2020 PolicyCount_2020]))' />
            </column>
            <column caption='Quote Total' datatype='integer' name='[Calculation_810366478443241495]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([QuoteCount_2014 QuoteCount_2014])+ZN([QuoteCount_2015 QuoteCount_2015])+ZN([QuoteCount_2016 QuoteCount_2016])+ZN([QuoteCount_2017 QuoteCount_2017])+ZN([QuoteCount_2018 QuoteCount_2018])+ZN([QuoteCount_2019 QuoteCount_2019])+ZN([QuoteCount_2020 QuoteCount_2020]))' />
            </column>
            <column caption='Submission Total' datatype='integer' name='[Calculation_810366478443347992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Submissions_2015 Submissions_2015])+ZN([Submissions_2016 Submissions_2016])+ZN([Submissions_2017 Submissions_2017])+ZN([Submissions_2018 Submissions_2018])+ZN([Submissions_2019 Submissions_2019])+ZN([Submissions_2020 Submissions_2020]))' />
            </column>
            <column caption='Quote Ratio' datatype='real' default-format='p0.0%' name='[Calculation_810366478443474969]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443241495] / [Calculation_810366478443347992]' />
            </column>
            <column caption='SR2016' datatype='real' default-format='p0.00%' name='[Calculation_947726284861599760]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN([PolicyCount_2016 PolicyCount_2016])/ZN([Submissions_2016 Submissions_2016])' />
            </column>
            <column caption='Compare1 (copy)' datatype='boolean' name='[Compare1 (copy)_420242176005783566]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([broker_name broker_name],[Parameters].[Compare Broker (copy)_420242175999508488])' />
            </column>
            <column caption='Success Ratio' datatype='real' default-format='p0.0%' name='[Hit Ratio (copy)_25614243741290506]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_810366478443126806] / [Calculation_810366478443347992]' />
            </column>
            <column caption='Policy Count 2016' datatype='integer' name='[PolicyCount_2016 PolicyCount_2016]' role='measure' type='quantitative' />
            <column caption='Policy Count 2017' datatype='integer' name='[PolicyCount_2017 PolicyCount_2017]' role='measure' type='quantitative' />
            <column caption='Policy Count 2018' datatype='integer' name='[PolicyCount_2018 PolicyCount_2018]' role='measure' type='quantitative' />
            <column caption='Policy Count 2019' datatype='integer' name='[PolicyCount_2019 PolicyCount_2019]' role='measure' type='quantitative' />
            <column caption='Policy Count 2020' datatype='integer' name='[PolicyCount_2020 PolicyCount_2020]' role='measure' type='quantitative' />
            <column caption='Quote Count 2014' datatype='integer' name='[QuoteCount_2014 QuoteCount_2014]' role='measure' type='quantitative' />
            <column caption='Quote Count 2015' datatype='integer' name='[QuoteCount_2015 QuoteCount_2015]' role='measure' type='quantitative' />
            <column caption='Quote Count 2016' datatype='integer' name='[QuoteCount_2016 QuoteCount_2016]' role='measure' type='quantitative' />
            <column caption='Quote Count 2017' datatype='integer' name='[QuoteCount_2017 QuoteCount_2017]' role='measure' type='quantitative' />
            <column caption='Quote Count 2018' datatype='integer' name='[QuoteCount_2018 QuoteCount_2018]' role='measure' type='quantitative' />
            <column caption='Quote Count 2019' datatype='integer' name='[QuoteCount_2019 QuoteCount_2019]' role='measure' type='quantitative' />
            <column caption='Quote Count 2020' datatype='integer' name='[QuoteCount_2020 QuoteCount_2020]' role='measure' type='quantitative' />
            <column caption='SR2017' datatype='real' default-format='p0.00%' name='[SR2016 (copy)_947726284861902865]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN([PolicyCount_2017 PolicyCount_2017])/ZN([Submissions_2017 Submissions_2017])' />
            </column>
            <column caption='SR2019' datatype='real' default-format='p0.00%' name='[SR2017 (copy) (copy)_947726284861968403]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN([PolicyCount_2019 PolicyCount_2019])/ZN([PolicyCount_2018 PolicyCount_2018])' />
            </column>
            <column caption='SR2018' datatype='real' default-format='p0.00%' name='[SR2017 (copy)_947726284861960210]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN([PolicyCount_2018 PolicyCount_2018])/ZN([Submissions_2018 Submissions_2018])' />
            </column>
            <column caption='SR2020' datatype='real' default-format='p0.00%' name='[SR2019 (copy)_947726284862050324]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN([PolicyCount_2020 PolicyCount_2020])/ZN([Submissions_2020 Submissions_2020])' />
            </column>
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state state]' new-bin='true'>
                <bin default-name='false' value='&quot;Atlantic Island&quot;'>
                  <value>&quot;PR&quot;</value>
                  <value>&quot;VI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East North Central&quot;'>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;MI&quot;</value>
                  <value>&quot;OH&quot;</value>
                  <value>&quot;WI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East South Central&quot;'>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;KY&quot;</value>
                  <value>&quot;MS&quot;</value>
                  <value>&quot;TN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mid Atlantic Coast&quot;'>
                  <value>&quot;NJ&quot;</value>
                  <value>&quot;NY&quot;</value>
                  <value>&quot;PA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mountain&quot;'>
                  <value>&quot;AZ&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NM&quot;</value>
                  <value>&quot;NV&quot;</value>
                  <value>&quot;UT&quot;</value>
                  <value>&quot;WY&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New England&quot;'>
                  <value>&quot;CT&quot;</value>
                  <value>&quot;ME&quot;</value>
                  <value>&quot;NH&quot;</value>
                  <value>&quot;RI&quot;</value>
                  <value>&quot;VT&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Coast&quot;'>
                  <value>&quot;AK&quot;</value>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;WA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Island&quot;'>
                  <value>&quot;AS&quot;</value>
                  <value>&quot;GU&quot;</value>
                  <value>&quot;HI&quot;</value>
                  <value>&quot;MP&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Atlantic Coast&quot;'>
                  <value>&quot;DC&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;FL&quot;</value>
                  <value>&quot;GA&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;SC&quot;</value>
                  <value>&quot;VA&quot;</value>
                  <value>&quot;WV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West North Central&quot;'>
                  <value>&quot;IA&quot;</value>
                  <value>&quot;KS&quot;</value>
                  <value>&quot;MN&quot;</value>
                  <value>&quot;MO&quot;</value>
                  <value>&quot;ND&quot;</value>
                  <value>&quot;NE&quot;</value>
                  <value>&quot;SD&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West South Central&quot;'>
                  <value>&quot;LA&quot;</value>
                  <value>&quot;OK&quot;</value>
                  <value>&quot;TX&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Submissions 2015' datatype='integer' name='[Submissions_2015 Submissions_2015]' role='measure' type='quantitative' />
            <column caption='Submissions 2016' datatype='integer' name='[Submissions_2016 Submissions_2016]' role='measure' type='quantitative' />
            <column caption='Submissions 2017' datatype='integer' name='[Submissions_2017 Submissions_2017]' role='measure' type='quantitative' />
            <column caption='Submissions 2018' datatype='integer' name='[Submissions_2018 Submissions_2018]' role='measure' type='quantitative' />
            <column caption='Submissions 2019' datatype='integer' name='[Submissions_2019 Submissions_2019]' role='measure' type='quantitative' />
            <column caption='Submissions 2020' datatype='integer' name='[Submissions_2020 Submissions_2020]' role='measure' type='quantitative' />
            <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
            <column-instance column='[Compare1 (copy)_420242176005783566]' derivation='None' name='[none:Compare1 (copy)_420242176005783566:nk]' pivot='key' type='nominal' />
            <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_947726284861599760]' derivation='Sum' name='[sum:Calculation_947726284861599760:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SR2016 (copy)_947726284861902865]' derivation='Sum' name='[sum:SR2016 (copy)_947726284861902865:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SR2017 (copy) (copy)_947726284861968403]' derivation='Sum' name='[sum:SR2017 (copy) (copy)_947726284861968403:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SR2017 (copy)_947726284861960210]' derivation='Sum' name='[sum:SR2017 (copy)_947726284861960210:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SR2019 (copy)_947726284862050324]' derivation='Sum' name='[sum:SR2019 (copy)_947726284862050324:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_509188253665107975]' derivation='User' name='[usr:Calculation_509188253665107975:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_810366478443474969]' derivation='User' name='[usr:Calculation_810366478443474969:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hit Ratio (copy)_25614243741290506]' derivation='User' name='[usr:Hit Ratio (copy)_25614243741290506:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_947726284861599760:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:SR2016 (copy)_947726284861902865:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:SR2017 (copy)_947726284861960210:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:SR2017 (copy) (copy)_947726284861968403:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:SR2019 (copy)_947726284862050324:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_509188253665107975:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443474969:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]'>
            <groupfilter function='member' level='[none:Compare1 (copy)_420242176005783566:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' direction='DESC' using='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' />
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' field-type='quantitative' max='1.6472575075619671' min='0.018664646013806747' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' scope='cols' value='' />
            <format attr='height' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' value='37' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_509188253665107975:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' value='p0.0%' />
            <format attr='height' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='37' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]' value='#efebe8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]' value='false' />
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' />
              <lod column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Hit Ratio (copy)_25614243741290506:qk]' />
              <lod column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_509188253665107975:qk]' />
              <lod column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_810366478443474969:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1314364671707153' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)] / ([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk] / [federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]))</rows>
        <cols>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{1396CB57-681F-4207-9DAB-82C6416FFDC4}' />
    </worksheet>
    <worksheet name='Sheet 30'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Broker GWP Growth 2016-2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare Broker' datatype='string' name='[Broker Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Torres Ltd NY&quot;'>
              <calculation class='tableau' formula='&quot;Torres Ltd NY&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column caption='Compare1' datatype='boolean' name='[Calculation_420242176005550093]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([broker_name broker_name],[Parameters].[Broker Name Parameter])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2019-20' datatype='real' default-format='p0.00%' name='[Calculation_50947001529171978]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2020 GWP_2020])-ZN([GWP_2019 GWP_2019])))/ZN([GWP_2019 GWP_2019])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2016-17' datatype='real' default-format='p0.00%' name='[GWP Growth 2017-18 (copy)_50947001529905166]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2017 GWP_2017])-ZN([GWP_2016 GWP_2016])))/ZN([GWP_2016 GWP_2016])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2017-18' datatype='real' default-format='p0.00%' name='[GWP Growth 2018-19 (copy)_50947001529724941]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN ([GWP_2018 GWP_2018])- ZN( [GWP_2017 GWP_2017]) ) /ZN([GWP_2017 GWP_2017])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2018-19' datatype='real' default-format='p0.00%' name='[GWP Growth 2019-20 (copy)_50947001529548812]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2019 GWP_2019])-ZN([GWP_2018 GWP_2018])))/ZN([GWP_2018 GWP_2018])' />
            </column>
            <column caption='GWP 2016' datatype='real' default-format='C1033%' name='[GWP_2016 GWP_2016]' role='measure' type='quantitative' />
            <column caption='GWP 2017' datatype='real' default-format='C1033%' name='[GWP_2017 GWP_2017]' role='measure' type='quantitative' />
            <column caption='GWP 2018' datatype='real' default-format='C1033%' name='[GWP_2018 GWP_2018]' role='measure' type='quantitative' />
            <column caption='GWP 2019' datatype='real' default-format='C1033%' name='[GWP_2019 GWP_2019]' role='measure' type='quantitative' />
            <column caption='GWP 2020' datatype='real' default-format='C1033%' name='[GWP_2020 GWP_2020]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_50947001529171978]' derivation='Avg' name='[avg:Calculation_50947001529171978:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GWP Growth 2017-18 (copy)_50947001529905166]' derivation='Avg' name='[avg:GWP Growth 2017-18 (copy)_50947001529905166:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GWP Growth 2018-19 (copy)_50947001529724941]' derivation='Avg' name='[avg:GWP Growth 2018-19 (copy)_50947001529724941:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GWP Growth 2019-20 (copy)_50947001529548812]' derivation='Avg' name='[avg:GWP Growth 2019-20 (copy)_50947001529548812:qk]' pivot='key' type='quantitative' />
            <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_420242176005550093]' derivation='None' name='[none:Calculation_420242176005550093:nk]' pivot='key' type='nominal' />
            <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2017-18 (copy)_50947001529905166:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2018-19 (copy)_50947001529724941:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2019-20 (copy)_50947001529548812:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:Calculation_50947001529171978:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2017-18 (copy)_50947001529905166:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2018-19 (copy)_50947001529724941:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2019-20 (copy)_50947001529548812:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:Calculation_50947001529171978:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Avg GWP Growth YoY (copy)_420242175879086084:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]'>
            <groupfilter function='member' level='[none:Calculation_420242176005550093:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='55' />
            <format attr='title' class='0' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='115' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='on' />
            <format attr='text-orientation' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='-90' />
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='false' />
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' value='false' />
            <format attr='break-on-special' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' />
              <text column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk] / [federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names])</rows>
        <cols>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{2F145C40-D674-4B77-B722-9EBDEA21F4F2}' />
    </worksheet>
    <worksheet name='Sheet 30 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Broker GWP Growth 2016-2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare Broker ' datatype='string' name='[Compare Broker (copy)_420242175999508488]' param-domain-type='list' role='measure' type='nominal' value='&quot;Mckenzie, Hunt and Rodriguez OH&quot;'>
              <calculation class='tableau' formula='&quot;Mckenzie, Hunt and Rodriguez OH&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column aggregation='Avg' caption='GWP Growth 2019-20' datatype='real' default-format='p0.00%' name='[Calculation_50947001529171978]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2020 GWP_2020])-ZN([GWP_2019 GWP_2019])))/ZN([GWP_2019 GWP_2019])' />
            </column>
            <column caption='NullEliminator' datatype='boolean' name='[Calculation_947726284754411527]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[PolicyCount_2016 PolicyCount_2016] == 0 OR  [PolicyCount_2017 PolicyCount_2017]==0 OR [PolicyCount_2018 PolicyCount_2018]==0 OR [PolicyCount_2019 PolicyCount_2019]==0 OR [PolicyCount_2020 PolicyCount_2020]==0' />
            </column>
            <column caption='SR2016' datatype='real' default-format='p0.00%' name='[Calculation_947726284861599760]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN([PolicyCount_2016 PolicyCount_2016])/ZN([Submissions_2016 Submissions_2016])' />
            </column>
            <column caption='Compare1 (copy)' datatype='boolean' name='[Compare1 (copy)_420242176005783566]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([broker_name broker_name],[Parameters].[Compare Broker (copy)_420242175999508488])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2016-17' datatype='real' default-format='p0.00%' name='[GWP Growth 2017-18 (copy)_50947001529905166]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2017 GWP_2017])-ZN([GWP_2016 GWP_2016])))/ZN([GWP_2016 GWP_2016])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2017-18' datatype='real' default-format='p0.00%' name='[GWP Growth 2018-19 (copy)_50947001529724941]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN ([GWP_2018 GWP_2018])- ZN( [GWP_2017 GWP_2017]) ) /ZN([GWP_2017 GWP_2017])' />
            </column>
            <column aggregation='Avg' caption='GWP Growth 2018-19' datatype='real' default-format='p0.00%' name='[GWP Growth 2019-20 (copy)_50947001529548812]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((ZN([GWP_2019 GWP_2019])-ZN([GWP_2018 GWP_2018])))/ZN([GWP_2018 GWP_2018])' />
            </column>
            <column caption='GWP 2016' datatype='real' default-format='C1033%' name='[GWP_2016 GWP_2016]' role='measure' type='quantitative' />
            <column caption='GWP 2017' datatype='real' default-format='C1033%' name='[GWP_2017 GWP_2017]' role='measure' type='quantitative' />
            <column caption='GWP 2018' datatype='real' default-format='C1033%' name='[GWP_2018 GWP_2018]' role='measure' type='quantitative' />
            <column caption='GWP 2019' datatype='real' default-format='C1033%' name='[GWP_2019 GWP_2019]' role='measure' type='quantitative' />
            <column caption='GWP 2020' datatype='real' default-format='C1033%' name='[GWP_2020 GWP_2020]' role='measure' type='quantitative' />
            <column caption='Policy Count 2016' datatype='integer' name='[PolicyCount_2016 PolicyCount_2016]' role='measure' type='quantitative' />
            <column caption='Policy Count 2017' datatype='integer' name='[PolicyCount_2017 PolicyCount_2017]' role='measure' type='quantitative' />
            <column caption='Policy Count 2018' datatype='integer' name='[PolicyCount_2018 PolicyCount_2018]' role='measure' type='quantitative' />
            <column caption='Policy Count 2019' datatype='integer' name='[PolicyCount_2019 PolicyCount_2019]' role='measure' type='quantitative' />
            <column caption='Policy Count 2020' datatype='integer' name='[PolicyCount_2020 PolicyCount_2020]' role='measure' type='quantitative' />
            <column caption='Submissions 2016' datatype='integer' name='[Submissions_2016 Submissions_2016]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_50947001529171978]' derivation='Avg' name='[avg:Calculation_50947001529171978:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GWP Growth 2017-18 (copy)_50947001529905166]' derivation='Avg' name='[avg:GWP Growth 2017-18 (copy)_50947001529905166:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GWP Growth 2018-19 (copy)_50947001529724941]' derivation='Avg' name='[avg:GWP Growth 2018-19 (copy)_50947001529724941:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GWP Growth 2019-20 (copy)_50947001529548812]' derivation='Avg' name='[avg:GWP Growth 2019-20 (copy)_50947001529548812:qk]' pivot='key' type='quantitative' />
            <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_947726284754411527]' derivation='None' name='[none:Calculation_947726284754411527:nk]' pivot='key' type='nominal' />
            <column-instance column='[Compare1 (copy)_420242176005783566]' derivation='None' name='[none:Compare1 (copy)_420242176005783566:nk]' pivot='key' type='nominal' />
            <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_947726284861599760]' derivation='Sum' name='[sum:Calculation_947726284861599760:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2017-18 (copy)_50947001529905166:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2018-19 (copy)_50947001529724941:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2019-20 (copy)_50947001529548812:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:Calculation_50947001529171978:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2017-18 (copy)_50947001529905166:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Calculation_947726284861599760:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2018-19 (copy)_50947001529724941:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2019-20 (copy)_50947001529548812:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:Calculation_50947001529171978:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_947726284754411527:nk]'>
            <groupfilter function='member' level='[none:Calculation_947726284754411527:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]'>
            <groupfilter function='member' level='[none:Compare1 (copy)_420242176005783566:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_947726284754411527:nk]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</column>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='55' />
            <format attr='title' class='0' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='115' />
            <format attr='text-format' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[avg:GWP Growth 2017-18 (copy)_50947001529905166:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='false' />
            <format attr='wrap' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='on' />
            <format attr='text-orientation' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' value='-90' />
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' />
              <text column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk] / [federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names])</rows>
        <cols>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{714E3234-3DBD-46C6-9098-4D18F1116179}' />
    </worksheet>
    <worksheet name='map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>GWP: Avg. Growth and Total</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare Broker' datatype='string' name='[Broker Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Torres Ltd NY&quot;'>
              <calculation class='tableau' formula='&quot;Torres Ltd NY&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column caption='Compare1' datatype='boolean' name='[Calculation_420242176005550093]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([broker_name broker_name],[Parameters].[Broker Name Parameter])' />
            </column>
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state state]' new-bin='true'>
                <bin default-name='false' value='&quot;Atlantic Island&quot;'>
                  <value>&quot;PR&quot;</value>
                  <value>&quot;VI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East North Central&quot;'>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;MI&quot;</value>
                  <value>&quot;OH&quot;</value>
                  <value>&quot;WI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East South Central&quot;'>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;KY&quot;</value>
                  <value>&quot;MS&quot;</value>
                  <value>&quot;TN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mid Atlantic Coast&quot;'>
                  <value>&quot;NJ&quot;</value>
                  <value>&quot;NY&quot;</value>
                  <value>&quot;PA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mountain&quot;'>
                  <value>&quot;AZ&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NM&quot;</value>
                  <value>&quot;NV&quot;</value>
                  <value>&quot;UT&quot;</value>
                  <value>&quot;WY&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New England&quot;'>
                  <value>&quot;CT&quot;</value>
                  <value>&quot;ME&quot;</value>
                  <value>&quot;NH&quot;</value>
                  <value>&quot;RI&quot;</value>
                  <value>&quot;VT&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Coast&quot;'>
                  <value>&quot;AK&quot;</value>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;WA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Island&quot;'>
                  <value>&quot;AS&quot;</value>
                  <value>&quot;GU&quot;</value>
                  <value>&quot;HI&quot;</value>
                  <value>&quot;MP&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Atlantic Coast&quot;'>
                  <value>&quot;DC&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;FL&quot;</value>
                  <value>&quot;GA&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;SC&quot;</value>
                  <value>&quot;VA&quot;</value>
                  <value>&quot;WV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West North Central&quot;'>
                  <value>&quot;IA&quot;</value>
                  <value>&quot;KS&quot;</value>
                  <value>&quot;MN&quot;</value>
                  <value>&quot;MO&quot;</value>
                  <value>&quot;ND&quot;</value>
                  <value>&quot;NE&quot;</value>
                  <value>&quot;SD&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West South Central&quot;'>
                  <value>&quot;LA&quot;</value>
                  <value>&quot;OK&quot;</value>
                  <value>&quot;TX&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_420242176005550093]' derivation='None' name='[none:Calculation_420242176005550093:nk]' pivot='key' type='nominal' />
            <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[state state]' derivation='None' name='[none:state state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]'>
            <groupfilter function='member' level='[none:Calculation_420242176005550093:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:state state:nk]' />
              <lod column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]' />
              <geometry column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk] * [federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Latitude (generated)])</rows>
        <cols>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5ECF63C1-11CD-4A00-B640-A5CBADF110DD}' />
    </worksheet>
    <worksheet name='map (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>GWP: Avg. Growth and Total</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='broker_data' name='federated.0zg9prl1pusjai1d3u8ig0bluv9x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare Broker ' datatype='string' name='[Compare Broker (copy)_420242175999508488]' param-domain-type='list' role='measure' type='nominal' value='&quot;Mckenzie, Hunt and Rodriguez OH&quot;'>
              <calculation class='tableau' formula='&quot;Mckenzie, Hunt and Rodriguez OH&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zg9prl1pusjai1d3u8ig0bluv9x'>
            <column caption='Compare1 (copy)' datatype='boolean' name='[Compare1 (copy)_420242176005783566]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([broker_name broker_name],[Parameters].[Compare Broker (copy)_420242175999508488])' />
            </column>
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state state]' new-bin='true'>
                <bin default-name='false' value='&quot;Atlantic Island&quot;'>
                  <value>&quot;PR&quot;</value>
                  <value>&quot;VI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East North Central&quot;'>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;MI&quot;</value>
                  <value>&quot;OH&quot;</value>
                  <value>&quot;WI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East South Central&quot;'>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;KY&quot;</value>
                  <value>&quot;MS&quot;</value>
                  <value>&quot;TN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mid Atlantic Coast&quot;'>
                  <value>&quot;NJ&quot;</value>
                  <value>&quot;NY&quot;</value>
                  <value>&quot;PA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mountain&quot;'>
                  <value>&quot;AZ&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NM&quot;</value>
                  <value>&quot;NV&quot;</value>
                  <value>&quot;UT&quot;</value>
                  <value>&quot;WY&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New England&quot;'>
                  <value>&quot;CT&quot;</value>
                  <value>&quot;ME&quot;</value>
                  <value>&quot;NH&quot;</value>
                  <value>&quot;RI&quot;</value>
                  <value>&quot;VT&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Coast&quot;'>
                  <value>&quot;AK&quot;</value>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;WA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific Island&quot;'>
                  <value>&quot;AS&quot;</value>
                  <value>&quot;GU&quot;</value>
                  <value>&quot;HI&quot;</value>
                  <value>&quot;MP&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Atlantic Coast&quot;'>
                  <value>&quot;DC&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;FL&quot;</value>
                  <value>&quot;GA&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;SC&quot;</value>
                  <value>&quot;VA&quot;</value>
                  <value>&quot;WV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West North Central&quot;'>
                  <value>&quot;IA&quot;</value>
                  <value>&quot;KS&quot;</value>
                  <value>&quot;MN&quot;</value>
                  <value>&quot;MO&quot;</value>
                  <value>&quot;ND&quot;</value>
                  <value>&quot;NE&quot;</value>
                  <value>&quot;SD&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West South Central&quot;'>
                  <value>&quot;LA&quot;</value>
                  <value>&quot;OK&quot;</value>
                  <value>&quot;TX&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Broker Name' datatype='string' name='[broker_name broker_name]' role='dimension' type='nominal' />
            <column-instance column='[Compare1 (copy)_420242176005783566]' derivation='None' name='[none:Compare1 (copy)_420242176005783566:nk]' pivot='key' type='nominal' />
            <column-instance column='[broker_name broker_name]' derivation='None' name='[none:broker_name broker_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[state state]' derivation='None' name='[none:state state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]'>
            <groupfilter function='member' level='[none:Compare1 (copy)_420242176005783566:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:state state:nk]' />
              <lod column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]' />
              <geometry column='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk] * [federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Latitude (generated)])</rows>
        <cols>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9B107B62-CD82-4660-BC5C-DA5C25F2F749}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='1600' maxwidth='1597' minheight='1411' minwidth='1197' sizing-mode='range' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Compare Broker' datatype='string' name='[Broker Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Torres Ltd NY&quot;'>
          <calculation class='tableau' formula='&quot;Torres Ltd NY&quot;' />
          <members>
            <member value='&quot;Adams-Clark GU&quot;' />
            <member value='&quot;Aguilar-Hughes NH&quot;' />
            <member value='&quot;Aguirre, Torres and Johnson DC&quot;' />
            <member value='&quot;Allen, Young and Smith ND&quot;' />
            <member value='&quot;Anderson-Rivers MD&quot;' />
            <member value='&quot;Anderson, Wilkins and Hicks OK&quot;' />
            <member value='&quot;Atkins, Chavez and Jones CO&quot;' />
            <member value='&quot;Baird Inc PR&quot;' />
            <member value='&quot;Baker Inc AR&quot;' />
            <member value='&quot;Barnes Inc LA&quot;' />
            <member value='&quot;Barnes LLC IN&quot;' />
            <member value='&quot;Barnett-Johnson DE&quot;' />
            <member value='&quot;Bauer PLC ND&quot;' />
            <member value='&quot;Becker-Burns SC&quot;' />
            <member value='&quot;Bell, Roberts and Schroeder AZ&quot;' />
            <member value='&quot;Berry, Hutchinson and Edwards NE&quot;' />
            <member value='&quot;Blanchard-Henson NJ&quot;' />
            <member value='&quot;Booker and Sons HI&quot;' />
            <member value='&quot;Boone, Beck and Martinez IL&quot;' />
            <member value='&quot;Brandt and Sons SD&quot;' />
            <member value='&quot;Bright, Huynh and Murphy WA&quot;' />
            <member value='&quot;Brock, Burgess and Cooper RI&quot;' />
            <member value='&quot;Brooks-Rivera AK&quot;' />
            <member value='&quot;Brown and Sons MI&quot;' />
            <member value='&quot;Brown Inc LA&quot;' />
            <member value='&quot;Brown-Ramirez CT&quot;' />
            <member value='&quot;Caldwell-Campbell IN&quot;' />
            <member value='&quot;Calhoun Group CA&quot;' />
            <member value='&quot;Campbell-Benson SC&quot;' />
            <member value='&quot;Campos Ltd WA&quot;' />
            <member value='&quot;Carpenter Ltd AL&quot;' />
            <member value='&quot;Castro and Sons RI&quot;' />
            <member value='&quot;Chaney-Fields ME&quot;' />
            <member value='&quot;Choi-Simpson HI&quot;' />
            <member value='&quot;Christensen Ltd VT&quot;' />
            <member value='&quot;Christensen-Sandoval VA&quot;' />
            <member value='&quot;Collins and Sons IL&quot;' />
            <member value='&quot;Collins, Kelly and Smith MP&quot;' />
            <member value='&quot;Cruz-Brown NE&quot;' />
            <member value='&quot;Cruz, Brooks and Smith OH&quot;' />
            <member value='&quot;Daniels Inc WV&quot;' />
            <member value='&quot;Daugherty, Snyder and Reyes NY&quot;' />
            <member value='&quot;Davenport and Sons IA&quot;' />
            <member value='&quot;Davies, Cole and Taylor CA&quot;' />
            <member value='&quot;Davis LLC MN&quot;' />
            <member value='&quot;Davis, Griffin and Garcia WV&quot;' />
            <member value='&quot;Delgado-Marsh NV&quot;' />
            <member value='&quot;Diaz, Robinson and Perez GA&quot;' />
            <member value='&quot;Dillon, Lopez and Ayers SC&quot;' />
            <member value='&quot;Dunn-Medina AZ&quot;' />
            <member value='&quot;English and Sons WA&quot;' />
            <member value='&quot;Farrell, Shaffer and Cardenas GU&quot;' />
            <member value='&quot;Flores PLC NC&quot;' />
            <member value='&quot;Flowers-Cooper HI&quot;' />
            <member value='&quot;Floyd, Gilmore and Marshall PR&quot;' />
            <member value='&quot;Ford, Oneal and Smith ND&quot;' />
            <member value='&quot;Francis Group AL&quot;' />
            <member value='&quot;Freeman-Fritz DE&quot;' />
            <member value='&quot;Garcia LLC TN&quot;' />
            <member value='&quot;Garcia-Berg ID&quot;' />
            <member value='&quot;Gordon, James and Hudson NJ&quot;' />
            <member value='&quot;Grant LLC DE&quot;' />
            <member value='&quot;Green Ltd MD&quot;' />
            <member value='&quot;Gutierrez-Henderson DC&quot;' />
            <member value='&quot;Hamilton Inc MI&quot;' />
            <member value='&quot;Hamilton, Wiggins and Mckenzie IA&quot;' />
            <member value='&quot;Hampton LLC GU&quot;' />
            <member value='&quot;Hardin-Shaw MT&quot;' />
            <member value='&quot;Hardy, Jackson and Martinez VI&quot;' />
            <member value='&quot;Harvey Ltd WY&quot;' />
            <member value='&quot;Henderson and Sons AL&quot;' />
            <member value='&quot;Herman-Skinner PR&quot;' />
            <member value='&quot;Hernandez and Sons IN&quot;' />
            <member value='&quot;Hernandez Group NA&quot;' />
            <member value='&quot;Ho-Nash MN&quot;' />
            <member value='&quot;Holland, Hubbard and Ellis AR&quot;' />
            <member value='&quot;Holmes-Jones OH&quot;' />
            <member value='&quot;Hudson Ltd ME&quot;' />
            <member value='&quot;Hughes, King and Jordan VT&quot;' />
            <member value='&quot;Hunt-Brown RI&quot;' />
            <member value='&quot;Hurley-Parker NH&quot;' />
            <member value='&quot;Jackson Group NH&quot;' />
            <member value='&quot;Jackson-Ingram RI&quot;' />
            <member value='&quot;Jackson, Wells and Hardy KS&quot;' />
            <member value='&quot;Jackson, Wise and Casey CA&quot;' />
            <member value='&quot;Jimenez PLC IA&quot;' />
            <member value='&quot;Johnson Group RI&quot;' />
            <member value='&quot;Johnson Group WV&quot;' />
            <member value='&quot;Johnson PLC MO&quot;' />
            <member value='&quot;Jones-Doyle AZ&quot;' />
            <member value='&quot;Kelly, Martinez and Harris CO&quot;' />
            <member value='&quot;Kennedy LLC PA&quot;' />
            <member value='&quot;King Inc NC&quot;' />
            <member value='&quot;Lawrence-Baker ME&quot;' />
            <member value='&quot;Lawson, Murphy and Flores RI&quot;' />
            <member value='&quot;Long-Lutz LA&quot;' />
            <member value='&quot;Lopez-Walker NV&quot;' />
            <member value='&quot;Lozano, Bryant and Carpenter AS&quot;' />
            <member value='&quot;Lyons, Mcdowell and Dunlap NC&quot;' />
            <member value='&quot;Mann, Fields and Sullivan AS&quot;' />
            <member value='&quot;Martin-Ortega MD&quot;' />
            <member value='&quot;Martin, Bryant and Boyd UT&quot;' />
            <member value='&quot;Mata, Williams and Diaz VA&quot;' />
            <member value='&quot;Matthews-Pace NC&quot;' />
            <member value='&quot;Maxwell and Sons MI&quot;' />
            <member value='&quot;Mccann Inc AS&quot;' />
            <member value='&quot;Mcintosh-Adams NA&quot;' />
            <member value='&quot;Mckenzie, Hunt and Rodriguez OH&quot;' />
            <member value='&quot;Meyers Ltd VA&quot;' />
            <member value='&quot;Meza-Ray WV&quot;' />
            <member value='&quot;Miller Ltd NY&quot;' />
            <member value='&quot;Moody, Bentley and Cohen OK&quot;' />
            <member value='&quot;Moore-Griffin WI&quot;' />
            <member value='&quot;Moore-Roberts MS&quot;' />
            <member value='&quot;Moran Group VA&quot;' />
            <member value='&quot;Moreno, Cline and Moreno CT&quot;' />
            <member value='&quot;Morgan LLC GA&quot;' />
            <member value='&quot;Morris, Baldwin and Gomez ID&quot;' />
            <member value='&quot;Morris, Ritter and Anderson AS&quot;' />
            <member value='&quot;Morrison, Blackwell and Black VA&quot;' />
            <member value='&quot;Myers Ltd MN&quot;' />
            <member value='&quot;Myers, Lewis and Gilbert OH&quot;' />
            <member value='&quot;Nelson and Sons MN&quot;' />
            <member value='&quot;Nelson-Rosario IA&quot;' />
            <member value='&quot;Nguyen, Johnson and Williamson CA&quot;' />
            <member value='&quot;Oneill LLC FL&quot;' />
            <member value='&quot;Oneill-Rogers NV&quot;' />
            <member value='&quot;Pacheco Group HI&quot;' />
            <member value='&quot;Parker PLC NE&quot;' />
            <member value='&quot;Patterson and Sons WA&quot;' />
            <member value='&quot;Patterson-Jones TX&quot;' />
            <member value='&quot;Peters-Jones AK&quot;' />
            <member value='&quot;Petersen, Foley and Compton CO&quot;' />
            <member value='&quot;Powers PLC IL&quot;' />
            <member value='&quot;Price, Ray and Rivera MP&quot;' />
            <member value='&quot;Price, Smith and Soto MO&quot;' />
            <member value='&quot;Pruitt, Spencer and Williams FL&quot;' />
            <member value='&quot;Ramirez and Sons WI&quot;' />
            <member value='&quot;Ramirez, Perry and Howard WI&quot;' />
            <member value='&quot;Ramos Inc AZ&quot;' />
            <member value='&quot;Ramos, Salazar and Wagner OH&quot;' />
            <member value='&quot;Ramsey Group TN&quot;' />
            <member value='&quot;Reed LLC TX&quot;' />
            <member value='&quot;Reeves PLC ME&quot;' />
            <member value='&quot;Reynolds, Simpson and Davenport MS&quot;' />
            <member value='&quot;Reynolds, Velazquez and Chase MD&quot;' />
            <member value='&quot;Richardson-Brown NC&quot;' />
            <member value='&quot;Rivera Ltd AS&quot;' />
            <member value='&quot;Robertson, Williamson and Lowe VI&quot;' />
            <member value='&quot;Robinson, Hickman and Le CO&quot;' />
            <member value='&quot;Romero, Hall and Stokes WY&quot;' />
            <member value='&quot;Ross-Garcia AS&quot;' />
            <member value='&quot;Ryan, Cantu and Graham HI&quot;' />
            <member value='&quot;Sampson, Austin and Baker AK&quot;' />
            <member value='&quot;Sandoval, Bell and Dunn AK&quot;' />
            <member value='&quot;Schmidt-Osborn ME&quot;' />
            <member value='&quot;Sellers, Peterson and Murillo VI&quot;' />
            <member value='&quot;Smith and Sons VI&quot;' />
            <member value='&quot;Smith Inc LA&quot;' />
            <member value='&quot;Snyder-Lewis CT&quot;' />
            <member value='&quot;Steele-Moore PR&quot;' />
            <member value='&quot;Steele, Hall and Johnson LA&quot;' />
            <member value='&quot;Stephenson-Alvarez IA&quot;' />
            <member value='&quot;Summers, Gonzalez and Evans KS&quot;' />
            <member value='&quot;Taylor PLC PR&quot;' />
            <member value='&quot;Taylor, Mills and Gordon SC&quot;' />
            <member value='&quot;Thomas, Crawford and Montoya MI&quot;' />
            <member value='&quot;Torres Ltd NY&quot;' />
            <member value='&quot;Torres-Anderson NM&quot;' />
            <member value='&quot;Trujillo-Greene NE&quot;' />
            <member value='&quot;Turner-Morales KY&quot;' />
            <member value='&quot;Vasquez Group IN&quot;' />
            <member value='&quot;Vasquez LLC DC&quot;' />
            <member value='&quot;Walters, Solis and Miller AS&quot;' />
            <member value='&quot;Wang, Williams and Johnson VT&quot;' />
            <member value='&quot;Watson-Calhoun LA&quot;' />
            <member value='&quot;Weeks-Leonard MS&quot;' />
            <member value='&quot;Wells-Anderson OH&quot;' />
            <member value='&quot;Wells, Beck and Brown NM&quot;' />
            <member value='&quot;Wheeler-Perry NY&quot;' />
            <member value='&quot;White-Mccormick SC&quot;' />
            <member value='&quot;Williams Ltd IN&quot;' />
            <member value='&quot;Williams-West CO&quot;' />
            <member value='&quot;Williams, Oconnor and Hayes NM&quot;' />
            <member value='&quot;Wong Ltd VA&quot;' />
            <member value='&quot;Wright and Sons VA&quot;' />
            <member value='&quot;Wu PLC IN&quot;' />
            <member value='&quot;Zamora PLC MO&quot;' />
          </members>
        </column>
        <column caption='Compare Broker ' datatype='string' name='[Compare Broker (copy)_420242175999508488]' param-domain-type='list' role='measure' type='nominal' value='&quot;Mckenzie, Hunt and Rodriguez OH&quot;'>
          <calculation class='tableau' formula='&quot;Mckenzie, Hunt and Rodriguez OH&quot;' />
          <members>
            <member value='&quot;Adams-Clark GU&quot;' />
            <member value='&quot;Aguilar-Hughes NH&quot;' />
            <member value='&quot;Aguirre, Torres and Johnson DC&quot;' />
            <member value='&quot;Allen, Young and Smith ND&quot;' />
            <member value='&quot;Anderson-Rivers MD&quot;' />
            <member value='&quot;Anderson, Wilkins and Hicks OK&quot;' />
            <member value='&quot;Atkins, Chavez and Jones CO&quot;' />
            <member value='&quot;Baird Inc PR&quot;' />
            <member value='&quot;Baker Inc AR&quot;' />
            <member value='&quot;Barnes Inc LA&quot;' />
            <member value='&quot;Barnes LLC IN&quot;' />
            <member value='&quot;Barnett-Johnson DE&quot;' />
            <member value='&quot;Bauer PLC ND&quot;' />
            <member value='&quot;Becker-Burns SC&quot;' />
            <member value='&quot;Bell, Roberts and Schroeder AZ&quot;' />
            <member value='&quot;Berry, Hutchinson and Edwards NE&quot;' />
            <member value='&quot;Blanchard-Henson NJ&quot;' />
            <member value='&quot;Booker and Sons HI&quot;' />
            <member value='&quot;Boone, Beck and Martinez IL&quot;' />
            <member value='&quot;Brandt and Sons SD&quot;' />
            <member value='&quot;Bright, Huynh and Murphy WA&quot;' />
            <member value='&quot;Brock, Burgess and Cooper RI&quot;' />
            <member value='&quot;Brooks-Rivera AK&quot;' />
            <member value='&quot;Brown and Sons MI&quot;' />
            <member value='&quot;Brown Inc LA&quot;' />
            <member value='&quot;Brown-Ramirez CT&quot;' />
            <member value='&quot;Caldwell-Campbell IN&quot;' />
            <member value='&quot;Calhoun Group CA&quot;' />
            <member value='&quot;Campbell-Benson SC&quot;' />
            <member value='&quot;Campos Ltd WA&quot;' />
            <member value='&quot;Carpenter Ltd AL&quot;' />
            <member value='&quot;Castro and Sons RI&quot;' />
            <member value='&quot;Chaney-Fields ME&quot;' />
            <member value='&quot;Choi-Simpson HI&quot;' />
            <member value='&quot;Christensen Ltd VT&quot;' />
            <member value='&quot;Christensen-Sandoval VA&quot;' />
            <member value='&quot;Collins and Sons IL&quot;' />
            <member value='&quot;Collins, Kelly and Smith MP&quot;' />
            <member value='&quot;Cruz-Brown NE&quot;' />
            <member value='&quot;Cruz, Brooks and Smith OH&quot;' />
            <member value='&quot;Daniels Inc WV&quot;' />
            <member value='&quot;Daugherty, Snyder and Reyes NY&quot;' />
            <member value='&quot;Davenport and Sons IA&quot;' />
            <member value='&quot;Davies, Cole and Taylor CA&quot;' />
            <member value='&quot;Davis LLC MN&quot;' />
            <member value='&quot;Davis, Griffin and Garcia WV&quot;' />
            <member value='&quot;Delgado-Marsh NV&quot;' />
            <member value='&quot;Diaz, Robinson and Perez GA&quot;' />
            <member value='&quot;Dillon, Lopez and Ayers SC&quot;' />
            <member value='&quot;Dunn-Medina AZ&quot;' />
            <member value='&quot;English and Sons WA&quot;' />
            <member value='&quot;Farrell, Shaffer and Cardenas GU&quot;' />
            <member value='&quot;Flores PLC NC&quot;' />
            <member value='&quot;Flowers-Cooper HI&quot;' />
            <member value='&quot;Floyd, Gilmore and Marshall PR&quot;' />
            <member value='&quot;Ford, Oneal and Smith ND&quot;' />
            <member value='&quot;Francis Group AL&quot;' />
            <member value='&quot;Freeman-Fritz DE&quot;' />
            <member value='&quot;Garcia LLC TN&quot;' />
            <member value='&quot;Garcia-Berg ID&quot;' />
            <member value='&quot;Gordon, James and Hudson NJ&quot;' />
            <member value='&quot;Grant LLC DE&quot;' />
            <member value='&quot;Green Ltd MD&quot;' />
            <member value='&quot;Gutierrez-Henderson DC&quot;' />
            <member value='&quot;Hamilton Inc MI&quot;' />
            <member value='&quot;Hamilton, Wiggins and Mckenzie IA&quot;' />
            <member value='&quot;Hampton LLC GU&quot;' />
            <member value='&quot;Hardin-Shaw MT&quot;' />
            <member value='&quot;Hardy, Jackson and Martinez VI&quot;' />
            <member value='&quot;Harvey Ltd WY&quot;' />
            <member value='&quot;Henderson and Sons AL&quot;' />
            <member value='&quot;Herman-Skinner PR&quot;' />
            <member value='&quot;Hernandez and Sons IN&quot;' />
            <member value='&quot;Hernandez Group NA&quot;' />
            <member value='&quot;Ho-Nash MN&quot;' />
            <member value='&quot;Holland, Hubbard and Ellis AR&quot;' />
            <member value='&quot;Holmes-Jones OH&quot;' />
            <member value='&quot;Hudson Ltd ME&quot;' />
            <member value='&quot;Hughes, King and Jordan VT&quot;' />
            <member value='&quot;Hunt-Brown RI&quot;' />
            <member value='&quot;Hurley-Parker NH&quot;' />
            <member value='&quot;Jackson Group NH&quot;' />
            <member value='&quot;Jackson-Ingram RI&quot;' />
            <member value='&quot;Jackson, Wells and Hardy KS&quot;' />
            <member value='&quot;Jackson, Wise and Casey CA&quot;' />
            <member value='&quot;Jimenez PLC IA&quot;' />
            <member value='&quot;Johnson Group RI&quot;' />
            <member value='&quot;Johnson Group WV&quot;' />
            <member value='&quot;Johnson PLC MO&quot;' />
            <member value='&quot;Jones-Doyle AZ&quot;' />
            <member value='&quot;Kelly, Martinez and Harris CO&quot;' />
            <member value='&quot;Kennedy LLC PA&quot;' />
            <member value='&quot;King Inc NC&quot;' />
            <member value='&quot;Lawrence-Baker ME&quot;' />
            <member value='&quot;Lawson, Murphy and Flores RI&quot;' />
            <member value='&quot;Long-Lutz LA&quot;' />
            <member value='&quot;Lopez-Walker NV&quot;' />
            <member value='&quot;Lozano, Bryant and Carpenter AS&quot;' />
            <member value='&quot;Lyons, Mcdowell and Dunlap NC&quot;' />
            <member value='&quot;Mann, Fields and Sullivan AS&quot;' />
            <member value='&quot;Martin-Ortega MD&quot;' />
            <member value='&quot;Martin, Bryant and Boyd UT&quot;' />
            <member value='&quot;Mata, Williams and Diaz VA&quot;' />
            <member value='&quot;Matthews-Pace NC&quot;' />
            <member value='&quot;Maxwell and Sons MI&quot;' />
            <member value='&quot;Mccann Inc AS&quot;' />
            <member value='&quot;Mcintosh-Adams NA&quot;' />
            <member value='&quot;Mckenzie, Hunt and Rodriguez OH&quot;' />
            <member value='&quot;Meyers Ltd VA&quot;' />
            <member value='&quot;Meza-Ray WV&quot;' />
            <member value='&quot;Miller Ltd NY&quot;' />
            <member value='&quot;Moody, Bentley and Cohen OK&quot;' />
            <member value='&quot;Moore-Griffin WI&quot;' />
            <member value='&quot;Moore-Roberts MS&quot;' />
            <member value='&quot;Moran Group VA&quot;' />
            <member value='&quot;Moreno, Cline and Moreno CT&quot;' />
            <member value='&quot;Morgan LLC GA&quot;' />
            <member value='&quot;Morris, Baldwin and Gomez ID&quot;' />
            <member value='&quot;Morris, Ritter and Anderson AS&quot;' />
            <member value='&quot;Morrison, Blackwell and Black VA&quot;' />
            <member value='&quot;Myers Ltd MN&quot;' />
            <member value='&quot;Myers, Lewis and Gilbert OH&quot;' />
            <member value='&quot;Nelson and Sons MN&quot;' />
            <member value='&quot;Nelson-Rosario IA&quot;' />
            <member value='&quot;Nguyen, Johnson and Williamson CA&quot;' />
            <member value='&quot;Oneill LLC FL&quot;' />
            <member value='&quot;Oneill-Rogers NV&quot;' />
            <member value='&quot;Pacheco Group HI&quot;' />
            <member value='&quot;Parker PLC NE&quot;' />
            <member value='&quot;Patterson and Sons WA&quot;' />
            <member value='&quot;Patterson-Jones TX&quot;' />
            <member value='&quot;Peters-Jones AK&quot;' />
            <member value='&quot;Petersen, Foley and Compton CO&quot;' />
            <member value='&quot;Powers PLC IL&quot;' />
            <member value='&quot;Price, Ray and Rivera MP&quot;' />
            <member value='&quot;Price, Smith and Soto MO&quot;' />
            <member value='&quot;Pruitt, Spencer and Williams FL&quot;' />
            <member value='&quot;Ramirez and Sons WI&quot;' />
            <member value='&quot;Ramirez, Perry and Howard WI&quot;' />
            <member value='&quot;Ramos Inc AZ&quot;' />
            <member value='&quot;Ramos, Salazar and Wagner OH&quot;' />
            <member value='&quot;Ramsey Group TN&quot;' />
            <member value='&quot;Reed LLC TX&quot;' />
            <member value='&quot;Reeves PLC ME&quot;' />
            <member value='&quot;Reynolds, Simpson and Davenport MS&quot;' />
            <member value='&quot;Reynolds, Velazquez and Chase MD&quot;' />
            <member value='&quot;Richardson-Brown NC&quot;' />
            <member value='&quot;Rivera Ltd AS&quot;' />
            <member value='&quot;Robertson, Williamson and Lowe VI&quot;' />
            <member value='&quot;Robinson, Hickman and Le CO&quot;' />
            <member value='&quot;Romero, Hall and Stokes WY&quot;' />
            <member value='&quot;Ross-Garcia AS&quot;' />
            <member value='&quot;Ryan, Cantu and Graham HI&quot;' />
            <member value='&quot;Sampson, Austin and Baker AK&quot;' />
            <member value='&quot;Sandoval, Bell and Dunn AK&quot;' />
            <member value='&quot;Schmidt-Osborn ME&quot;' />
            <member value='&quot;Sellers, Peterson and Murillo VI&quot;' />
            <member value='&quot;Smith and Sons VI&quot;' />
            <member value='&quot;Smith Inc LA&quot;' />
            <member value='&quot;Snyder-Lewis CT&quot;' />
            <member value='&quot;Steele-Moore PR&quot;' />
            <member value='&quot;Steele, Hall and Johnson LA&quot;' />
            <member value='&quot;Stephenson-Alvarez IA&quot;' />
            <member value='&quot;Summers, Gonzalez and Evans KS&quot;' />
            <member value='&quot;Taylor PLC PR&quot;' />
            <member value='&quot;Taylor, Mills and Gordon SC&quot;' />
            <member value='&quot;Thomas, Crawford and Montoya MI&quot;' />
            <member value='&quot;Torres Ltd NY&quot;' />
            <member value='&quot;Torres-Anderson NM&quot;' />
            <member value='&quot;Trujillo-Greene NE&quot;' />
            <member value='&quot;Turner-Morales KY&quot;' />
            <member value='&quot;Vasquez Group IN&quot;' />
            <member value='&quot;Vasquez LLC DC&quot;' />
            <member value='&quot;Walters, Solis and Miller AS&quot;' />
            <member value='&quot;Wang, Williams and Johnson VT&quot;' />
            <member value='&quot;Watson-Calhoun LA&quot;' />
            <member value='&quot;Weeks-Leonard MS&quot;' />
            <member value='&quot;Wells-Anderson OH&quot;' />
            <member value='&quot;Wells, Beck and Brown NM&quot;' />
            <member value='&quot;Wheeler-Perry NY&quot;' />
            <member value='&quot;White-Mccormick SC&quot;' />
            <member value='&quot;Williams Ltd IN&quot;' />
            <member value='&quot;Williams-West CO&quot;' />
            <member value='&quot;Williams, Oconnor and Hayes NM&quot;' />
            <member value='&quot;Wong Ltd VA&quot;' />
            <member value='&quot;Wright and Sons VA&quot;' />
            <member value='&quot;Wu PLC IN&quot;' />
            <member value='&quot;Zamora PLC MO&quot;' />
          </members>
        </column>
        <column caption='Region Comparison  ' datatype='string' name='[Region Comparison (copy)_838513994200203265]' param-domain-type='list' role='measure' type='nominal' value='&quot;East North Central&quot;'>
          <calculation class='tableau' formula='&quot;East North Central&quot;' />
          <members>
            <member value='&quot;Atlantic Island&quot;' />
            <member value='&quot;East North Central&quot;' />
            <member value='&quot;East South Central&quot;' />
            <member value='&quot;Mid Atlantic Coast&quot;' />
            <member value='&quot;Mountain&quot;' />
            <member value='&quot;New England&quot;' />
            <member value='&quot;Pacific Coast&quot;' />
            <member value='&quot;Pacific Island&quot;' />
            <member value='&quot;South Atlantic Coast&quot;' />
            <member value='&quot;West North Central&quot;' />
            <member value='&quot;West South Central&quot;' />
          </members>
        </column>
        <column caption='Region Comparison' datatype='string' name='[Region Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Mid Atlantic Coast&quot;'>
          <calculation class='tableau' formula='&quot;Mid Atlantic Coast&quot;' />
          <members>
            <member value='&quot;Atlantic Island&quot;' />
            <member value='&quot;East North Central&quot;' />
            <member value='&quot;East South Central&quot;' />
            <member value='&quot;Mid Atlantic Coast&quot;' />
            <member value='&quot;Mountain&quot;' />
            <member value='&quot;New England&quot;' />
            <member value='&quot;Pacific Coast&quot;' />
            <member value='&quot;Pacific Island&quot;' />
            <member value='&quot;South Atlantic Coast&quot;' />
            <member value='&quot;West North Central&quot;' />
            <member value='&quot;West South Central&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98866' id='66' param='horz' type-v2='layout-flow' w='98900' x='550' y='567'>
            <zone h='98866' id='44' type-v2='layout-basic' w='98900' x='550' y='567'>
              <zone h='52020' id='40' param='horz' type-v2='layout-flow' w='98900' x='550' y='567'>
                <zone h='52020' id='12' type-v2='layout-basic' w='98900' x='550' y='567'>
                  <zone h='3055' id='10' mode='type_in' param='[Parameters].[Broker Name Parameter]' type-v2='paramctrl' w='49436' x='550' y='567'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='3047' id='8' mode='type_in' param='[Parameters].[Compare Broker (copy)_420242175999508488]' type-v2='paramctrl' w='49464' x='49986' y='567'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='17454' id='11' name='Sheet 30' w='24728' x='25258' y='17680'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='17470' id='16' name='Sheet 30 (2)' w='24729' x='49986' y='17647'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6706' id='42' name='Avg Stats by Region' w='24720' x='25266' y='10974'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6706' id='41' mode='compact' param='[Parameters].[Region Parameter]' type-v2='paramctrl' w='24716' x='550' y='10974'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='17453' id='48' name='GWP' w='24728' x='25258' y='35134'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='17470' id='52' name='GWP ' w='24729' x='49986' y='35117'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='34907' id='53' name='Policy Lifecycle' w='24708' x='550' y='17680'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='34940' id='57' name='Policy Lifecycle (2)' w='24735' x='74715' y='17647'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='7371' id='58' name='GWP: Avg. Growth and Total' show-title='false' w='27505' x='49986' y='3614'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='7352' id='59' name='GWP: Avg. Growth and Total ' show-title='false' w='24717' x='25269' y='3622'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='7371' id='60' name='map (2)' show-title='false' w='21959' x='77491' y='3614'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='7352' id='63' name='map' show-title='false' w='24719' x='550' y='3622'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6662' id='64' name='Avg Stats by Region (2)' w='24705' x='49986' y='10985'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6662' id='67' mode='compact' param='[Parameters].[Region Comparison (copy)_838513994200203265]' type-v2='paramctrl' w='24759' x='74691' y='10985'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='46846' id='43' name='Overall Distribution: GWP Total by Success Ratio' w='49449' x='550' y='52587'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46846' id='47' name='Overall Distribution: GWP Growth by Success Ratio' w='49451' x='49999' y='52587'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='3250' minheight='3250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='75' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98866' id='74' param='vert' type-v2='layout-flow' w='98900' x='550' y='567'>
                <zone h='3055' id='10' mode='type_in' param='[Parameters].[Broker Name Parameter]' type-v2='paramctrl' w='49436' x='550' y='567'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3047' id='8' mode='type_in' param='[Parameters].[Compare Broker (copy)_420242175999508488]' type-v2='paramctrl' w='49464' x='49986' y='567'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='110' h='7371' id='58' is-fixed='true' name='GWP: Avg. Growth and Total' show-title='false' w='27505' x='49986' y='3614'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='110' h='7371' id='60' is-fixed='true' name='map (2)' show-title='false' w='21959' x='77491' y='3614'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='110' h='7352' id='63' is-fixed='true' name='map' show-title='false' w='24719' x='550' y='3622'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='110' h='7352' id='59' is-fixed='true' name='GWP: Avg. Growth and Total ' show-title='false' w='24717' x='25269' y='3622'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6706' id='41' mode='compact' param='[Parameters].[Region Parameter]' type-v2='paramctrl' w='24716' x='550' y='10974'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='99' h='6706' id='42' is-fixed='true' name='Avg Stats by Region' w='24720' x='25266' y='10974'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='98' h='6662' id='64' is-fixed='true' name='Avg Stats by Region (2)' w='24705' x='49986' y='10985'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6662' id='67' mode='compact' param='[Parameters].[Region Comparison (copy)_838513994200203265]' type-v2='paramctrl' w='24759' x='74691' y='10985'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='272' h='17470' id='16' is-fixed='true' name='Sheet 30 (2)' w='24729' x='49986' y='17647'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34940' id='57' is-fixed='true' name='Policy Lifecycle (2)' w='24735' x='74715' y='17647'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34907' id='53' is-fixed='true' name='Policy Lifecycle' w='24708' x='550' y='17680'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='271' h='17454' id='11' is-fixed='true' name='Sheet 30' w='24728' x='25258' y='17680'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='271' h='17470' id='52' is-fixed='true' name='GWP ' w='24729' x='49986' y='35117'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='271' h='17453' id='48' is-fixed='true' name='GWP' w='24728' x='25258' y='35134'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46846' id='43' is-fixed='true' name='Overall Distribution: GWP Total by Success Ratio' w='49449' x='550' y='52587'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46846' id='47' is-fixed='true' name='Overall Distribution: GWP Growth by Success Ratio' w='49451' x='49999' y='52587'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EC4E3C13-4062-4A74-B2CA-ACA66827B031}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Avg Stats by Region'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg Stats by Region (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GWP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GWP '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GWP: Avg. Growth and Total'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GWP: Avg. Growth and Total '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Overall Distribution: GWP Growth by Success Ratio'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Overall Distribution: GWP Total by Success Ratio'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Policy Lifecycle'>
          <zoom type='entire-view' />
          <highlight field='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Policy Lifecycle (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 30'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 30 (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='41' />
      <simple-id uuid='{A31380E5-C58A-4DB5-A4EB-6572DF3F1059}' />
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:state state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{31F7B865-035C-427A-9590-ADFD4CC5D8B2}' />
    </window>
    <window class='worksheet' name='map (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:state state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55B9D271-7C1F-4BE0-B83B-B5DA2B8EEC0E}' />
    </window>
    <window class='worksheet' name='Quote/Hit/Success Ratio'>
      <cards>
        <edge name='left'>
          <strip size='132'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card mode='compact' param='[Parameters].[Compare Broker (copy)_420242175999508488]' type='parameter' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Broker Name Parameter]</field>
            <field>[Parameters].[Compare Broker (copy)_420242175999508488]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{401FA396-BB14-403F-8105-6E6B4B70D817}' />
    </window>
    <window class='worksheet' name='Sheet 30'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Broker Name Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[sum:Avg GWP Growth YoY (copy)_420242175879086084:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A081CAF-EC4E-4D71-B48A-E1609468A43E}' />
    </window>
    <window class='worksheet' name='Sheet 30 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card mode='compact' param='[Parameters].[Compare Broker (copy)_420242175999508488]' type='parameter' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[State (group)]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_947726284754411527:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01DC19B5-FB1F-44C4-A9AE-D17C3E921AB8}' />
    </window>
    <window class='worksheet' name='Overall Distribution: GWP Total by Success Ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='232'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_947726284754411527:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B37A0010-2B93-461B-BF28-E085A2B08AD7}' />
    </window>
    <window class='worksheet' name='Overall Distribution: GWP Growth by Success Ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='232'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_947726284754411527:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59C009BA-6796-4A22-916C-B1AE032F9838}' />
    </window>
    <window class='worksheet' name='Ratios'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF39AED2-A8E3-4E26-A66A-597D1EEC5803}' />
    </window>
    <window class='worksheet' name='GWP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{347355BE-DCD1-4497-AB2E-8F21A6B92452}' />
    </window>
    <window class='worksheet' name='Ratios (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF71BA03-9E7C-4471-8FEB-1217F5129E81}' />
    </window>
    <window class='worksheet' name='GWP '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C57AB28-B7AE-43D4-9068-0DC3B6420F98}' />
    </window>
    <window class='worksheet' name='Policy Lifecycle'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{97FACF90-296A-491D-9B7C-DCD1DB88283C}' />
    </window>
    <window class='worksheet' name='Policy Lifecycle (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2953D62F-0D2C-4E58-A664-917100B8DEC6}' />
    </window>
    <window class='worksheet' name='GWP by TIV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='212'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_947726284754411527:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E80EC9ED-796E-4041-BB63-FBA89D9E748C}' />
    </window>
    <window class='worksheet' name='GWP: Avg. Growth and Total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{998AD548-7935-4C38-9B92-3ECE6F566A2F}' />
    </window>
    <window class='worksheet' name='GWP: Avg. Growth and Total '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Compare1 (copy)_420242176005783566:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:broker_name broker_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8032DE03-ED12-4951-83C0-347C64EEAB5B}' />
    </window>
    <window class='worksheet' name='Avg Stats by Region (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Region Set]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_796855697595588612:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Region Comparison (copy)_838513994200027136:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3139E1FD-3A37-444F-BA92-E116B3A68D9B}' />
    </window>
    <window class='worksheet' name='Avg Stats by Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[:Measure Names]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[Region Set]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_420242176005550093:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[none:Calculation_796855697595588612:nk]</field>
            <field>[federated.0zg9prl1pusjai1d3u8ig0bluv9x].[usr:Calculation_242349976118923277:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93FE61B2-5386-4926-A0E3-E077CF663F24}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='46' name='Avg Stats by Region' width='192'>
      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
    </thumbnail>
    <thumbnail height='46' name='Avg Stats by Region (2)' width='192'>
      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
      IyIigv8HwBmS7jPFbBcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
    </thumbnail>
    <thumbnail height='192' name='GWP' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='GWP ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GWP by TIV' width='192'>
      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
      3AeuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='67' name='GWP: Avg. Growth and Total' width='192'>
      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
      tS68I3UXk3jvUAnmvpP0MXEfo78FqErLUQP16gucik0i36AY08khBA86za7weIrqNOgCZR8l
      oxownUxI8CBO7wonvkgXeLr+moKjGdVgOY2AcUbk7lzDe4prug359WounIom6stqoJL4jRuJ
      V6j0gbTr+fkXABMefhiojGfjxngUKn1A6/qf0SU/zMOdVl6EVVAUb/tC8orniGgUwcDHGcR3
      pH5zHQ31qC+cIHJ9DBUtzrXH0Q0q0lIp1UWtbqMjATDHb1EAZmnb2ZR0Wbd5/9oJtm5Pw8xv
      Pk/f+63TvQPt3dJQoy36Yrt2SYCPdry7RCuRSLRjvQK0S7anaq80NGf795nt2tljJVqJZKzW
      K3iD9nDOp9p1Eol2bswlg0x52piV/vpyxmr9luzRKm42JWrzYlZq/ce7667ht0S7pzGx4Yo2
      9c1grddY3fXdx/togzfEaDOuNGi12gbtlYwY7YZgL+1YSaN9wdo3U69oG/TnZsRs0AZ7jdVK
      JI32valNNTTegPSNEq1kboz2kuHBhiva5NWTtRL357W78v6ts/WDUF093Mdr5204rM3Li9HO
      lczVGla34Uqq9s1547XuEolWMjZU+49/tneNBm1NTox2pX9jXj/tkvdPa2vaNlHgLhD2Awj0
      aoSX4QR6Nf8Px9DJQpGACXsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='67' name='GWP: Avg. Growth and Total ' width='192'>
      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
      tS68I3UXk3jvUAnmvpP0MXEfo78FqErLUQP16gucik0i36AY08khBA86za7weIrqNOgCZR8l
      oxownUxI8CBO7wonvkgXeLr+moKjGdVgOY2AcUbk7lzDe4prug359WounIom6stqoJL4jRuJ
      V6j0gbTr+fkXABMefhiojGfjxngUKn1A6/qf0SU/zMOdVl6EVVAUb/tC8orniGgUwcDHGcR3
      pH5zHQ31qC+cIHJ9DBUtzrXH0Q0q0lIp1UWtbqMjATDHb1EAZmnb2ZR0Wbd5/9oJtm5Pw8xv
      Pk/f+63TvQPt3dJQoy36Yrt2SYCPdry7RCuRSLRjvQK0S7anaq80NGf795nt2tljJVqJZKzW
      K3iD9nDOp9p1Eol2bswlg0x52piV/vpyxmr9luzRKm42JWrzYlZq/ce7667ht0S7pzGx4Yo2
      9c1grddY3fXdx/togzfEaDOuNGi12gbtlYwY7YZgL+1YSaN9wdo3U69oG/TnZsRs0AZ7jdVK
      JI32valNNTTegPSNEq1kboz2kuHBhiva5NWTtRL357W78v6ts/WDUF093Mdr5204rM3Li9HO
      lczVGla34Uqq9s1547XuEolWMjZU+49/tneNBm1NTox2pX9jXj/tkvdPa2vaNlHgLhD2Awj0
      aoSX4QR6Nf8Px9DJQpGACXsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Overall Distribution: GWP Growth by Success Ratio' width='192'>
      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
      zditnWQaa5NmysvhVDFfOa/uqOK/HLlGXBTJN+spyr4/Ytu9smKx2JzhFj+7OEiWQcXBdTn8
      w9EuzrZY2V1rRiqVYpn08dq6VIw6KblGJaOT3qRTfmaqnNO3vDS2Wumf8LG9Mn3W+0il0vu+
      k0qlFGUbudI1xt98+h0SQeCPXl4/Zz0sV30vp6xHWaZFK0B+aRUQo/X6FWwTdobHi1FJPVy6
      4qB+0xbGx8cpL82j6dIlUtLMlOfqk2llShrGNBNF+Zl8d6WJnJKaeZs8L4T5yEnVKvnTN7YQ
      jsZQKWSzXnP356IoznmOWSQaR6WQopRLkEslhMLR5NutOFPLN9dHKc7U0T4yxdbK9KQsqQTe
      2JZH37iX/fVm0nTKWe/zoDJMO/u8taeGYDiKQiZFOo+Fi7goMjw+RYZBg1a9NJ/eR/nbLYes
      Jy404nKvAokiXOsapcfiZFdDAdmmhY/v711JsFgsc0av67F6+M13I0gEgRS1nHd2FqJVyVCp
      VFy9eg2ZIY8Tt8YpzdLhCUT4wdb8BZtS3OvokZOTM2MfYL6EwmH+01c3MKaosdinePfAmkXP
      gZ6qVaCnhaYOC90jk2ypzuMX39zij1/fhG6JvdzDKMtO4V+/XEksFkchl84wUBOEhIK8tSOf
      jNSE3Y/F4Sc/febOZU9PD9nZ2YyMjKDRaMjPn92MYWJiArlcPqsCfPPNN2zcuBGbzUZeXh5d
      XV309PSwa9cu3GEpmUYtb+2txWL38E1TL3/w4v2ngT6tPPUKcKt3nFd2VJJp1FKel8bwhJvq
      wplLkyeu9XOt00paqpp3X6hHKV96tShkkkS4iAeQaVDRa/WilEkZd4fYWHb/QeFWq5XOzk6e
      f/55enp66O7uZmhoCIPBQH5+Prdu3UKr1bJt2zampqYQBIGmpiZkMhmHDx/miy++oLKykoaG
      BqLRKOfOnSMlJQWDwUB7ezvvvPMO8XgcqSfI8MQUTk+A5t5xCswrc7zTk8qTezrdMrGzoZAP
      T7Rw4mo/PRYHpTlpM763TnroGZnkz97cwrryLL6+1LPiZVpfkoYIHL81xtYKE6ma+1/RPT09
      RCIRlEolw8PD2O12tm/fjs/no6WlhZdeegmX605QsWAwSF5eHnq9nnPnzrF3715qa2uBxOQ4
      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
    </thumbnail>
    <thumbnail height='192' name='Overall Distribution: GWP Total by Success Ratio' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Policy Lifecycle' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Policy Lifecycle (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='151' name='Quote/Hit/Success Ratio' width='192'>
      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
    </thumbnail>
    <thumbnail height='157' name='Ratios' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ratios (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='114' name='Sheet 30' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='114' name='Sheet 30 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='map' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WZMlx3Um+HlE3D2zNhAkQQISTctQJJviIlFqDqWWiSK1mMxm+mm6bX7A
      PMzfmNd5GJuX6ZexkdSjrdVaeiRSokCRkihKpECC2AECKLCwVBUBolBL5s27Rvg83Pz8njjX
      PcIj7s2sApAfrJCZsfgW7mf34+bq1asWAIwx4E9rLQj+XhQFLCySJEGapBiNRuh2u3i3oSgK
      WGthrUVRFJjP50jTFLPZDGmaIs9zJEmC5XIJay2MMej1esjzHMvlEkmSYDAYIM9zTKdTV64x
      Bt1uF2maIkkSTKdTLJdLAHDXZ7MZBoMBrLU4OjpCkiSuHXyObbPWIs/zYD+MMciyDL1eD5PJ
      pPbZvb09pGnqrs1ms1L75bOcM71eD8YYzOdz10Y5t/i87H+WZTDGYDablfrA9+T7xhh0Oh0s
      FgsYY5CmqRv3vNjsD+vSbUiTdOPZWOj1omHtas1U3W8KvpOmqRtXX7uyLMNisYgq0xiDwWDg
      vvFkMnHzL01TN9bL5dJbZt04bIMkSdy3A4Asy9DpdNwc0fX6rum2ynkXAtcv0e12URSF67+8
      L+sMfW9dF5+Pve5rH//JPtX1XyKThelBkZMrSRPYwiIxKwI2HA43Psy7AZK4ktjzGgl/nuel
      BVEUBXq9niNuxhgURVEauyRJ0O120ev1UBSFK6fb7SLPczfpsixDlmXue00mE1cOFyxRtyjz
      PI8i/v1+H/1+HwAwn89xdHTkCC2fkX0hMeZCYFs18U7TFIPBwDFGLrDZbIblconBYIAkSUrM
      UtcpxzXLMhweHq7GHwZ5UUBOTx8DsBZIjG09j+uIf2ELJCivkxDRjoapL0cShhhiwLE0xuDo
      6MjN4W6368qQ89D3/kkxAA0KXmRIVeMgx903X/XclXXoOZ3nuaszJJCEytN1yfckw/BdT5Kk
      JEBZa7HMV21ITFLqSyzzcHX4Lvo+ZGISt2D39vbelcQfWA1skqzGwlrrCFOv10On09l4nhL6
      YrFwC5JSVFEU7sNysfGd+XwOAE4qJkiwh8PhRrsAlAhv1WSU7avqqyxjsVjg8PCwtABYBvtJ
      DSnP8w0JimMn/6YW0ul0UBQFDg8PnWTHnyTyPklvNps5DasoCvT7fdHmzb7pdhsDWM9zO4MN
      az1tYY7/q63aWgyHQ0fYfUiSxGmlAJxGS8YPANPpFLPZzM3JjfacAh2Q0i7n2WKxKK0N3SbS
      KE3sfUxBQq5JSbDzPMd8Pq8czyYIrU99XfdxNQbxUn4VSgyAg6vVCjam0+m8q4m/BqUmOVZZ
      lmEwGJTGZ7lcYjabYTabYTKZYDabbZSV5zmOjo4ArIj4uXPn0O/3S8wAWE1OSrxyohJpujLP
      JUmCTqcT9Z1IBELIsgzL5RLj8djNDzkGPrMh2+3rq3xnOp3i8PAQRVEgTVN0Op3SQuf7ZK7y
      XTJTtnEymWAymWyoxLJdK4K8IqJpkiJNUiQm3PdtUFgLo7SgOilxl6CGR/MO6yWBZxt4bzKZ
      YLFYYLFYOKa7XC5Pfa2H5q5PACAT0IKGflePu2QkkuaFtFqiivE0+a4hZlRH1EPzp06jCcHP
      PlWh7uEsc5Pn3Q4uJGoClHiHwyGstW6caF6hiUNONGoFJA7T6dRJY5xgmuDKiUf1XJpw+G3Y
      jpDUplE18aixaFMRJ5tPBZe+CT1fuMDzPHcEfjweu/fk8zSxdTod9zvLpD/EqcXKBJaYBHlB
      cxwArFTmLEkAEyNDb4eVEmIBQXTW907HZFIUBabTKTqdDkajkdOaOHcBOMlWfq88z5GmKbrd
      rtfXcxJI07QkQFHbBMomLQl+926322iuy7EviqLWbq8FnCpTkH4/ll6GzEra7GaMQZamKOyx
      LhhgBjHzq5IBaL9AlZT4boUc/MViUXKY8RpNE5SoZrOZI6b6402nU/R6PbcY5vO5Ixbnz593
      DICTXtYBrKQ5EtNYW3Od5CHt7z4prKpc3+RPkgT9fh9FUTi7Mvvpm7wcV+3UPDo6gjErh7Gv
      r1JaSoVZTN7PsgxFUThnss8f0mRB6f5Tu9BjcVr2coJ9GwwG6Pf7zsZPjUm321qLyWTizB2n
      0V4KUQCcWa9KC5C0STP/pqhjAnoMOF/ZpipzTgzq1pGvXO1bks/rtcr262tBBhAa6DOsIIkH
      ACctTSYTZ4dPkgSz2QydTsc5KH3jKkEHF23ZnU4Hw+HQSW18J0kSzOdzFyF0dHTkHLQxiFE3
      JdFqSvyrJB9Ka9SUdFSFJv4hx6OUCkOLJE3SDaIv255lmRvLTqeDTqezIfEas/LP0CcRDQtI
      NSPEEENoy3iqytNMlk52DalpkfGG2hEzl2JBzZGBAT5ipgXTOgYl+0K0YWp8X0ae6W/a5pu1
      Hb8Q8ddlVs25WpFefgBpKztDWSuiY5iEmwyAE3QymUSNH01BfDZJEvR6PacW832alCj9UIXX
      JqNt0fZ7SxNQr9cr3aMfhH3dtr114yl/lwSQxG0+nztGI7U3gqbPWJ+Kqy/ZlF5D4bChtsc+
      FwMSLkb5yEgXOTac00VR4OjoyDnq5TNNbc1NMBwOXYirJmJVTCh03Sf5VknOVeXINuln9RjK
      9dqG2fi0n1BZTekzyw9qAD7uRumWUudJToK3I0g8JFGmVhALfsjxeOwIT5ZlzlRCezzNKL5Y
      8CqpuCl2QZzlYpDXtflBzzltMtnGhFK1oLh/gLbwc+fOYTKZYDqdum/Z7XYd06Xfom6Mq5zL
      dQStCfGPkTqNMS50maY3oBwA4JMerV3tOZHaZ4gA7gLWWozH4yBx5Tzgt2Cf5PsxTEL+zj0j
      cj9IiEEw1Jv7Z0Ll+/4OlSv7FjInxTCnUJl6Pclns263u6HelWynx5ub+OJ4PMZ0OkW/39+I
      dnk3gguEBMLadfRLnufo9XrwjXFdmfP53NkZSegZgsayptOpYwCh73C3tTUSeumkG41GAFa+
      BZp3qqQy/tQmqVjUSXwMMaWJpygKtwdBXpcx55poesuG9TKBGAJaRTx8hKxuPNh+n7miqk6C
      c+w0LAA+2z8hzTD9fh/T6XSDAYTgu1cKxYYJflf+TT+F3B8RqqPOBKODJNoI1DEWBd/f/JkN
      BgNnc9ONkHZt2WiqGr1e78wxDLholPl8vhEqOZvNnJ25jXmGBJTaAHcIW2udSg/ARSNJbaCu
      rjZagiM4AeLmA+cXmQDnmPSf9Ho9zOfzjU10MVJVv99vbp8/xtHR0caiXS6XyLLMSZjWrsMN
      fWGtGqVF6VnPbdqpiUNImo1pm6+8pu+fBHyaXwiLxcLtXG7DlFwIqF2vF0aM+aDnY2jzpH4u
      pi/yWR3NVMfg284lIqPZwudF73Q6wdAqmiPe7WGhlBJpQqDJRm7+itmOX7cgl8vlxjfK89yF
      9tFMdHBwUDsp6GCTqR1kO4AaafB40VjjpW9e5HnuIpgODw/dGFHLlEJIk0nNfSl0KkvIsFH+
      3ev1XCRWqK7ZbOa+HVMOAPBGxPiYqNYSdoEmBKWujNN+twpNiL4EiX63291g4nUoigLL3B81
      RC2zisEmSeIi+nzvE3X+ElkP72viXyUI7YLuZjImm04wVkBnpE/6yIvc2bjfzQwAWOcqSZJV
      3PlisUAn68DCRu3YbAIybLmzmE5WOqEZxRIi5pR+fAyg6j13zx77Ko4ZXizIBJbLZclXoncW
      x4KMg/4QGQHlIyzSl1IFqeXKZ2V0kLTV+ggEpcvUhMdHa0IaNB2yvlhzTx1k9Jputyw/Rvva
      Fm1pBzVu+jSavLfeG7JpN5dagNYsnOM0y7zBC/pZuSPfhzpznDZ/+vqyDYwxSGhjZm4fWWFV
      oqltEmi900Ci3O/3ceH8BQyHIyftxqrasR+TvpfRaARjNjeJcOu/rFtGI8lrsTlU5LXCrs1Y
      RWCBhPrHXcw0iTHaI6b/erFwHDjOOrEeF7g0u1FrrbMTy3++doTsqvLvJElqTWR184ImAfkN
      myx6X1u50VALdL5dsb7y7pUsANS62yBNUmRpVhJe5NjmRe4dA2qr3K0u2yKfr5P8dZkxvq8m
      iPk+jpkBcJ3q9XrBTTWyYEo/Z/b/NcgEiqLAuf19J5lUhY1p1Kl1HHPa08+dO+fe467a4XCI
      0WjNgEjox+OxkzZZhzaRyDb6Jv9KYkiABCgKizQxG/d1ORIcDyZ9k2afqj7rcslEaMqSUTny
      p68tMX6YoObjKbuq3dvcB1ZtHY1GbnNfU4Lnm08kdIx84nN1OOm1Hpr7JLr8XRJ+2v+bQM6n
      BAkKU2wQb2tXSfw0IWfaF19UnxaEtsG2xD8kKPjuZbyRZRn29vbcrlJr7cbWe/3yvSIN3Evg
      mNA04dvxSyLG3zn561RZqr2MU6f/pSgK3L5929lEO52OS+4FYGOhc1GFHNMhdZNzIDUpstRs
      LBzZn1D7GR3FTKralqpNXDL1L8tosmO3CcE+KTt3FUJ1SsLThhCEymfOKfpCYom/jsvfFWR0
      kY/Jygg6Ywz29/ddP5Ikid746IMxBlmaucyavGatBcy6HdJ3NJ2tIu+kdhcaE19SuRhoLVTT
      jqqytGmStL3T6ZS0bZpe3T4ASpfcgu3jirKjdHaeYRP8QDp1gZzg/CiMPfcl3SKBlzmHaD8H
      4Lbq80NbuwpJHQwGTsrWhISSjDEmGMngAxkGNZttCBJ9Tcas8vkcHh4CWMek0+zB/Q4y/FIS
      ah+h96nisu5YycjXblmPft/3bB2qCDv9GgC2HnNfvTLVCLApoBD87ox734YZVbWHkN9MCwfc
      Jc9MuG20Ig1qtdas5xTNd2wLU67keb4yfVsApjoyJ5bg6777TEv62ao5KJmWzCTM9U4BlYJi
      pguRL1SpZb4NJKHGvRvBpFYAnATDfOJSc5ImNz12DIkkQ2aZMtHcnYM7yNLjMFNblFJEMJyR
      uYjouIpZxFr6pIN5Pp97k4PFmrnk81zQWvrjWAFwoa8hrcQ3bvo+f/cReklw6kxYVRpGUyZQ
      d5/fjSazwWDQONrFB65xXZZsv/xdH+qzTf2xWha/lY+4M7WKLyquLRi8wbaR+DM8meZVMgff
      PPC1X0PuqeJzoW/gI/z6Gdl+Com8L9PC53mOJ596Gt/4zlMYdFL85EPvxWc+85nVXJAFcXLQ
      NEC1TzecxIcqJCVYaXt+t0OmtGW0Ak0glGy5jyJG8gRWppzDw0N3GluSJFhOl8cE2aB3fKAM
      6+J3o8YgT1DSBJcIScNcBHXxz02gz0NgPQwv1hkXQ/WFtALf31VEqGph+7QJ+bOOebQBT33j
      PJJ2e1/bYhg7pVk9rj4hRAopMlFbW9QRTqmxhkLTrbUuffiuYMwqqEWeIkcNiZGQfK6uD3xO
      goykLquq7lPMd6Vg5jPH37x5E1/5+j/hhetHuDHror/3AJBbvPj4j/Cdp/4YD75ntJkKIssy
      txWe0SRFUeDg4GBDWjo6OkKn03Eblc6k/zLIUCnNHB0duY9M6VeeghUDLgBKiEmSIMM6dfTR
      0ZFTkUlEibpNYlUTTm+53wWkyVFP/jRNvZkqiSrzZBWqGAQJDzd9kQBpJl3HkHYB6diWETo6
      eksfsFPVFklY68aVkFrjNoilDfI8CNke/b1jtYkm7WPiQPqm9O591lsVJKP7yQ2cTdLBVEGb
      N0n85/M5XnnlFZdGI01T/PN3nsQPZu9B0t3HsCfatfc+3MT78MaPbm0yAEoa/X7fEY/D8SGW
      eY5MqBhSCwDgDi+pa7xPInsnMw5pLvNNnKqoK53iQS5wuWdDPsODW/b390tMmSpilQoaWnQn
      BZqpdP99GTkBOJ9BKENorB2/6jpTcRPUgmNzze8acnOfz7TQxPwqNdBYbEP8SUs4hjLFQ5UZ
      jbRFtkGX67u+LSipy42Cvnp9CNExaaryRVL5+sLfQ3SB84BWgIODA/zpn/9/ePFWBwt0j/0T
      QNJ5D9Juf4Ohss7O8EKYAUhOmyYper0uirya81lrNyI6tM2MEkWSJFgsFi4W/J3OBGT/qnLP
      a/gkkDpQYxsOhy47Ka83qS8W+kzT2DJ8Kj6jPkIblZi7XzpGOc+26YN8V/pNqo5CPC1UaW5a
      Iqzre5ND4jVxkumZY5BlWeks6bqzp4H1LnV5/TQ0LtYV8jfVCapybYYYlq9MXUbd+FKLk2l4
      vvfU9/HMrT10Rhc3CHpdmV6DPQs+PDxc59soyrZO3WFKKZKLd7td7O3tOYmKNmzeJyNgcrB3
      KkiguFuVH5CSRpXKHlrwVXHZ1q6cqIeHh4657iLtsq99ehI3sZH6CELVId8k+jxZjfDZ4dtC
      ampMm3wvw0l2APrH40LH+i6/t3SI+tJuAH5JXqYq123W7/ngm/+y/CqTjByDGEtDSPOU9VaN
      qa8d2jek/9bzWP4tTY9MyS03dc5mM3z5a9/C1595C8P9C6W+6lTavnVZFEX1iWCUHuu8/z6b
      He3fUnXVeS4Yr/5Olv4Jeuq7x45annI1Go0cUwTW3vsqSS12vKjyc7OUnsAnZddt4ygjYvZC
      +DKrxmpHdVjmS0yOTibc0QeZuqMJLI7XHdemgUtlTQYps63GwjeGUrvv9XpuA5824+h3mbpc
      2+8l6KfyhaN6+x3J7Em3WK4+k8IHfVaDrqON4zk0L+uIP5GmqctMK9fVCy++iD/722/jjeIS
      RucuurHVfQD8mptjLKGGy3zbPu7tsz/zfl7k6Pf7LuKAkURUBxmrzsPL34mQjI//GJdLjcCX
      1XM4HJY2kcWmkQ5NWjJi3+Lb1pZaRXRl2fwXu3OzjvhWSZ9tQF+X01Dt6YQzD4fDjZOvYsA1
      5sb/uKnzxdwlJKyy9UtzkSYUoefpsKeAUmWW0d9e35f1Mc35NtBzW2oG8l6VxuCYXJ7D2gLG
      JEh3vNG1qZBCnxfH6OrVq/juo9/Dyz+8iRvzAYrRB9A7/hZVQnrIigDUnAnse0FK+iGVqNPp
      YDQcYTqdYj6fY39/32kAeZ5jf3+/lE/77aIByLh1aVv3QZ4FTOi9EzK6gzg6OnKM0Rjjzvdl
      OCezjgL+haZTK/NEpzqi6WMOdQTJx3S0NihzB6UIE48mGTSbmBB80ERBal1OgirsxnGSu4TO
      gBoz3ho+4Wt8NMa5/XPOtBgy0cnfY9YgiSfXtIamEXX94TGp0jQpGaEUnEL9lddD9VMAqvIr
      yGNB0yRBnltYW8DadgEqVXRNW0p8baKdnzRyNpvh//q9P8XrB0Deu4i0ewnoAolg4k0FJl6v
      ZQDGGGey0E67UOKoxCSYTCZuojA18uHhobOF0z5YFEWUenYvwFrrDiLnBpnQc+OjMUbDsm9D
      fmQygMlkUsqBn+c5ptOpM41RPZZJwRiT7aufNloeus49GlXwaQKxBEm2Q84FZsP0tbMurUAs
      IQxpoXUgoWGMPePrQ4tz16AtV6daiUVoXAG4Ix8Luxr/LFmnHCE0UY2pmwJJbEbVujEMHfko
      3+c3avN9SUBpAg21R9M2CgR5kaPNLPAxLsnU6trd6/VKm3EPDg7wpw8/gh+Mz2F0bh8ZsEFD
      Qu2oQq0JSBbki9KpqljHjE8mk5JzTybxolPv7aAFGGOcNiNVSS21WmsxHAxL4YQSdIwt86Uj
      9JSuADitgaFzDJekucha6/4OMYHpdOpMDE0dmSE7MPvmg5zklPzle7JMeYxllXoa00bJdGKZ
      Fom+3PTIOO219Hkyea5ImKidtWE6iUlWoX7YHLuiWOW6Hw6GpdhzzQBknioALryWB/bwOWut
      c0DShLftuLB+X5qUGPiYmWwbndVAWdPg3wC8BxPJMn3ZjgtbOLNSEpgfVf3wjR37wnlBWnJ0
      dIRHH3sSDz/yAu4k92FwLExKor+L+RnFALIsw3A4xOHhoZfrhKQLQsbUyg1QzJ55L4NSOSEJ
      D3f0ao5P/4kuRy4svktzEqX26XTqjnoE4Mw5JPgyn4eW5OR3IIFh3br9bKckQJQ8QgniqswJ
      K6JvAY90KlV6RkCFJMgqQugj+rHvSvCsXzogGZLLhX9SwggJKQWAtpqGk1LzHBZkvMJmfVys
      TKrH95hJVaba4HzyZQflPLfWYjQabR0WK+dtnfZRR0z5k45SrpnJZFLaJ8OUKJKJUQNjDq4Y
      s6KBOLc38bdd7t2JmUc02UqT798+/Hd46uWbuGUuoTt8EAMx72Xoc+XYmPJJJKG5FuUDMMY4
      qVSeOKUXub4WAjUK7rjj+5JQ3EvghjdmpaRUkSQJptMper2e264PlO37ANzO0lI2vnyJ/cEq
      syEXFe/T3s/diFxwHKOiWOfVB1AiJnJy+HZ8yrEdDofub2pjVWGYXqILoMjzksRfJYmToTVl
      /HXlNoXUonwMvmnb5M9Q37gbnOdEb7s71CQJ4HFYcg5ISXF/f9/NVxJzzqvFYrFxELsxxkUT
      UQDxHdbeqL1ibbMdTcxRrJtp6/k+z+Kg5UFrhcA6rxaZL8/ZllprTPvTJMUyX5YOjglJ9WQ0
      IVAINmZl53/m2efw1994DLdwCenwx9EzZRu/NiX516NlI4AarR2IZABEyG4nBzBGRdTSMScr
      HZbScXq3QUJB/wUjdM6dO+ccR8zsSXChz+dz5EWOfJk7gs10tolJ3ASkvZ6aEu343EXJdkhw
      h6GcYDLqyqmqKuWzVJONMS7lR1OHZFEUbrJp4kwm5dOK2uRwl+2uM0XpdwAcS8mr3wzKEmjM
      5iQnbXvqJAGipFwHaW7aFlmaotsduKgfalbz+bzEZDmPZEAAz5bWUX4cY0qlMt1y2+RrPsLu
      I9JVtEOaSihEUHuhD4c5gny0yFpbWsOHh4fBfEMxfSkKi8IUXgIv+6XXAceaQiMAfP/738eX
      vv4Irk2H6Ix+DJkpH8xVZ2EptQ/GrUuLVYAY16Zv7UQzAHbcp9oD8QdGjEajkqrGiUbT0L2Y
      TI4SNomFzGc/HA5LbbbW4nB86MxlDsu1OYkHjtMEUxSrgz86nQ4ODg4ArKQy2gV5ULSPAMkJ
      JpOoAeWwN73hjMndyHhjdl8CPAVsbb/37QIuE+qVIMKIKAYEtIFPQwyZgpjYyxF+Y45/39RU
      tNlH/k7iGSIUXMh1sfy71F5Y3mAwcA5Z7qinxC5t3FLbSdN0YzMmmRgJqvSLbNvmGKk+1tRD
      IYKCEjVYMrMqrVL6nFhfm3lI8xtQjsSTa431hPrGNWqMwb/+67/ir7/1Aib9D6K7t46C2pVp
      vO77NdYA9vb2MB6PN6QGVhayp3HCyoO19aANBoOSJH2vQKcnkE5ETfzn8zkmk6n7O0lSGKwP
      kqb5i5s7QpoTJ1rI3i2hCbu07/Z6PcdkpaNTT37fN/NKvHAm5o3J7bWbmrJwELuvwQc5RqH2
      OeJ/LP6sHuc7699h1+qyPrtXSv7cu+Hb/MRnGeQQwq7NV4QMoaRmKiHvASsfxHg8dgIIsDZP
      MqkY53DVDnX2KXQ/xowr35XftYrw0Wc4n88dHYnJbaTr8rW3CRKTwCaUr9dt8+3A1mXT/Aes
      BLZvPnUV4+77kIkQ2F0wXcAfYKHb04gBJEninC08gUp+bNripJ+ADdrb2yvZyYH1TmNO3DYh
      XycNqQ7fuXMH3W63lPaa6RyKonA52xNjYNIMSyyRHRNxvkeGJ4+5k5oA+z8ajTYIddNFJ30X
      lFIlw5HvxiJJEpcWRMJnFiS63S5g4XambjPBdT2EJCB1UqUxZs0HPG3hfKSzlLu3Q/npmzDo
      XYHaJPt5dHRUygGv66ZWQGcozYyUqhlxVhSFs/X75hTnaMjuLf/WZkGgbEkwxjihSOf3930/
      rgdqMkdHR96DlHR7feVItKE5+rznGOJPbR4Arl69iof/5Wm8fNDDYJhFS/1SYK5tt5TWUF6b
      bGdje4uUZPXgs3F6EGje4H2ZA0fnAbrXmAAlcTIC2rHZl4ODg5I9Um7SytLMvc+TrzhJ6EOQ
      i4EqLe25d+7caW0uke231u5MnU+SxEWeyMUdIro0+Qz6g8rY/5DUouFjYKX6QsTfaQQeP4Iq
      SoYOykN8vPVFquonwQRkufwGIZs0zSZ0gpJg0Y8lz4qI7UOICYTszfJvmp0Y4iy1K97Tc1+n
      dZD3KVBJISp2zNt8G22GrNIsZB4fAHj66afx5b9/BK/jAQyOU7efRFudP8Csfve2Lbo01Qjt
      YJrNZi6ahYuMid5oyuAzMob9zp07TrWjphCjQp4m2Je9vb2NBS/9AjKnD98DNqOCALi8KhL0
      KWgbvpaeWGaMFM9FojWJmEUS+g6JSZDbvMTwfQygZIIwJ0cEN+v0MAFjYIyfaBl1uD0AFxoq
      9wrEmnGaEqA66DTeVYjJpaTDssfjsXdOhIgcCbR0IGtzJhEyCdO0Rvu9fIamNxnKyXr6/T46
      3S6mwpHOnGLcVCnrke1nO6vC2Jui6ltzkystHXme49VXX8VX/vE7uNn9MfSSda60kPlc19XE
      N1AScALktBUD0OeJyg1PcqD39/edpnBwcLAxidlxGVfMJGn3EgMA1pqANN1oc4NvwgGbB4rI
      SCef6YSLi4eShCTrmIlL1V5+IzK0pgnnNENYEwWDpIbozabVB97UmW0IChNpmnr9GBlDaQtN
      MMurgG1Pk7S0OKgtEXme486dO8HzHHzYJQOg9qiJ20nWyXJCkjwldx4ExXOpqe3pSEH9XTn3
      tNmEzzHMU/7uvqdZpUDwnRcQsya2HR89T/W53xLc2QsAL774Il588UU89dIP8WbyQSSK+O+i
      bbqddfeNMe0YALCO56adWe8slAdBMDzLRyg1FovFPRUGKhGScEPEUv7OCZ2mqdtNzOicPM+d
      KWw2mzmHHDUj2j59dcQQThneSWxzxN96wq6ZiYFxsdHGGBiYtWOywt7uK9cH2ou5a5yapl48
      nU4He3t7uHNwx2uzHw6GOJqsQxtX4xc+51VqeLHY1UKmyZEScyh8VGuKTeBbkxR2QieHUTui
      zw+AE1hIsKuionxhp0SWZc6nJvcI0ZzB9UBzCoMeqo4rlYjV4HzPaWndGBP0abuonL4AACAA
      SURBVJFxG7Pa3PXY44/j6mEHb3V+fOVEtmufXxPmHSsYa8uB7IP8vTUDkLZ6hh9KpxQlNUYM
      NZHo7zXpPwQZMheCNP1QE+AE73Q6LjZZpvCV0Q7D4XDjBCyfdBUziay1zqTRxrcgpZXEJOBu
      edYtnaVyN7NWXdsQK5kcaz6fBxcex4SpDTjWZEpJmmA4GGJ8NF4z0AqbdRvsigGw7dyn4YMO
      w62Dr5+8RqGDhI33NKOVbSHhXS6XLhS1KmS27uhT7Qjm80mSwCQG/V7fMUTe41rZBlU0x6el
      aIapTVgci8lkgq88/Hd48ofAond+5T8L7LSva1/TebUhsHrut2YAktgzlQELNca4jRm7yENz
      ryJNU1y6dMkl4IoJRyuKwkXjyAlM4s/FRBU5z3MMBoNS3ni5KEMT00cwsizDaDTCnTt3tpL+
      pQSky5f+HAkGD/jSDcSAu1Gl6c0HxsV3sg7msznSZCWIdDodDPoDAMBkPtlYwPdqShImKgv1
      V5sgY5mAlhBlZBBQzlzLZ2Qd2pcArCKR6NSVyLLM7VloQsjkekqSBOfPn3dCBS0Ocpd8TJ8l
      fN885LOo0vbldRL/JEkwHo/xZ3/5N3jmzQ5M/z0l5hmSykPlttXwylj3gd+wFQOgnRpYR0zo
      DIG0PTdFKMsmGxwqk2rraTIQTiq5GYjSeihRHFBWJQkyS2NWjnG+H3MYe12faabZ39/fWe51
      34IgYfa1l1pOzM7L0GSPIdI0lzFk2VrrNgnN53PMF/VpKHwM9m6iTqurewaoNvXQjs3vxjVY
      tdZCbSFToFBorXUmzW3MjjQpa20llgHUoW4cY9YYGZ0xBm+99Rb+6L89jJcn55D2h8G5FNvu
      XQgoBuvwZ6K1BkCphOYEKQ2ECEQIMu7atxGMnJMpFqRj1HGyLMOFCxfumgbBCB5rV05tKWVr
      ddvHAGRSKj0pQiY0n1QTeoYLqK0a6euDBqV032SVex+qyqi7F9NeEhyOaV7kXpu002ZEFBDz
      s6RpGsx9r+u728yirt5QCCvDubUkz++n512TtUVznczF31b4YJSPNn3G9LuKcDaZZz4GKt8l
      8QeAK1eu4A+/9E3cTN6L7Ni0q+lhbL1SwzsJbOUDsNZuOKY00QuZC3zwpYUmQeX5AqGFxpC0
      2LpOCtSOuCmM10KbN3R7OV7aWeN7N1S/Hh/mICLDHg6HpRwvso6qdun7PoQWnDazcLH49ids
      I+1IE9j4aIzFYomqYdMbeoC1f4uBDlU4aaIfa7qoej8EvfkK2AwTjZl7NPtJjUGfWcFwTwAl
      U2AInKd0Bi8WC0ynU6dFyijEEKqIZ1NTjK9sQhL/F158Ef/5S/+KxfADbnfvttL7Sc6xxgzA
      2tWhKFWHJ0v4uHXoo2gTDu3iMm96CPIglLvtR6D5QTtvNXyLOzQhYyQB332aXjqdjiO2/X7f
      +Rl8dUnwm+i0wk1hzNqhR+I6mUy882PbCb9cLjGZTo41gPp2SdCkyXJipMRdLlCfRtFEo9YS
      Zsicyp9VjL6qLjJJ2rxns9mGMEjCJy0E3W7XmYd4TbaVJinOWWrSciMbUM6Ay3d936HOZt9G
      IpeQR92++uqr+P0vr4g/23Ov+pbY71YagA75rKrEJ90CWGeSFEYpfYAKU9D6Gi4nLxdIlbPs
      tEEJ5vbt2wD8kn8VYphmaMLrxS9TTXCcfHHUvrK4O/nw8LB1NkigbAJiu3z7QrbFcrnEnYM7
      G9eDduvjDKGE3NtCIqeZ72nMsZBZqUndoTkT4y/waeLSpMPU0swuyjQTZJpSCJKSOucinc4y
      mGRvb8+VwXIZKh3T17oxC5mz2n5P9jFJEly/fh2/89++gdngA42ZSghNTaFtTKeNGYAxqxCs
      wWCwQZz1c3IgfGlRrbXI0lUTdNQB9w/oMkNEz2eju5vgIqD6elLtqnMsMX0usHLu3b59eyN/
      TagMfjf5bXyEoU1bpaO8aTkh0N4fKwlaiw0NgVE32mwnpVOtPZ0U2ixomvnaEv+Qv4BtYfI4
      SuCcSzy4nPSBKbKBcmjndDp1c0oLADxu1VqL/f39Uu6qUF/ZNn2Nv/sEoiZ9D40ZBbwkSfDG
      G2/g//mzr+Go+4BjcKH3mjCHkxA07CoLokPrncBU4eUghwgJF6WBQZZkxymFy89K+z99C3qC
      yPtaOpb/7gWwfb7cSLHwSZ/6vhx7n/lNjis1pCYTazweYzQaufTXEjHlkBFqk4b2QWyLOmLp
      l+ItDDYXvbYPk5HLqKImO4Pbog0DCCE0P9qsF60JSgmfGX1DhI5zUtIOQu8vAODSr1Rt9GLf
      6voS+0zV30BZ8r9x4wZ+508fxu30/S7IIiYdRx3aMv/6h8p/tnYCM0GWlpJ0g5xEZsQ5m8fM
      gMm5gDUD4AD6TgwiiqJAXuQuxjt0aMrdhGQA/FtqKbGTIGaBasaoNSIS4KpDTarQxrTG56nK
      S6ddVRtCTD4KxsCK8rl7NFYKtNa68w6MMUjNOnU3Qw4pwZ4G2s5nH7PbFfGvA/OBMQ2CdtTS
      nCjb5mtTURQuIy73w1T1R5ZFU1VM2KkWTHz3C1u4M4B1RuTf+9Ov4E3zvpLJKoQm431atGyr
      01diwqxI9Au7NgHpDSYy4ZaP2+uBS5IEhS1c6oHErj4Od4jqE8fuBqgu6x2w8mfoI/vSZsSq
      sXrhc6zJAHzPVzEk7lBuCuZu2e/vYzabOQZQJRm2BftQFPlKuDAJKOqkJl3NPay1qdWih/f8
      36JgkjuL9HiaUuqn1HpSi/MkiHJse0noimKVT6ltO3Q2Tj3nZPJAQs5BeYaFMavAAXmADcv1
      gaHO3W4XR0dHUZJ4nUC0zFfCT9bJXKoLY1bpHf7fP/0bXM/vR3Zs7gptLItFW0tBE+gx3Gon
      cKwj2FrrDbcjSLCn0ykmk0nQNix/J2PRA3V4eIgLFy5En1B2kpDOq5ANHVhnP5RRFFKK8y0Y
      DUY/MbTPFyJXpQH4VHH6D6p8PSGkSepswUxvLW3GVfW3JbJ05hoDJOKAl9RQNd8k/L62yLGX
      jmsm6dtmQ5OsR/6Mfaeu3rZMRBKwZb50qcybQEvw2ocn6wqh1+s5aTrP85KpMPTecDhEnudu
      DWga4qs/ZhwBuJxWxhhX/o0bN/CHf/EwXplfQtbplsZOf6NYwa1KINpGE5Rlafs/sEU6aKrC
      rKSK4FbZsKX9OiRh1REMTbxu3rzpwrOkPfI0fQTcGV1VtyQ2+mxWCT2hfH1gvvHxeFyKXmH0
      DomXNkP5zEYEN/nFtEuDJgCeIpckyUaUVx30IqglgAZOVfeNUZamThP1LTBqrPLAb02E5Lvb
      MAGW42Pyvn7WaWryOQmfOUj+dGZXu5ki2TeGxhjkReGyv+p3QnNJl0vNX0YNAetDeJhDrE6K
      5+ZRzvWYCEU9hjpbrxxna1cRSzzM6dq1a/jjv/w7/NC+f4P4x9QZK+y0MRmH+lj1bqt9AHme
      lzbwbENUuXO0zuOvEWIAbCNTUFOa4NkEWdZcsmkDqrKhzSqSAMtndL9iTSVkyFxQNN30+313
      Fi+3zzNioy6Sxdd2LhZmeg1Jw/L0I1+76yRgH/H3HRIin7XWboR16meyJAuOMevg+IXyy/v6
      Kx3dbRiEby2FGNU2ZfquST8d2P4Agedcmkwnjtn6ngu1lcSeyf2AldDGvT70H3DcySQoPOjv
      wXDSLMuCgSOa6en7ejx0f5ne4ZVXXsGffOnr+FHyIFKPzV8Lez7GEPMNt/3uTdCYAZBYy5Ov
      QpJCiLPxPgAXkz6ZTEqhY/JZ+besL4aQSwdmURTeoylPClW5woHwYpcTNvbjc+HI95mulzHt
      Fy5cKGlvMnNj1beSoFa1WCxKG7kkmJKZi2A8Hpd2Io9Go9JGoJjxAcqpQjhvGJljjMHRZIL5
      fOZ9N9QfYG075p4HQubHqZL8m8x/3Z7Y79vWLKZRqaljZSEwxnglfL6/WCy8TLYOhbXo9bqw
      xSr9Bom6XKOTycRdZ+4qHmmqzUpcXyFthfOeAiFQXltSq/K9nySJM/usiP/f40fJg0jSMPHn
      7zHfKmZ+tEWsENKIAdBBK23CoclfNwhSDWT8rw9OPbXNTTiai1IrGI1GwaRzu4IxpnJysk2h
      toYQIgQ+hzx9AZRgWIc0jfH8V73Tt44RV4VxksjQdsqzDrhZiOaoEHwMPk3T0tGM9C0w8dti
      sUBxfPBNv9d3z0n1Xsb3M/CAacylfZ+7yqsk6FC7Y+dUaF7oOqukV113k+uEDlNOTFLy1+n2
      MF35bD6DwSpSKgSaIvM8R2EtiiJ3fq6u7aLIi1JaZ4KMXWpkvvkt1xh3b0uQeMszNSxWjC4v
      cmRpVlpPUitnnL8xBq+//vox8f9gFPGPTTOh19lpSf0S0QyA2RR5rq2EljyriL+e+FLqD9qa
      C3tsu00qJZgQtPTGzJta4ts1Yp3k26LO3qohD+s5f/68Y45HR0eltN4+ezGZRhWsXZ0DQTOQ
      PAOaOVNi+8TFT4JAM4HcscujBY1Z5YuXZVBjoLmqKAr0+310u93SoSLsvy9Kpc6EEEPI9fVd
      oqkWLkGfSCioQn976QQ3nsAOzbT7/f5KyFAntK0Y9qpuuamU5jcm4+Ma8mntPh8knyNT0DuK
      rV1pH1maAYHxkcT/1q3b+IO/+GqQ+Mt+8x7XXZXwFxqzNubDbRDNACg9hzif/DtGXY2xlcpB
      TE0Kk+xmwxcl2Pl87vYfUBuRuyjb1kOCKieDvi9/yushJlplfqhqYxXDlJFJJIi3bt3a+DZs
      izuer4axUd0ejUZYLBZuccvMkNJRXQXmhWFoH/0XEmwjo46onTAPEhOJ6YVLoYZhqrHSdhV8
      JgYfqr5ZjAYdi7r5myYpLDYdoUCY4XEPTojxGWPciViLxQLLvLwWjFn5GPjNZD30C+gMw9x8
      1+/3XYCFDGrgfZlNmLuW2R4L68xCvnZryf/mzZv43f/6N7hevBdZJ/PSNS1c6u9fxwSqhIdd
      oE6riGIAtBuH4shj0aZj/HjaLBCSsGLLpEqoD0vv9/vuWDoeydc0eoV2bz0ZCC1dysnia6fu
      p5bKQqCpJxYkmFILkG2JDf2VeX9kaCs1AUYW+dR/OqlpPmJaZ3lQuAS/I9+V9WVZ5t1UyDw2
      ZArGGGeHjt3kpYkI+9LWVOMrN8QEQvNCImRa8JWVVDAcrwaZVK8HjqNbX3ZzDRistDOeHkdw
      bvhMOhTS9KlhANzz/LaL5cIdAGStxXwxj6I/1DRv3LiB3/2vX8EbeK+L9vGtTyJ0SFFT+tSU
      Rm5DB4EGDIBORm3fkgSsTpWR0rt8r6reOlupvL+tOcXacnrr+XyONE0xGo2izykm8Z/MpkhN
      srFYY6SsKsSqiPJM0iZla8JGBlx11J8PDOXT70jpnLtrpRpPfwFz8XO+MarKl7teMhxKcdba
      0tm0nHeMYtHx5TFaq4acd2ScscxZImYRc+010YCr1hc3NfnScRPbrCdqV1JKZ5sAIElW5Ycy
      iPrmGqV/Xwrr/Nj/I09QM2adgZb1VPWJodSz2Qy//+d/izfwPqRZxzs/5Lf3Ef86yfukEcsY
      ahkAB5fSF0O0pNlES2VVndcMIDQ4vnuSOPlstLruKoTMMr52HB4eOmLU7/crTy2bTCYYH41X
      knKyTnYnGZZmmlUTRC72GJWS4JmkTeEzBeijAmNRl6+dDmFGelD1Ho/HG2f+LpdLd9ALQaZA
      bYJOZp2oUEqJ0kRENCX+xqyypNL3QAbJXDCsj05rnbpYw2dyA+DMciSmVWYln1Ypr2vhTPpi
      YuZgGyImzxUmkiQB7EqL8EXIyQAC3z0Sehl+TBpFbRFYaRjjozH29vZciGnVuqGGaYzB1//x
      n/Da9Bw6Az/xl+25m8S/imbJ36u+Xy0DWCwWLie3nkyj0WgjtXBMo2MGpc7UswsbqV50VeWR
      mB0eHmI6nbrUtYS1FofjQ0yOVrsQDTZV5Sp1vmobuW/iVk3mwWDgPVynDlIDCDHYXUEzPzJV
      6TuR4BxjuOZisShlOjXGYDqdurBQfTgQF7hPguT7Mf3k+JC5kvlQE6FQRAeo3AwYM6ZsM9sr
      TyXzSf/sf1WGUilw0PdCU8kuwDZt+Fi46Q7GCULacqDBPvvAHb6hcZSbKTn++XJ9VK1vdzO/
      O+fflStX8I9Pv4Fs7wNB4u/TlOU93a5tLRMxCO1/qYIxNYfCk7P6wAyJTSeRlmJjbKY+jroL
      e1uozLpylsslbt++jeFwuJJArcX4WEsAjgl/RRE+c1lIU5Lakr7vGwOeRhZKCVwHxlxLCbwN
      A6gjqPTrJEnidgofHBzAWuvVXLjw6SSUxIxSIRelL0qp0+mU/DK6rRJVJjvi4OCg9LyMZacz
      GkApFFgSyVC58oCR8Xi8sfFJtnU4HKLb7W6c1RBaW5IR8PzqEGRdsRqqRmKS1a7qZJNghoh/
      qE1y7ELtkgyIppyiKNDJ/H4wKRzQfPQXf/tN2NEDSCrWnRSS6sxxp0H8V40BYPzjWqUpVDIA
      7aCREikXXpPMiCFzRhMbZIhY+xaxJJ51qrMvxrgK1q5CHeVpZXJCybJ1uSEVMaRK+rShkKQx
      Go02Tlargyw3TVOcP3/enWtcFfUVgk+L0P3iGPHYP4bmAvA6ACnVp2mKo6MjJ4DI+ugg1PXS
      2RgjbOjxjGF+OvfMZDJxNueqMfB9T9qwq94lqM3EBGfoeaZPg9P9jjVj6D7IZ5leImbedLvd
      UsZY7hSezWZun0dVe0PMoEqIYlmMFLp+/TquHabIzqXBOvT108oMq9tc+hsrebONoFbJAPRO
      SN2INknCZFlNGqwHXmoRmiA2NV/ojxirCfjKr1p4PlQRGV+q7dCzDF9rs8uZ31JuENPRKHVS
      jh6zGBMHsCKWvgNqGMMtBRCms2DCO2PWG4Wm06k39QZNKb656hv7uu/pQ2j+1JUbKjt2Xcxm
      s8rd1DFEfBvi76tPf/80SZ2p2OcTMmadbluay+jvIfOmaVB/M5kAjgcXxaZgsNa6yDcAuHLl
      ZdjeedcuSWPkO5yHVWN6UvAKlVuUt8EApITNgeTAtjkSUH4w+XOXqlGI4PsYhq8tuqy8yJ15
      oY74VcEnueu/9e9Su+Jk1onU9PgZY7C3t9fK7g+st7zL8n27GUP9kYid/Ez65TMhLhYL5+iT
      YM4XXh+Px47Ac0+HNiH0+/1SBIhPcNDzsmqetiWOuwCJtdy/Ib+VfIb3fRpyaI345joZbJ0E
      7gNNLwzr1SGc3N0tnefUYmWZJP6h9s5mMye0cL2EMgpryN3Cz7/8Q6Sd93ifk332aQI+7Nr8
      cxLzzTEAOrHYMW6eYcVtVR2tgoUI77aIKc/3EUPP5Xl5q3hbRqBNXr7F52uLNAPIDVQajHqR
      aRLaQO8X8NliJfEBwgyg7lvwKD0dAijh23Pgi7rgDk86eHXdOsWFr80hc4zvubvJADQ6nU5p
      jWpU9alOeuXzlN5DkX5VYwXACS9pmmIymZQ0N34zuQuYINM4ODgIJuSz1m7sMyExj7EyyNTT
      //TP38ILbyVIR0lwnXKe3C3p39Vx/HMX7CUDVo0+mkwwmRy5RcSdfuw0N9W0RRuzTxXaELs6
      4i8lB7lT1WfiaIKqd+oOkaA2UBSFi/hg+3hwBjW0XYGbeHwIaW++7+uzv8rTtSi5xc6JqlS/
      vV7Pm58o9uzebTS9mLKBavNSk3XBZ/VYbLu29BynVM2wb9/51nXrgiYc7iDnXE2SxBuOS9Mf
      U3P4tN1QP7UJqormcJOntRb//O1H8FePXEW6d39wTKQQGGpDnVbUZK77ynTlNCohjCRJVgxg
      FdVya+VkS9YZ9DRH3vYgbDmx2jKTGNWzDWRZMlxMT6STIhKyDZRaZSQPpRVg7SCTaq+1/ugZ
      H6jR+UxcvNf20BPfJGf58jDxJqHDshzf+MsMoacJfg+GgXIXa8isIq/HRMXUoW4Mdd1NNVlr
      LW7fvu3mVr/fh7XlzJp1DEAfisQzInw+GUaE8QwGH0Mi7Wiq8RPGrFJIc87863cfw1/8y8vI
      jol/jP/gtE0/uuxdCdFFUSCz9vggBZMASTlOWHaEWQBJHNpCm0SaYhsGEJL85aLYlSTta2eV
      5CJ/yknY7XZx4cKFUlIzLgCeUWutxfnz56PbVhQFbt26hW63u7FhjAs8FBXVdnJTkyFj4xxq
      Iv2HYtd7vd7GxjFZ70mo5dyAxvhxamlV0WR10ivBMQomR7Tr8xjqsK3JVfqCZEK9NhoTz/iV
      xF23lfdiTVQSPjOXZrrcbGitxTf++dv4y0euonNM/H31Vkn62hTTdm3U9cl334p6t0EmVfGs
      xvG5rQawLaokKAkpKYTe18+2aUfVe00IG8viBPSldWZiKwDOfEIiyrj/WHBseAaDZgBVsdhN
      6ghdD0nqVYySKRx027jpqm1EWgw0MaaDmv2gKYHOzDb9a2My8JnEmkrJVfVLcNy1MzZWK+73
      +6Usrj5w7EJzOVb443OM8NEJCG/duoVvPfIo/u7pW+jsvWfDTBmD0rMNNKqqayG64uaN50jH
      bZHJCIkq4r8rnIaTJBbbEP9dviPbsE61u5qUDPWz1pYiFrR5rmk/qFHo9BpMO1DVxjo0ZUa+
      3/WYMUGfJgKM8glppU0XdqgMWSfPIgCwkVBQ90MjZhxjnpFnGMj3QoxEX6eZl9pGDLSWFcsE
      mPK9LmS10+lsRAppVPlRCKb80OvCWosbN27gD/7sr/Ha7Dyy0SV3vU6bitXkQu80NSNpbPS7
      0dthZNq5UTf5fAm5pH0RaB8dUoeY9rV5pomZoG4CbssgKEVqbUBK6VJrCLWjDjLUjtk2rbXe
      tMlaco35vrHt8S0SPYaMdtERPTQp+AiLbM+2Zr2m5jxtd/c9sw04X327f0NtqWtrDLYxI4WO
      PQXWSQC5Ca5OS6gqh0ERFJQuX76Ml156aRXrn3bw1e++jHn//cj61Xl+QnXUXY/BLujgrgTp
      rKnk7+POeuE2HRy9hbstqvowGAxcdkKJul2rTeAzOdUtQB9DoXQuVdOq1A6xDnWWxXA5YOWk
      YzK2PM9rj2nUUp+PIMaaBarKl/AlVGP6CG36kTtjra0OoW2DwWAQDF9tSlCbMgvNLOsIlxbI
      dvWNdHt85UgttUpDSpIE+/v7Lm130/qNMU7il31+4YUX8PTTT+Ppl99CMriEw9kBZuijM/oA
      MrMZlt6kzm2lf3f2pufZmHp3aUUpMYAY5HnunG6hyCBuxojBaZiEut2uOxz99u3bJYJZFYYZ
      WpDyQ2hCKK/rMkLMts7OWweZekK3pygKlwaBxJ9n+ZLoVyUSY7khST3ExHYBtpHaiYQ8G5b3
      SPzriGrbtjAdcWjONKk3VlMNoS69hSTOIQZQV0cdYkxdddoj/SexxJ85n5ihmE546Zt47LHH
      cHh4iN/+7d/G8FuP4+vPHcIMDLrHZWjir+cwxyx2R3EVvDQEZmXPF880MQ3ulAHIgmMxm81K
      G49iGx8aVIk2ZgRZvg88wDx2L0NooFmHz54Xuud7TpvMfPWHJqjvHW5lt9a6lMiMSJEJxTTz
      ovNf9zUk0fmwi1woIcmGY+qL79fPMkJFSoV16ahD0E5fY4w72rJpIESIQeoxrpLu9LN0Qjc1
      BWxrOmiyNmV/uHeAggrflec8x4Twcsc6n6dvgXUVRYFvf/vbMMbgc5/7HIwx+O8//RF85/l/
      wEExdO3xCW1V7WebJf0KmdxipfRdmnG2QaND4SWolgPNCbVPEvH97ePKbUAJQycZC32E0IeJ
      +ah170jCH1rsVeX4Ju90OnX2cGMM7ty5U2mq09c4qfMiR1FYJMdnpu5Kkg8xvNB41u02DkGO
      C3ewNjkRTdYvNwRSSq0j/jw0p45QxhCemPfbmC92gao5yn8UOmQ0krUWJkmQmVWmUErzPGpW
      E1vmAiJDZ4AE035w7l6+fBnXrl3D7du38eCDD+KTn/zkKoHccoE8X+Lf/ZsP4EuP34BFsrGO
      Qv3zCTZVwo7UeJoyZR9OizlEHQhDyMbW2Yp9qArLbDqptURcxUiIOqdZTN2x9r/QJKpTm7Xq
      XNUGPkMNgFvnm0jlpW8AA6AAL7UhNLHmsCrI9sfuOdGCA02V8l5s/ewDN9vJpIh178VIyXVz
      t+p5mvHaEohdmHyqiD+wjhbSmnFRFLB5jlz4oKSJUoMOXQpv9L0wb9VsNsPf//3f4+LFi/jI
      Rz6C++67r7SPqdvpwg6AeQHYooD1CCA+wq21v5CpaFvsiiFvg2gG4JPeYlTbOoQ4Z8zi0GaS
      Jtj2Q4ZMQfKebpN0OMfa/WLayvKY/5xtaFIG38nSLOhwbrIAqphQ1SYnmYSPh39LhFR4mheY
      ME7n4W9C/NM0dZlImwgkctzk/A2VETvH2T9j1mcXs191JsVtiIxP6/TVpfuoJXndDl4fjUYb
      Tnym+aaEf3R0hDRNcXh4CGOMO+xouVzizp072Nvbw2c+85mNubA6D2COP//qI3jslQmQZIBn
      nCvHHit/7cZ3uvt0e2eoZQBNFk8VMY6xbfKab2HUEcwmBDX0fiwz8S0+X+ikljCkJNSWUeq/
      ZaZQRjrFbICLqSPU/irEEN2qU5/a2O6lyYAOfzq6Y8FUB6y/KlGdD5K5y/MJ5MH3chd9v993
      4bdyf4PvG8gMqHVrpi00Qde/a9Oljwn7yvLNW2MMLly44Jg7y+p0Otjb24Mxq/Te/AZMeEif
      gTQvMZd/URQlv+RbN2/h9770bbx62wDG76usXRfWAhV98ZXVVOC426g9EaxpR7YhxHXvaYLE
      azHv1iGG2cRKPaFxk4zCV0eoL1V9K4rVAef7+/uV+dCrUEVAJAGomgs+Dc73PIl0iAHIKBuZ
      dTF2TBiZ5pNSQ+j1ei5FAAMGmkI6MhkFx0PXeZ2pq2XIo9z3wX7JdkviX9XvbcA66cPw3Wta
      nk9LIbIsQ7/fd1I9z3bmeRQ8+Gc0GrlxlCYjuSuZBJ9SvzEGL7z0Cn7/TmYxbAAAIABJREFU
      q0/izjxM3mI14qbYlvCXtIwT5CHUbmoZgPw9Rq3Vz26DKkmC13bBaWPstlozCZl/fExK11FV
      T9t2st69vb2Nk7yqsMvv5CPSNMfw77ocNpIA6XGWBEVCPqe1B6kp6fKYjngwGIAmJxle2gQ8
      tJ6BBsaYEvEHNlNc8/yCEPEn2ubeaQKGlUpUrQX50/eNRqNRaV8J56eM2WdSQ5p7pBZFgm7t
      et+K1KAODw/x+OOP4yMf+Yir9/bt2/jeMy/hbx69hgU6Jy6F+/q/DUrjqEJFdw1+2UoG4COw
      MVrBrhgA21BVTyx8BEDWEUP4Y9tQRahDRCwWvrGVu4SZTpcbp05qEfgkfrYlz3OMRiN3nYSl
      0+lgOBxGS9h1hNHXJslwZPt8OdyLosC5c+dc2TrVRFMw6ijGd0BiJ/cthMrU/WIaiF2BbY11
      dIeu0wy3t7cHay0ODg5cqCZz8jAbqE7MxvTP1MKY40mjKAq8+uqreOKJJ/DzP//zWOYWX/3m
      d/H8q2/h2s0ZlskAMLsbG9m/urVehxBd3IVwGANfHxoxgLoUAfr6aSAkfWpoDSYWVcwsZk/D
      rmy2kpjrvvA4RCkx1bW3rg1V2pVPG+LiH41GLrKDztT9/X0sl0tn/qiLINMmhFhoX4yUxjud
      Tmk/Ac9SkH2Yz+dbaZU8ujAG1Djq+keTB3PktPEf1UHnFAI2AxaqQCkegCPqwMonBawYizTR
      SDD1szTtkFkURYEbN27g9u3bTrC4fPkyRqMRfumXfgkPf+sZPPbKEQqTwdoUSFax/rscnTot
      KAYhU7EsS19vMwer3uX61N852gTUptKTRgzRD723TXurNIk6bEv8fVgulzg4OMBgMNgggm3R
      dIz4LCcZmRLtt8PhEHme10r/284nnvAkc/TzOvuUpqnLoMqxqtKYJJOTbdwGMVqyZOaSKda9
      I+F7ng5vaY7T0TgxdVGjkxtC5RhRgg+dU8HvQ0YoNYKiKPC1r30N3W4X9913n2vnZz/7WRyM
      J/idL30Xb0wyWLPe3OnTtn3Q/jqNmLkvBZS6Z2Of0e1rA+/8Xd1Y15UYwB4HGNQV5jMB1XWc
      90IqfJMObkOsaTfU7a56vq6NPrOHLNvX3l0SDtkOWRcTaVU93xR1Y6/vUwPREr6U/Juc0NUG
      i8XCRQFp7ZXEnw5zJinjDt+6b641sG2+Z4wkLzPDzudz70FNhPwWPimT6HQ6LhHgfD4v5d+n
      pmStrTwQqNPpoNPpOIFDtpdmHEbz6D7TcbtcLnF4eFgSVhaLBbrdLrIsw/Xr1zEYDPC5z32u
      9P6/Pv4cvvydV7FAr7WJM5aJ+hiKT5qPrdM976l+WwG6kq6hbKIzxiAvVppAo41gsfAxDd3I
      WO1iW4mwjoj5cu1UEYKQChdictsSiljIRazr25UEW9UXSXzkiVGEDOuLrUu3PabdjIryMWPa
      p6kNkADeLdTNaab0IEFmyK/08wBw0TMAXM59Pm+tdfeYV4mbq8bjcUlzGw6HziELYINAk0FI
      vwnzLzGpIOvxgW3rdrulumX5jIp67rnn8KlPfcpdn0yn+POvPoLHX5sCpgtry+cS7FLI2tZC
      UFuuhXPwVrWXkToxiNHYAJSEiFoNwAet5rHy0LNVv8eqTtt8jDrCUSUthZ6tu3da5rCQuWIX
      dsuqOkPfz6fqW2sd8W9qUoptr26Pb46S+DNW3Fobvd+gSquLge9dSsM6PYkGwyJpTut2u84e
      zt3OUhInAeXZy2Qek8nEMbv9/f2NvQedTscd+ci+8QwGYJ2Hp9frORPNdDp15ZBR9Pt9DIfD
      jX7QmT0YDIIngnH+MGHjxYsXAQBXr7+BP3z4MfxokgGmPMdOSriqWkPaCtBkXrcJ045FFR3W
      QRD8vREDqCP+cjCa2ip9OKmB8rWjTt3T8N3XZe2aEcQyXv181T2fSSuEuvp01k5jDGazmVfa
      q6pDjmOT93ygqUKqvzRTVR18X/ftm0KXR+YjN/L5GAUJL00qJLZ5nuPcuXMbCdZI/NlHSufy
      XAl5mhlj8NM0xWQycVl+pSbX7XYxGo2cI3oymZROpGM7B4OBK0uPUZqmbp8Bbf7cJGetdaYf
      AHjuuefwMz/zM7DW4p+/+zT++ruvYWl60eO8C9oTgybzU9POuveaSP91dTqTj91co62SwdXZ
      uqtwWtLxNtCmHF8cNv+uyvezK+mkSosJMSI92Xxt932LGK0rdE8mCGQirybEv6qeKoalr/E6
      Nxdx0huzjvUPSf9VfY9hwL7vVCUoUAvwrSW23xiD8XjsiDel8vPnz5eYB48K5ZyVOXlYpgwn
      pTNcHwJEaZ1aExnoYrHYSKdOdDqdIPGX4yI3eLGNUiu7cuUK3nrrLXzsY/8Gf/Clb+KpazNA
      Ef9a4tlAe5Rti0FbTd9nhq2ca9El19eZJAm4paBRFFBdwRJNiN69yAR8pg39sTVj0IvrtCGJ
      OEMEucmmLbTNPdYMxzS9JE7D4XDjEBdfXbo/ofu6DVVEBlgdGCPDPOno1cQudkGHmHCI+WqG
      K5+Ti9DaVZbR+XyONE2dpE9iulgsnLYiy+n1eo5xMC+OL45ft4XHWVJiXywWXoIupX7ZVjIc
      GXnD9BsxR5NyL4C1FpPJxEWJjcdjPPLII+h0OvjJn/4Z/Kc//xe8NetsmHzc2oQ9Tl7YDE00
      3tB728BHW9w97IbwS4SEVKJ1OmgfYohhU5vZaSJG9ZeEPy9WkRJpsnn2aIzfQZbbFnyXNuXQ
      YTwxZpUqhkf4NtTJMq21TsqsO+Sjqfkp1AfNuGlWoank6OhoI0Iqhqlti9Bilwuy1+u5PRPv
      fe97ndmMu4hDDEpK+UdHR9FZUxmRxR25vj0Zo9HI2fEpWHS7XecAnkwmmM/nLpSW4x07j6mt
      8PcXX3wRzz//PD7xiU9gtijwOw8/h6Xphucp/HOvrs5YxAo9sXXeDeFQtyGEaAbgk4Cq1JlQ
      p+9F4u/zbRA6xlguamPMBvHnvRCR3yXxl2WQMNNc5ZUwrHWSUxNbaYxkzHhuSrR1J4zFMqGm
      ajaw3oAkwxybIMbHEmqbXidV3ztJEly4cMF9vzzPMR6PozbKsY/WWufAnc/nUWG29BH4GMfe
      3l5pD8VsNnNJ7djO4XBY2vDVdA7Tgb1cLvGNb3wDg8EAX/jCF9Dr9fDUs89jWZHGwRiDXWRI
      aCKgNUVIK6wr+26wiSADiB0EOQkqCU8Fc4gdIL57mkxE29D5d9NzZkMEt6m9MlS2/EdHG1Pr
      ynbbwmKRrxx9Pualy/VBfgP5fuwu2Ko+xNTve1eCZh7u7NWo8n9o043v+NAqf4ycxz7iT5OJ
      MevjLklsx+Nx9D4Jaapjrvw6LYBRPtSIdPt6vZ6LHBqPx+57yqiekCksFhQQgNW5vRcvXsQn
      P/lJACuGeN+lCzD2ZVhTLZvq78Syd4WToDH3gvCrhd1oDcBHqHxEIHZySK2hinnod4DqvD67
      Rkjz0Qs9Rt0LEYS2YHkySRYXGImXJtbWWiQmibafasat48K3aXeTZ2KkTflNpBQd007ftwiZ
      X0JlVhF/ed8Y45yhlIQPDg4aMbyDgwNv9s4Q5HGKtP1ba0tZSUnoaeJhSGdTYacKZDzT6RSX
      L1/Gr//6rwNY+SayLMP9911Cx+RYJN1N27XNYYoFOqaAXczRzQzOjXq4PbWY2IFX82qipeyM
      nrBOUea9QPyB8jwvisLPAJoQ1xjC5zOfyJ/yuZh62+ZDCUkKTaRwn7nLWotlniNJDFLj3/Yu
      39+lTVBKVIQ+q1kzgdDW/Ko68iIvaQxaM2pSlgTHo+6g9ZD5Maa+kKBSV0aVKSfUhlhTKDWU
      NE1bRUpR04sF7fUAnNYxmUzcrmh+T4Z49no9727ebcA2W2vx1FNP4cMf/rDL+0NNdW9vD7/+
      cw/hy997oyToGWPwxY9ewM99/KcxHA6dDyNJEvxv/+kvMGmvfAbbCtSb9Hy4exb/euh1Fn0g
      TJXKFUMINHEPmYpi27Nrjso+6MUbYnCbfbG4W0xeLxS2yRcjTjRmRBZYLBels4K3IQ66jDqG
      sgtC1GbO+OZEqC2a2dRpg7vYhayFKd+34TkE8nB2Julj/+h4ZjnbRpP52kmt4+DgAG+++abb
      6cu66LD/xU98GJevvoXn3lhrsHvJBF/8lV9zkV3ErVu3cDArgIBMs61w57v/TkJQAyCaSkq+
      92PePc1NX7HPNJk4aZIit0XthKtiKnXtkuYyiSzLNmLwtaQfmth15jReT5IExq5DQ9sSh9C7
      +vpJMfqmqJPoNePlM8YYFx1DyZthsdz0pENSt2mjD2zD3t4ebt++XYrv1/4H2Q4pke8KUmN5
      7LHH8LM/+7Nuc5jUWCnV/0+//gv4P/74H3F7vmIOv/zxD7pd0WwjALz+xo9QpOXEfr66m2iM
      xK619VWhcEEYG7fuAoPZ+Mq7aIBP0g+dMws0C+Xa9QBVfWBpaoqxB2cmLb3nK1vHoLdxJvva
      rc+j1fHbur1VGp3vvSaCwLbfSKvcdfVqorAr+AiK/rZaC+Y/brIi0VosFs6kwlxE/X4fBwcH
      GyY8lk0GUpeywvct5d/yUHtr12kcZD+4r0Ayh13B2nXY5w9+8AN0u1088MADjuDL/lLCv3jx
      Av6Xf/9Z/J//5ZvoYIH37D+Av/rqP+G1N+7g3LCL//nffwHGGFz70W0g2TxkqC0x9Vkq5LeO
      meMbVoTVxVrB8G7AUYlY4trGJiaf25YJ6OfZnjZ+iyqmpOupK1s/Fyvl+yZb08mgn/cRLl22
      j1CEGFssI9ALRX8fXVZMf2KJepPF1ZQwVC16maCNZ9Yy2yUPiAHKNng5HufPn0ee5y6en2Uw
      GqduL0VdMkPa+kP3eSoXz5M4CamXx3wuFgs888wz+PznP+8YoW6/rPuD778f/+FXP4L//PBT
      +N1/eBUwCZJijv/1f/ioMylduf4WikJpaPkCdjGG6Z33tqdKqKjSiNswFB8duNtaLZGm6YoB
      bCtZ++znvmfkT6A8eWMZQEh6bcJALFYJsjpJt9ZhE+twLooCi+UCabJWaZv4RpqMv+95mb7X
      d187hqvaUvVczFhIiU5f27VpJ6RKy5+x72lo4qTf4WHlJPqS2WVZhulshulsisQkTurXbZTl
      DgYDt4nu8PAwanOX1iJ9WlyIsTP7J7BKxcy9BbsECTUAPPPMM/jQhz7kUkvUmZmMMfj0xz+M
      51/+If7l8hiFtfh3H70PP/GhhzAejzGdTnH9zTsAjttdLPHQBQOzGOPl8Z63LVV0qAkNCT0b
      S8PamJp3jWAUUAz0xGq7qJu+V6fubqhfqo3FsZ0eAPJ8CaQpElMtZcZ+VG2GifmwTTSvUFs0
      0ZYnchExkrSuQ0rx+plQW/QzpwFpeompv6nWyLTMQNlMQbOJTyix1mLQ7wPoAwiP1Ww2w+Hh
      4VZMscr2rdvE3wE4p7A80WvXYNTPeDzG1atXS2GfscLE//hrv4gXr/4N0sTgt37lM7DWugR3
      Nw7nQNrDfb05fuvf/nf44Y0DfO2ZBEji5qCMgGpKlH30JQTfOooREFniSawoa1ukg44xhcS8
      05ZIxJhWQlpBYdc7ZR3XjxzaOunAGIMsXW+68rVXTrJQ+/mMj4FU1U9TBB19y+Vyww8QO6l9
      E1X+7ft912jKGJuYLnzP0THLelk3wxTZJqY8iNGo6uq01rqcOzKfviYOVSa4bQQoeTLaSXxL
      eSLbE088gY9+9KPO7NPEx5AkBv/xC59Ar993u5jPnz+P69d/iEEG/PbPvw+/+KmP4WvfegJ/
      99QNWBM+OEejLdPVa9Rau6LSDYqLWo+tWtegDa+//nptk2Pt2UDYJrlru1eVRBsiWNZaLPMl
      Bv2BW9hy4YUgJWv+HW1uqrF9h/rRdKEbY9ypW2yftOu2ha7XZxbRhIqmC50fJnYetMmZ7htH
      OjRp1+XZtDqUMPQ+4Dcn7ZpYclyOjo6QZRnG47E7CEaH+LJPTBbHtMzcT6Dbrs2CnFc8GaxK
      Euc7bZ3rPG3trbfewne/+1382q/9Wulg+Cbjw/7Ia5PJFMastIm//odH8NUnb8BWpDkJmcOa
      fM+QOU3e28a8s2s6WYcsSg1p0KHTCOesg1bLpIkgTVKnugPAMl9u9C/GhKDr4fWYCSJRlWo6
      BvJZSlYkwHmew8I6zaQNdF/12JLhMJeNXKxFUbhUzPznSxrmI65NmCzbIsfBl6GyiSBzmuA3
      3NvbK8XiS02AjlqmkeB9nd+f17Msc1FGsg6C5cj8/8CaES6XS8xmM6clNB0ztslai+9973v4
      xCc+sREW22R8fNeGw5Xt/1++8wQefuJNwFRrZaFymrYlxvR52oS8LXYb7LtjhAgtUB36F5I6
      jTGAWW1oogSyXC4Bu/lO3WSpImJNtIPCrhhAJ/MfoxeCj0mQUCyWi+N7ZsPE1YYI+mykLIv/
      dIoIvqNz0lu7PqIw1A/ZvlgzEI9FZGx5aHzudXS7Xee/kXHydUKBDOukY7pqo5kx66yjPOiF
      7zKXFKORmoK7nAHg6tWr6Ha7uP/++wH4bf+cP9K01gTWFsAJmntC8PWjqUaxa2iTqF6bGvck
      AwgNYpV0XXW9RLwsXMZFDk5RFOh2ulEfThLQbWyxx4W4vDxy8siPJrUXWX9Vu6y1WC5WIYhG
      LSjaZDURroK1qzhunjcgdxhLiUhPPnlNS5j6Of/whDUtEgtKqDLK5u1A6EPgofUxsHa1uYpn
      7WZZ5g5bqUosx282nU4dkwbWG8BoHm1rPuRayPMcTzzxBH7pl37JaSW+tckjKxlVxetMbV7X
      hg/cfxGmuAKbhJlV3boB2vtz9NrV66IJ2r7Hd7Vvqq6sKAYgDxL2NZIfl8T0JDitr8wY1V4+
      w+eK44VTl91Rlu0zK+ly6/qwce34/20XmS6Xi6nIV9KUjgTifYIZQ7nwq9rBsZLn2PoIfagM
      TkzpmA59L+l09fWZhELvIn23gevicHxY2sjFw2+qiJ70F6Rpin6/vzXhZ9lkKJcvX8b73vc+
      l3LCJ/0z/QOwFkpkcsM6jcBaiwsXzqNjZ5jDzwCaaOQhVGn42xDtJm3wtUmvO65Tmlt3wgBY
      AR1olAh1BkoATp3cBrFmCkmcm0zY7DipWSJshjFMQF9r+tFj+1NlapLXfJIIvwPvyc1I0tnN
      bycPkQk55uR7jOxg2CBt/1X94wKpcjgyp7102uq+6TLfjURfI8syXLp0Cclx5AvP7K2am3TE
      ktmS8O9iTClYzedzPP/88/jiF78YJP7A6ruSmUsiRse2z4xBJnfllat47Puv4MmXfoR54t/D
      UCU4hu7X0Z8Ygt/UF9gWMsBBI2YfSSMTUJ7nLp9JqBPSESnV9CqJxAf9Eao+VB1kGXKSt7E3
      NrFNty07VE+djdH3PhdjaFKHypJqvJ5I3LnKFL51E81aG5QqGdXCtMMh5nZG7P2gxA6sv3WV
      AEYTk7bt72J8yYAA4Omnn8ZP/dRPuUi0kHDh0zxpUZDE7eDwAPPZHK//6AZeePVNPHXlBm5O
      ExQmg7WrqC6DOJOONuP6tHz+rWlHCE3GL8RA2tAUbfptiiADCEnyNPGEKmOKWwAuD4rv8Ikm
      0Ha1tra1Jh+pTh08CTNX3YTVf0viTNOMDqHcxi6uJS9ZFucBNcOQSYw2+tFotCEFUU3ddQ6f
      dyOsXUVk8QSvfr+P6XTq1jCJ6t7eXq25ry0o5B0eHuL69ev4jd/4DQDVm7581+VB94vFAt9/
      4UU8+uwVvHjtEHfyHkzahbU9FCiAinUYMpP6fo9BlVSv0ZTItyX+WlNqiiAD8El1Ptssiby2
      LQOoja9vg6qB3dWklkSsbZmSoNfluq8rh23SP6W5hzb/NpAON2u5WxpYCq1NEn/JiKUJYX9/
      3znXaeun0/hMgj95ZFmGc+fOOek+yzLcunXLpX4ORUftAhT0gFW2z49//OMb2T7b4OVXX8P/
      /eUnsExHMGZ1YE1iNzOwxiK0nnz35O+S7sSacuuu7Qq1GjgQ3FDW6EhIX8Y9fvRd2P512TFS
      w0kObFVb6jhuW00lVL8E7fA+00rbOheLBYrjcDoDlJz5vjokUadZgYd07JIZnyEOtLNLpGmK
      c+fOuUR1J/VNpDDy5ptvYjqd4sEHHwTgN/HEwhiDD/3YQ/iPnz/EH/3DZeTHTt62c7yp3b7u
      3q7m+YaGjzDBbgOD9RrWQTqtwkBpZtAmmV2ZRjTB1ZzZ5/zkz20/iI9wty1Tj40mok3thi66
      A4A9lth97WxrIsvzfJUOobDIl3mpzTIfjsx+ORqNNojLGfG/N0AJ/KRBC4C1Fo8++ih+7ud+
      rmTH3wadTgc//4mPwgL443/8AYqas4I12qyJWuEOtlEKmar6T0OADeU7AlowAHIRYFNV0rZf
      Mok2u4N9RDjk4PExolB5TdW3tsxglxqAp3RHnH2aSVMC7J63wHKxdOlMyKQ6nQ4uXrzoUk3I
      bI5nxP7dDSn9v/rqqxiNRrh06RKA7aR/iTRN8Quf/BiKAviTf2rOBGRbiRCRr2vvLpy9te81
      fqMaVfS3MXvWCcakQ5JEgdKidiLGguXqf/K+/FlH9HxlVN3XqnSoHXX1SWzjjNWQKad3BWPW
      2UwNxJiaVdpghmmeO3cO3W5350cGnuHtCeb6z/Mcjz/+OD75yU86oWFX84Nz899++mP46fdW
      70z20QLfeqyjBbI83+++v6vacK8iiW0oOxXaXQisw8C2jfoJlR263mTzGePe5TuSuMtj53ZR
      n24/J3NdMru68k9yksk29vv9UgTP22Vin+HkQenfWovnn38eDz30EIbD4Yloh4w2++D95yoj
      f3xt3KbOKitHE6HwXkUChDcb+cL2KOHv+ti4EHxti82gGVO25vadTidqA8VJwdp12gU9uU46
      0Z6eyL1eD5cuXjoL0zzDBijscb6+8MIL+NjHPrZz6V/jgfvi0mRolGiDQZSdJdZi8HZGBvht
      VSH7lYz06Xa7pYE4rYgc2qabOHhiJmSv19tpJFMs5IRi6KzUorIsg0Xczr5tQUmr3+9jb2/v
      VJj8Gd6e4Bx98skn8ZGPfMTt4j7JOfPA/ZeA4iXYpDqNdQglobZJ8v4ASItCQR2nHbEYArV6
      oBzhl8kHfI7SKkeG3GRCNO1k3bshxiTz+NRJqFXEX5o2ut3uxvmpTUFCHmJOeqLI3dVshxxz
      yRSA3R98LsExoJ3/zNxzBh+k6efg4ACvv/46Pv3pTwOIP+mrLd7//vchzSdYJv5w47pom5jo
      wneCZC/BnED6PBNjzNoJHIooqULbCBldZ5P3ZJ27Ioasfzqdbj2BQ9FGIZVR5tGp+7dtdsa6
      id3r9XDhwgWXJ+YMZ/BBmn++973v4VOf+lTrXP9N0el0cP/5/ob03iRAow5t537dOrsba4oh
      +9KkXMqrpBsoiUzdoIaic+rgI/x178rt4TJaZ5eDulgscHR01FoCiHHcVkUjhFTIXRzZV/ct
      e71eaRfpGc7gA6V/APjRj36ExWKBD3zgAwBOXvoHVuvh/fftbcTh10UBtqkn5pkQrayzZpyW
      D6EqYMVaWx0GqiXQUCFtU0D73vNJvnxWmiXaHBtYh11F1kizkkXZJFQXOnYSoWWybF/K7l6v
      544HPMMZquDb9AXsLuY/Bh94zzkA9X7HEJGVknpIY2+CJoLvSSOGTsjW1uprIYK8UagazFjz
      ke893z9KHpxou049odvSBj5p3RYWeVHvvI0ZL3nkYpu28aesq9frod/vo9/vn5l9zlAJKf1f
      uXIF58+fx8WLFwGcLgP44P3nAbt24u5Ckt61NH63ooSiTFzi96SJBK+ZgHaoxNj09f0YwieZ
      BbNLbhtpcFofx8IiTdIoBhosQxB/ZgBtq9ayfmaM5OHgZ8T/DHXgpq/lcomnn34an/jEJwDA
      Rf+cFt77nvuQ5JPadAxN53SIaDf1UVprS7vp4fl9V9aGUBtitAALu9oIFmvzl/AR/CbEv4qZ
      +N4jptMpZrNZ65BIOrAKW2xcPymmIM1YmnhTcqo6Ta3Kb9AGPFy80+lgb2/vjPifoRZS+n/u
      uefwYz/2Y6VNX6eJ++9/D/7DL/84TLHelLqt49UnoG3Qpwrz7MY18XuT9WqBHQSn1giU7jez
      3gfgy/seQhMJXj4Tei+G+EsHKollW8JV2AIZ/Cktdo00TQELlyYZWIdbysgJMibf6VrGmFIo
      V1tpyxiDXq+HTqezcY7uaYN9qdM+3wkhee+EPgCrfkwmE1y5ciUq1/9JIUkS2KSHJOshb+EH
      DAVj1NK91cuVZVqsif8u/Asng1UrDY73AZzEBNWdllqG736bMuugCbv88L72ncg4wCAv8tIE
      I/FjnfQddDodr19DtrUura+11hF2GfbFlM1pmjrmczfA9khmd4a3B6y1eOKJJ05t01cVfnD9
      ZpAYR8FgK1E7SEcqnt247mnALlmFj6YZY0r93tDddsmt6uzdJ80ZNdPhzzRJvc/pAdsFQ6D0
      boxxsdNMp1wF3xjF+Et4KAiwjrKi1H834SP81lpcv34db7zxRum5unJ2fe+kyn2n9cVai+l0
      is985jMA7o70T7x07S0URT/qWb+JxsCa+LTOdfAR2nr6sSUXimyTbItu0+ka7zwNuBuI9TdY
      a6PCTesYGu2kWZY5id/37LYSsTEG+/v7Ll0z28ZMrQC2Mp21gY/wF0WBa9eu4ZlnnsFgMMBD
      Dz1Umd8phLb3zspt/y7Pbr6bR3nevHkTb40L2LT5Dt5SSPbOEy+X65Ftk3CaPwBrDGDDmQOq
      oMsOahoVZZ6oBuCDNE2cBiGKHVhtKpLXSVCn02nQX8Dr8thMTeyrnOQ85aupf0XW3+12S8Sf
      ZdB/QFPTaSBE+F977TU888wz2N/fxy/8wi/g/Pnz96CN9AxVoLnybn23l1+7jiLtuzkdSzR9
      2r1+f9d9kvVI2ufqw7Hjt4VgHIpYalJWiQGcJkE+TdRFJwFhFY5BSZaoAAAgAElEQVQhp+Px
      eIPA63c14+DPmD7r831jwfI7nQ4uXLjgJfB3Q+JfLBZOc8rzHK+++iqeffZZnD9/Hp/97Gdx
      7tw51662zugzxnE60OO8i53p2+Cla2/BNjSfhEy794JFYlswiKSNH9MxgNNU5+7m5PE5hn2q
      FI9fZCK2UKzzLiaTbFPs2JAZMXnbacdi+9rjI/wvv/wynnvuOVy8eBGf+9znsL+/XyL8JP5n
      xPwMsfjBtZsAypr1rgl5jFnXZ8nwCYG+94L1orkjmJGBIetEFVwY6LsV0kwjpfblculVDznI
      Icm+yg4XYjzGrMJCdahoVZuzLHMmn7uZuZM+huVyWSL8V65cwfe//33cd999+OVf/mW334Am
      qTPCf4Y2mE6nuPbWEZCMAJwM7dqGmZR8DDXMw3uvZb1t0+KcuhP4XoV0kur0y74Qzl2DdtX5
      fF4KD/VNoiRJSvl77gYR9RH+5XLpCP973/te/Mqv/IrbLCQd4WdE/wxt8fIrr2KRDEsmDy3A
      xWAXWoMso015J6G5NMXbkgG0cSDHDLQM1eSkYj3L5RKdTido8olRwbgTOE1Tb/y03BRWhTRN
      sbe3d1dCO0OE/6WXXsILL7yA97///fjVX/1VDIdDADgj/GfYKV66esPZ/7VgFjK5yJ86GEIL
      dLrMOtQFbdhVQSVmFXr2buBtyQCAdThjE+duzAfVYZ98h5pBt9sNllXH0enozfMc3W7Xuxcg
      yzJ32IYsV7an1+ud+vZ7H+FfLBZ46aWX8OKLL+KBBx7A5z//eQwGA9fmM8J/hhhI0yvNr3m+
      iiCbz2c4PJrg4PAIk+kMj794HcZ0veUYs8q+K33D+m/WQ7s5TZK6HSxvB53bvowdIMTU3pYM
      QHemyhaf57nLIqqjF3zSNkMmmfgqFMdrzDp9hpYCdJmynSwzZEaieWexWJTi9yVO0+zDsZBM
      aT6f4/Lly7h8+TIefPDBM8J/hlYgsf/Wo0/jqcvXcHA0x2yRY2kNpvMC89wCJoU1KQokx5J/
      B3paldabprfqb0k7uL6kIFnFBE4iXLTWDGTMRmqJNuC7WsC96wzAFy/f5n0JY1Yx+xKMsc+y
      rMTxdZ2SgFFSYBy7lrq141j+1G2ko5cTL9QXltvtdt2+A17jz9PYfh8i/M8//zyuXLmChx56
      CF/4whfQ7/ddu84I/xliYa3FzZu38F/+9tt4+toMMClW5Gi9xkzql1rb2vp95hpfcIauq42t
      PpamMZqvsEWQWe0S95wGIKNqmsQXx9rp5EHIwMperU89C5UnI1Zke319qIMm7nWTOnTWAZ3F
      JwVKZfJQ+tlshu9///t4+eWX8aEPfQhf/OIX0ev1AJwR/jM0R1EUePLZF/AnX38atxfdY+K/
      iTZm1pDGXve8FOB8TCC2PN97oedlnYlJ3OFRoXd24TS+pxiAzwFDbENMQhyfjIaOWKkOVQ3u
      LgY9L/IVkcSmE0hKIVLy9o3BhQsXTkQD8BH+6XSK5557Dq+99hp+4id+Ar/xG7/hfCDGrDaf
      1SWnO8MZJGazGf7q64/gG8++iRx+W/6u0IpwG/We2m/WREBtEqxird2o6zRw1zUAYJMYbkv8
      5/P5Rjnyd9r3qQnURe/UtVszD13WKikbUBQWSQXtlo5WbZsEgL29PWdy2SWsXeV6J/GfTqd4
      9tlnce3aNfz0T/80fvM3f9NpQUmSODPaGeE/QxO8evU6/vAr38XVAwNrOq0dpE2idCScOWf1
      R6k8t4Y9PgSfuShm7lf5Jv0NPP3ooLvOALbZvRqS2quuA2vNg2mStQSun69rg+/ZUmQDLNI0
      QVrTVxJ/H3ho+0nZBUn8H330UVy/fh0f/vCH8Vu/9VtO2zgj/GdoA661f/j2Y/jyI69iaXqw
      tv0+GkmAW5tEat6pE+h47Z2wDu4qA6jj5CHJPORc4fVer+d1oOrfF4vFRjwwTS80cYScSHX9
      ku/IIyEBlMxOkoH4fgdWkUmXLl068QlnrcXVq1fxhS98wcXxnxH+M7RFURS4efMW/uhvvoXn
      Xl/CJB3AFu0Jt0Dd+3Xm3Lq5HNPGtkygKT05Sdy95DHH4CD4zrmNmSS+KB46JuvelyeL0Qwi
      iTQJtXRU+yDvh6KSQuqgfFYTWf5+6dKlE83zY8xqY0ySJPjwhz+M559/3l3nnoN7YbKe4e2D
      oijwvSefxf/++3+P594oAJPUrqN7BWxjzJxv2p+SZnHaBn8P7joDAFaS+HQ6dbZvgkRJ/ov1
      8mdZhl6vt8HJ5RGExhgsFgv3TxPfusPXqTW0ZQBsz3w+x2w+Q17kMEm5vZ1O58R3/FLbAYCf
      /MmfxNWrV50GdXZq1xmaIs9z/NlX/gm/+3cv4jDfdPSeCgNoIa/odXrSZp6TPI8gFvcEA2Bo
      JCXgurAtTagpwerrPP5QHryuwZz1vvKrzqutuicduDGhrXmeo8gLLBdLFHk5Koq5dE4aZLBZ
      luGnfuqn8OyzzwLAxq7kM5yhCnme49uPPol/fPYmbCC88zRg0G5fkUbs3GcIZ0gjqNMULE49
      AAjAMQO42wu82+2eWHoDmoNC5+AaY1ahX/Bv5KpiMD5mxOfqGBkdr9LnoO9funQJo9GoVb+b
      QmsB165dO9MCztAIRVHgzTdv4C+++WIt8T8tmhNap7ssvy1KDIP/ThnZO8WbHYNut+skd2nj
      L4rjXXhm04EbGpttQtHyPHfmJd/ktHaV7lmf7nXS8GkBn/rUp7BYLO6qEzgUpcW/9TfV//Ki
      QPH/s/dmTZYcV5rY5xFx783MysqqrMpCgSRAgAQIChABQze4NKleSINIqDXS2Mg0Zi3TPOtZ
      L/oL0pNMetHINDKTxkzr9Mi6pxd1t9A9TfbCrbERqMJW2JdCbaisrMrtbhHheog4Hic83D08
      lpsLUAdWyMx7PXwL97N85/jxJEWSZuG/kspLqX4PwwhnzqyrtNUm+rzskzZEPrR/9exzGMv+
      Q5X7oCZBHEA1ItAWIajKO3R4X8f3QfJjiR6jgDi8ctAXk/i2TbBQmqYZsw8CBEIgTEOVqI2I
      mLCLdLPON2yU+xZMQiYMQ5w9e7a2rr6JrIDpdIqHHnoIzz77LB599FEsLS0hSZIDSUBHjOT2
      7TvY3tnGrdu7uLW9jzu7Y2ztTrGzP8Wt7QlmcZLPP7J8KUIgl+AABKT6h/yzIP8J9T34vEuJ
      IJ1iKUhw/swqzp1ewT3rJ3DPmZNYP3USZ9bXsby8XLLw7lJBUkr85Oe/wrubuSblSX1EBNVR
      0z1aV9b1uXMsPRz06nO+BABx7do12fWKN+41N2m1iyT9cIav534ezxEEIQIm7afTqRoD3bbl
      Ii54moyZ3zlgSlC3sbFxaJE3NA9pmuLSpUsYj8d48sknIYTA0tJSr32i9zadTvHqm+/i5bcu
      44NrdzCeJUgwQBIMIESWBOyw5kJAAukcUTrFqZUI95w+gXvPruLc+kl84dxpnDmzjlNra5Wr
      Qj9PAkJKiXff/xD/wx+9iESMGlvHixYCbQWArZ62dZgyk5qorn6TlZBK2cql3JsAAA5n0bcR
      AAAUrk3lhRCYzWZK09Vz/+tt8p9N2wayxGoUgkrMgzT/w8jzzylJEkynU8RxjGeffRZPP/00
      lpaWrCmsm5KUEjs7O7j07od49d1ruHT5NvblCLacMEeRpEwhZIpQzrEUxrhn/QTOri3j/Poq
      zq2v4tFHHlIZUj+LNJ/PceH1t7G5dQe/8dQ38N//H3+Jm5MiPxTQTABwOmyf5EGRK4jERTy/
      Wde56kUAHAVqgp3VxfQTM6+L++fURABIWU5XQdDL2bNnDzzPv61/fVsBUkps3b6NN975EBfe
      vop3r+1gJpa8mX5fWtyiSUoJIVOcX5X4z374JL764JePdH+b0vb2Nv7h5Uv42asfY3MS4b6T
      Ce4/fwq/eGevDKk1IF+BcRBw0WGR7/q2XWTTlsT169flYV4mvmji8BRfaF0Wkgn711+aHk/M
      KUkSdfVjEARYXl7GyZMnayGngySyAubzOf7yL/+ylRWQpimuXruGV9/6CK++dx2fbM0QB0uA
      qF9vrvezCBiq77aklBhgiv/4Ow/it7/z5IGk8F4USSnxyZVr+Omv3sKv3tvERI6QptkeiJIx
      ZDRCinbjc+0TW9nPqhDwIUpgaQtrb0qfGwFA1GURmQSIiUGYBAK/MJ0czlEUYX19HUtLSyov
      0VGhplYAzUeSJLh85SouXvoQF9+7gRu7EkkwasRI2zLlps+1hShcVKlTpnj8S0v4vd/9Lk6t
      nfSu5zCJ1nccx7j0zgf4u5ffxbs3pohRvRK1qzBuIwB8yralvuFsnRe4mLaPhdMX41f1HaYA
      6Nus92X2TUxJY7iXhwXBYSS6VIZ+p1PKp06dqlxHd5TgApsVMBgMlBVAcNaHH1/Bq+9cxmsf
      fIrNfYE0GBrH4jPOttiozzvtykR8+6CvsTNLCX7v6cfx2CNfbdwmr1fvR5IkmEymmEwmmE6z
      6xPv7GTXJ+7sT7E3meP06hJWV0Y4c2oVp06uYmVlGSsrK8ZAAyllBvP86nU8d+kabuwFkKKc
      Ol0P+GhLdQJZ378+5bta9ra+NSE9qIP4he/6rPM99kkHIgBsL6qN89ZFPpKxqQVAL7Bu8dnq
      m06n6rvRaISTJ08iDMOSk/nOnTtYX18/NlYAkF1Y8+HHV3Dx3St448NbuDMLgbAewuoiAEzk
      y9D7aq+uLr1eXvdAJPj+N+7Bf/j9b3k5+klhuHPnDi5fvYGPr93C1s4Yk1mM3fEM23szzOIU
      81RglgikIgCQMWwdj898EzGETDEIJJYiYGkgcHZtBSdXhlg/uYzTJ5dxbXMbz126hr10CUIU
      eHPfiolLOdDL+AoA9XkWN9a4T4vwM3HMvmtUlMwqqvTPWhb1AbkHJgAGg4EKfdQH2EUA6CZp
      Hek3hNVR09BWriWRo5eINC46i8CjgOiCmtOnTx/4OQobSSmVv4KsgLX1c7h8a4p3ru1gNx5A
      BP5Oa98N1lYA9EF9wkLmTS/x1TMh/tk/+g7On9uoPDObzfDpzU18cPka3r9yCx9cu4Nbewnm
      onpzVp9MilsUUsoSE+2TMfowfl7WJhT050rlKN5eoJEgaGOF1z1zkH4LaqPJSYwDg4CI+cVx
      rLRcLhD4T19q48zl0EwXpxPVYxIkxPz1S+XpGdc4B4MBNjY2DlUIkOY5nWbQAt38tb29jf/m
      f/kziNUvqHJNN03b8jodFFTWxRntWmMr4Rz/6W9/HY89/GV8cvUGPrhyE+9f3cInN3exMxWQ
      4ajQ4mqYSJt9w4kfbqPwaBOU1VazNvW1b4cvh1pM9RD1zYgXYTV0ocb88KB9AEEQWC89aWoJ
      tGHiugBoK6H1gz/8+TiOVZSPLgB85joIAhVxMxqNDiwNw3w+RxRFmM1mGI/H6j0FQaDuAP6v
      /6c/wF6Uaa76QbjPOjVdIzbFQX2exhgFMWIxQhANS3HdpkOGixIAvA3b910YZxOtX3/GFzfn
      t/v5tNsEl3eRj8/R1Z++qel4DjTonOffOSiymYwmq6PJ5Jk0WfqM4BxbmTqtJE1T7O/vY29v
      T+UEonQMQvR/Ipf6MJlMEAQBxuNxpT9SZqejTy5H2J19fvJHcfJdKzYGW6EgwhRRZrPngQJN
      laA278EkTEpwCqoQQlsHqwsa8ZlD33bpilfepul98e90YeDqx0GQbaxNYTPfssARuBKyLwew
      rW79d5vj2SS9bWYllTM9TxSGIZIkUREzBAnpC9FUPy8ThqG6r4BoPp+XkpZ1nb8kSbC1tYXp
      dKo0fZ0I7hLJBMCpyndt6KiZz02oieLgU1YfP2cGfb1nW/287gz/r/bpIDFsnXxhHA656vNn
      qsNnXuuUVt93UucjoD4tglyWyaFfCXkYG9/GeHQzeDqdAoB3agZeF2UepTqjKFILie7fpUVK
      GDu1Sxi8CaoCoNI0CJHdo7C0tFSyOPRx2k56p2mKvb097O7ulvpmOuhFFsD9927g44+SynWZ
      TUn3H5gso6NMNgbigk/qoByb1bgo0rVg9Tkr4/t+21oizjYsVbra4uPR59ulsPVFdT4IU/ku
      +6gJqfnOGgbQowDgjOqobOQ6s4/IpB3oGvtwOPSyBHh9nKkTThmGIaIoQhzHiONYMX+9j3Va
      D+HzcRxXIBudhsOhyktD9e/v72N/f7+i3dCYbe2LdI5AVA8E8XH7kOn5pnUcFmVaslSxdi5r
      zkSmueXRY1TmoJiUiZpqrH0I8L60YX7nNoeF2gpXmyWmr1spZS60mrnKfcdqWhutYLmsEgAL
      sABck9unpPPdbPrC5LCObSLp4JbuWHIx5TozkqwJuuGLoCHTc7Z+2QRQHdOYzWYIwxCTyUR9
      NplMSripbewK+qF60xgiBRBGqk1dqB4HJt6V+r7Oj89xk3lcpPD0hba67uk6ntGmT1TWlbHX
      By/30ehLgkH2Ny9t+9Sk3d7Cfw4KI+QXqTR5rk5g8DIEr/AFwx10+nd1RFq/Dq34PM/bqkva
      x8egj5eudqR/BGuZ5mQ2m6kDYPP5XEFOAPDwQ19BPBs3ngMfaqOZucbclWz12taAj7nv+30b
      6MV3fXch0/N9MzyqUx+bzz9XWVJu1FkH7TuyfqkMtyRMa9322WFTkz70ZgH4MjOf8iYNSEqp
      riiksERfi8JWxoa/6Ufem9Zror4SvdVtNpN2QJCWPv+DwcAakkvOZ72+jXPnEKYXS31pO46m
      2itfFzoMY6rXxhyPwib1Ie5DOgwqQVv5XLugIW5Z19XbRli02eum905MXre0Tc+aBFFTy4yT
      DYbW+8f/btoW9dlnvg5UADQpp8M0/G8elsjL+9Zr+oy/6DAMrYyRk56a9aA2q6/GxefNVN4G
      h1GqCoKMKP9PmqZ46533IMMlVZ/p+aZjaKX5I4dhtEc5o6oT/L59bNKvPsv5ks9mt5Xx3rds
      rtu8M9/+mKgvy07vt2+9NsHgQ3Xwlsvq6zrPPnN86GGgvkQQiOl0Lf301Yo5cTOPaDAYlCIy
      yHlrq5szWJsG2gfxeutwPy44XQLD1OfhcFh6niJ+Xnz5Av7ol5cxWjunnuUYqz7uugXcRmBS
      kCLH4GlUIv9cinpH/2FR38y/CbXVMPX1oWv6bSw5U9RaW7JZk33sx7ZKxGFbba5+8DEdSQFg
      6rQQAqPRqOS41LXupnCNzbQTQnjnvDdJ7YNiPD74r6tMkiYVjZmYPz3Lx3NrZ4qZWMKS9rmp
      bp+N13Zjlpm/rPytfgqUYIu2JrVq9xA2te8ctbG++iTObNsIFp+yJDT0yDV9HervuwkkcpDU
      ZOy28k2tBL2OXgVAWzjARDYh0Nfdq7yPTVMa2CAV/TPfPtq0F1sbvv3k9ev1xEmMJEmyU8t5
      1scoikqwGm04+mxrZ1yyhGwL0wQ7uSyWRu9SFkyenlH9gISQWh2iP4ZX1886batLu0fBgjH5
      XDI4rmwBe9XVANbh6ywIAgRBoHIW0ed63aZnj6IQaEI2yMg3R5M+L1LK/i2AVEoEAr2HyQHl
      RdNVyLTCnT3xQp1RNBUqdQu1Fww2v2g9DEOEQWjMUURZS8MwhJQSVz65guHgbEnI12lkTcjE
      YG2Wm2kOTD6BNtQFKvisCwFOalw1PhfXs65nTEoD3dlNZ2la9dejrcMml5JRGUfmEGs1hl6z
      wMVJDCnThTB/oj5xvL7JR0j4lqkjClszHVXXhaONiYZBpv1zLYnXqUNh/+SHv4HfvH+OjeRj
      yDsfYz7dV1YZ5T/yGZfvHLlgu6O0YbkWbCJ6Hzarto76sKh9yTX3lbIoW2OuMOVW/h62Xvg/
      0v51iMdVB6/nqBDvcx18bVMsm8yrqXwv2UDppcxmM0AAo+FooReb9GFq8jHr8b6uekwvgr43
      tWFixhxW4c82WZy+GpernC/0QjeYcY3/5s2b+G//979CuPalykKmOGtbf9qY4i4c9LCFgQly
      cJXVcWqTWc/poAUAb5c+U5YpCiOLO+T1cbTxt9jWRdN3rpfX/VGmtWQTzuPxWCVfpFT2vvyH
      IFb6PYoiKz+az+el9DEusu2FNmukNQREqQyoI9SZMAwRJzHm87liGn1TF6eH63OX+W5i0m1M
      Su530CUyLdQ+tZQ+zN44jpGmqUpbEYYhwmiA/TjCmsFn4QqjTaWEYJtRh5Pq+ucSBIdFTdaj
      iZkfxTFxkgAghBFr5sy/zV7Xn/XR5OlvX7jNVtanv7PZTJ07ms1mWF5eVkoQMXRbG0IITCYT
      LC0tqVTrFMJOgkEIUbkcyjYOF7Xls40FgJQS8/m85IShDkiZLZA4jo3moOtY9iKoDkcHUEn3
      oJdpuyl9zDOTBu6jHevlTVip6XdOcRyXLv8wnVTmROksKPHchx9/gmjpZKm/XFPkd8iqvqAM
      0etClTNCHy2ozbtpo6W2oTYM0VczPWjKg6ms1FVw2davCSLR13ZT4enaK6bvB4OBOjQGQJ2O
      D8MQs9kMSZJgeXkZe3t7KkqRwqYpiGJ/fx/Ly8uYz+cq2SJdFSulVBl4pZRKYNSRzpu4ItWE
      GmE/1EFdu6OGadP7Zs/sg/rUmH2waRuZmLLPy1gELtmm7TphyS28NE3xwsW3MVoqDoSZDudV
      +lXTF95/H2q64HUIb9HUph2+dppivH2QrU3B/m97rm8ywTYmBq6vHZMm3mUel5aW1KFIyuRL
      WnsURSX4Rs+vRcycICQ6VEnK1/LysuKbOzs7rZi//l0TagUBuTRQ6oAtr7xeru1LMb14Wz99
      GLupLhM04YPx0k/fsr51m55T2CzTvm34sqkt+uli3KZ3Fc+nCg/ldQohKtZh39TnvB1FOmr9
      Uv3h85fDQW0tsU79gH0NtIV66tql3ECUFZh+CiGws7OD1dVVlW5F3xO0t+heED3cGsj23/Ly
      MsbjMZaXl2t5l4svufwq+lxEnHHYKiBTXk8VbJOqtmgAvTNthYBJAtbhfC6JWccYdIbqein6
      PNrGRrl2eL28niYwELVlGo+N6hLL6W3pgu2eU0v46MYM4WBUqk+P0NCp6Th9yFcg8PYWzWSP
      GhPvi6QG5C2C+detC9ses0Gptn3o0/elpSVIKdVPYtzz+VwhHZTh15TvSwihlGEKXU2SRNVH
      /RyNRuoqWF/y2T913wc2Jq5DA1Jm2D+He/QXQf8O4o5hbtbVMTOX+ddUm+TttRVcNkFoMnlN
      pLffFmpwZQQ1lQeKrKi//ZvfwxeiTcz3b6s+Aai9v5i/N5MQXyQdFqzyWSEhhHIC8zMXi5hL
      33dk4kH0u6uMz1ozhVcTf+MwN3fomhQz/lkURepZXSHR74Tgddrmo+larvC769evS5Pk1BnV
      bDZTv+sMnk9qFEXWzJemiT+ozahbOnUaRpdJpTp0eIaIcHTTCWRq2+caur4YZpNEdqSlBEGA
      6XSK5198CT9+/m2MR/cC4VCN1+fuZ1P/fZSHptbRQdNBWRmHQU3hUH0u+pqTJmvfpSnbIJI6
      6HQR5DO3fe159T6uX78u9S/oS76JyXSxSTmO/bs28UFHApmoTgPou18mHwM5fmwWSF3/+taW
      m9RJYXH0nt944w28+sbbePWTfUwGG4gGw1ohYGvLxxdh6/dRYbhHrT++5OsXkTI7+EYpRGxU
      d0CxCzUVALZn9Iy4rjb6fp/6OvEVAE0g4jpBJq5duyb1xmwdIhjIdFiBzKK6SdIvbj5oMplc
      Oi1aAABQ8fSz2azS9qKhkL5oOByW3vmdO3fw3/3LP8HsxP0AqgyAU1cBcFSZ63Fk/k0ZHTGh
      urXqKwDarHnf8iYFwbWOfH0PXUnxBIECVutQvwvyspEQwuwDMDEseunD4RDD4bA4EJTnjudZ
      JF20KAzWF9fj5Q+KuN+AKEkS4wXsvF8Ep9Wlojalg3ARf6bps5ym0yn29vbUxTFra2v49X/n
      vpKvqAm5tJ4+MN271A+1UeBc66Ep3Lrod21rYyFrTVZ9gG3Ixlfr5jagQtyxqFfE/xZCKKZP
      /5qkfWjKFPhVbZz0F8GZoW0iD5tR6PNL/aX7gYnhLy8vYzQaqdPWYRgaw2pNc+BDVI4OdxED
      b/pupJQYj8e4c+cOJpMJhBD4yhc3IOdjLxO1rSKgbxhXHp6DpsOCNfsk331SN04bPzHRQQSO
      EPlqyIsim3BZFLnmP9ILuv4+TNIduF0mzIWLmRaH3m6XxWqaUzpcYiI6eTgYDHDy5El1R2/b
      8esCw9dErlu0VC4IBJaxhwRrXn1oS4RDV44XO/p2l/qnOgerT7kmysciIdI6aKippUL1HBXr
      1NSXgxO7LanOtDEJA9OL8hEaNiiMrIo+TLU2JGV2p+/+fpZ9kywEysBJ/5psIl6e/naZvrZ+
      kUVIB2OuXLmCRx84Z32uzdxZoYP8IBJhqIcFBx22ZdmVmmjqOvmuO1pjJnL5TboIb76+ffwa
      /Cf9vihlk/frMK1G40ngpk6hRZJrUbi0ZirXV98XbaKZ2uCfk/SeTqfqCPrq6irG47Ex8dpo
      NIKUWZZWfjKX/Dh0qQYx8CRJFHZP6Z0pCZzeJ36ykUJC0zTFZDJBkiT45r/7Vbz6k49Kz/lC
      QsfNiXoU+tu3lrmIsegpEmzt+kJPfYzXOE7mlO2zLRvxS3bqHNJ9vBd9PEYBQIWOwuJ2kUsQ
      1FkNXWnREAMxZpODlr6bzWaI47gyruXlZXU6kawHOsoehmHpqDknqovXNx6PMR6PIYRQR9hP
      nDhR0q5IUFy/fh3nz5/HVx98AIPkdUyDVe+x6guzjU/CVK+NPksQkS2kuAnxtMW+1AYOtTFU
      qsuURND0jA9jbsq/dJ8SX+O+z/oKDFcZl8Xt2x8X8eeVACCG3weTXOTm4n1s0tc6x4+pn/rF
      1SYzsa/x8bGQI5hy7cznc+zv76uyg8EAKysrSrsnbZ9ykdCzRJTCtq7PehI/KSVWVlaUmU+w
      E/8+TVPFNK5evYoHHngAg8EAX/viabx23X4vAO+Liyl0fS8aCNoAACAASURBVNd6fa7v29Ci
      hIetr30Ixr6oDdNzvWueElk/FdunJs73cVvfhOv9eJEQgGdZ3se+13BElbrwbd9Ft6hO8vp1
      TK5Oy9MZh43h2PrM/9YtI9dzTSgMQ3XpipRShddSe4SxT6fT0iGswWBQunOhbyyVNuPS0hKS
      JCnlKifBRMyfLon55je/CQB47Cv34I1Pr5dyAzXdwK03l4GOM0YPuAMX+qSm76nPeaV1pado
      77sN+mmCHJsqd1RPV83fx1qt469teFFFAJgebqJ1LGKj1Qkn1zMuzVF/2XVzoJdrS4TDSymV
      tm7zV9DnQRCoCyh0oWT6vS8iuImsEYpK4ncJXL58GRcvXsT999+PKIoghMBjX3sQf/Cz94Bg
      qdbc9RFYvnOuvx/XuzwIamNRmxQM/fs+heNBkS8f4alJTPlx6qhublzzqwueRVpbLkWUfAMm
      BdRUT+lZj35TmRIExL/oKl1sDM2X+pD+ps1nnXAHY7VZSL5jJAZ64sSJ0mdt6DDMfxq/fgvc
      1atXceHCBZw8eRK/9Vu/hZMnTwLInMNnzqzj/MkQV/bcdTfBWX3qOWrEmdii6u+L+TedQyrf
      dHy++L0OBzXpk81KbzpXByEEzA1X22+qRNTBV1JKv/sAfE0hShhHB8W60EFoNHUSlfrhgpKI
      giBQp3ZHoxGm06m6T5TuFD2qTMpFBPXwSKMbN27g5Zdfxmg0wne/+12cOnUKQDYndKBNCIFv
      fPU8rlzctNbd55zUKSh9MsqutCiItA/ynae2CowOvbisNYoc8hECJi3Yh2zWZxtB0aRMH++e
      8yVXWhvX3EW8oI0Z+nSWJ4tbpMbTN9G4aZw2zZ9wesLBqSx9pqdBXl5eLt0GdNyINH66swAA
      Njc38corrwAAvvnNb2J9fV2NjU4zA8V4H3ngHjz7yqeAIWlYV+avvyfT70eBKhan+lk18U3l
      XURr8bD2WxeNmu87Ey5Pv/uGj9Lzdf0xQYR9WQsu8qmrrk0hqvcytxkzp5IAME1OE8iHOmRL
      F+1bX9uJt2kBPvi/DkXwiR0MBjh16pRxXPwZW3+OE3Goh8a3tbWFCxcuYD6f44knnsC5c+fU
      2PT85kTj8Rh/8tNLgPMiSHc/bKTPq2uBN6lnEVRpn9YMzKGNLlzYBFH2LfBsgrXPuSKm7gMD
      0c+DhrpckLBPvU2VEl8eIlrsJ1f7kW2gTZg/wT7D4RBJklgvF68TBD7SzEWuzWNqCyjnIDEx
      /zAMsba2ZtRCjiODt5GJ8W9vb+PChQvY29vDE088gXvvvbfE+Anq0edhPB7jn//+T/DhVpqF
      uzGybZK6vunPNRECh0kuuEOHF+uIl12UAOBt+VIXyMRH4zZlH3bV5dunJvu3SV0+zN/0Lk31
      LXpdVyyApqQzS9ONUC4zq0+ybaamzhPev7W1tdZ453EgKaU6BUzj3tvbw8WLF7G1tYVvfOMb
      uO+++7wYv5QS4/EE/+O//gk+uu2GE5swf1/qe9O7yIdxm5iC6zkXDMufWwT000QQ2frXpC3b
      OH2e9Snrshq48D0q1MaCdZHNmtSp1aXwRPoktl1Afb0MfXHY6nVpGvz5tbW1zs7so0omxj8e
      j/Haa6/hxo0beOyxx/Dtb3+7dNUj5f43Mf44jvH6pXfwF//wHq7smNtctNbqQ10YHT3fpS3d
      wuZWgO8+aGM9+PS19LeGNR8UtVkbJn+CTxs+ENSirHwX1Nbn/qgVALQQ22r/RIfN/H3r0zV8
      Il2bWl1dtV5teZyJGD/P8zOZTPDGG2/gypUr+PrXv45f+7VfU1YPd36b3nEcx3jltUv4t8+/
      jU+2BaQo349qE8pNfUt1n1HdPtR2Y7dZp6716AtXcjL5ufoWAkEQQCZ++Lz+uw+ZfI28nqZj
      cjHQNpCjXrdpHbvIuO7p/z2wOp+++AqSqK4iapAmwrX5mi7EgzbDXBYLnzCeS+ezQlIWh7iI
      8c/nc7z55pv48MMP8fDDD+OZZ55R/hs6aWxj/PP5HC9dfBM/fvE9XN0VkIiM/l4bzrkI7aqJ
      hVHXvgm2VDli4B/MYIr2qRMIPpiwiwF3EW6+2DPllfIp69u2/ruJfBmwuwAaMeI+4GtB//d4
      zDWfpb7UWGnWOpggqoWAmjBpfVO13eSLcnyYNC5dCAwGg1Kys+NOJsYfxzHefvttvPvuu3jw
      wQfxox/9SFk7dYw/SRL8/IUL+MlLH+DmJIJE1T/icm4tivi7rBMETbW4ohG0C2oyPFPSLEWV
      yfg4PfsmztwoW2xdeVIKmx7YMrXbhlrxCla8i4VwGDxC9wfZyPku2DCdAkCHS3wsBSqrP28q
      a3JU+DovupBpHJRbn5jfcSdi/HQ+A8iY93vvvYdLly7h/vvvxw9/+EN101gd4yd67lev4l//
      7CNAmH0jvWhoLYmvv65MhW+g0j7w1P6pHnXlH39Ef9zQVdcmd1my9L3tOxdxoURMvc4K0G8S
      9J13GzxYGoMwhz22fb/GdlrCMl3hbx8lZVE8kNddKwD47/pAeXIwACpfjK28a0C69rYoh6FJ
      kFFeeyllKbnacSRiDnqitg8//BCvv/467r33Xjz99NNYXl4GUFg9pugtnabTKf7qhfeszJ/a
      P+j5a7JGfKEb32d9GIH+OT8D0GadL9IC4AevfJgQQUELUdxkDnM08AOZoLs+1mMdLNMG/q57
      xtZmn+NpHAVETsEoitSLJ22JMxFiRPw2rSRJ1O90gIgPksqTk5LSHbddVHySdcFER8wp3THR
      cdX+aV55vp40TXH58mW8/vrrWF9fx/e//32Vj6gJ4yf65Uuv4+a4PirKhEn3yRjaal9tsXHO
      hJpq1M7vDBquy8SnPaSX5211tQa4EPAda5IkjdaRqz9dNWITXu9UPCEqd0pbLZKadm3vznbp
      SxPfTVeLw0beAiCKIqysrKjbpBZNxNDG47ESAhzO8H1eSlnSaOgnP+DlslqOOtkY/9WrV/Ha
      a69hdXUV3/ve97C2lt3RK0Q5X48v7e/v469/9WGm/S8QnmtKvu+s23u1M/9O9TKfghAFI2oE
      MQEVBuYq2wWr9+1TU2Ffp+XWCd8+FYw+/EdG35EnLRL6NlFJAOhaBE3saDTCiRMnWkn5tkQm
      JWms1LfpdIr9/X3F7HxfPu93GIY4efJkKYrhOBJh/DxD540bN3Dx4kWMRiN8+9vfxunTpwG0
      Z/xEf/fcRdyeRl7MRqeDXtScdI2rqQZfjLc9zkt12b5Tn7kiOixaav6lVz+aCpYmZPPp+Txn
      arsPS6u2L1oTXflAGyeyr5WhyvbIq4QQZgHAX+ZwODxw5m8iantpaQnD4RCTyQSTycSaL9yl
      rVHWzuNKpPFTojYpJTY3N3Hx4kUAwJNPPomzZ8+qd9iF8QPA1u3b+JtXLkNi1NsY+iIfDL0p
      JtzEIvQ14zv7tHSlkiCHUkiLvY9tmXqTsib/WlPqm8eYhICLN/SlrOiQTR/ogu15G/znQ5X7
      AIQQ6sYpfvvUUdKSgyDA8vIyRqOREgQmaMj2ovXohq646UERh3oI+rl9+zYuXryI+XyOxx9/
      vJKojWcwbUNpmuKvfvor7KX2Q3F9bp4mG2WR70bHdF3avOk5G3GG5DtvJqtLacqeseW8f4sg
      Wo9trIA+qMsaPKj11kUI6M/SHHed55IFIER2nyxdGt6HRF8UEY6/srKiBMF4PC5NlMkBDGSH
      mPgpX24N6JdrH7blA5gZ/87ODi5evIi9vT08/vjjxkRtXX01aZri+o1P8Q9vbQJiqfRdHZPT
      ++9D6j21SENgYzq2z1zaVBuYy9RmK7zYQMTkm9Srw7i8vS4ao4t4vQcpAHzfva+TFUIY/Vx1
      vgpb3/jPNnO0SB9lBEBl8hwMBioy57gQQRwkCGazGdI0Lf3jTJxy9xMlSeLMOd40IqJPoqgP
      PVHbq6++ilu3blUStVG+nr6c9FJK/PUvLmKmMf+m1Ld5zetcCOXdXFRQgEmT079vw2yalrNR
      F8iIlMY2zuYu2nGfdQv4+21twtTUHlcsmP+/F2o7d2JnZ0d+Vk6+NpH4tue5BeCjKdFib9Oe
      qx96vh6eqO3RRx/FAw884JWorW37t+/cwU9feA0/vngDMdolxDNugg5CoCke37QuXTvu2n+T
      JVSnhfYhLG0CRojyATeXv4IYuAlmqHsP/FJ3HyHQxSLx9f3YGLRpr7eFkXyebTvWRVltYjKZ
      SDoNepcKosXLFzBp4vSPn5wlSKrLCzIx/ul0itdff10lavvKV75SStTWF+On8V7+5Cr+/qW3
      8MoHtzHDqLjBynNTdGHSdczvoASAaz5LcArLDVTXRtMN3Ie1ZGJKvv4t8pPZcGYfIcDbtI2n
      i6XD69bnujL3ovqW+Nw0WpeGuozlHPWV11G/1kATuisAPIhbBsSggULTIYd5WwFA9ZsStX3w
      wQf42te+hocfftg7UVvTtpMkwcU33sLfv/w+3r0xhQyr62HRAsDHyeqN4XpQGwFgY6S8zq7j
      qHu2CXEBoGv/dX0hAeC6a9aHaI3qvjWirnPku544czb5R/pYP3qdPuQrkBdFdwVAQ+qyYE11
      2RK1vfPOO/jKV76Cr3/96+pOgj4ZP5D5N65d/xS//5fP4/3NFAjsobFdcVYXvOHDNH3qd33u
      hdG23Li8zj7G0qVfpv60EQBhGFYsYJ/nTMRTxtQJ0Sb11wkAEzO2rQeXJdLVSnHRXQHwOSRi
      /KZEbW+++Sa+/OUv49FHH/XO0NmG0jTFT37+Ev7ihY8wc8T3d4VVfOrwZZpNySVo+vBPdPU5
      +TzThfnTz6YCgKxaHlrdVfHRbzFrsiZc1BSi8hUAPnBOX/62vupqQ51uBLtLzYgWK0/UJqXE
      +++/j9deew1f/OIX8aMf/Uhl6BSieb4eH/r05ib+zz//Bd7blIAwM/8+GbEvHUabnNo6AIm6
      aHNdnZAu6nNcXerQ79/uo08mxm3yC5iePyymy2kR77sJ3RUAB0SmtA2XL1/GhQsXsLGxgaef
      fhorKysAFsP4pZSYzWb45Uuv4U9/+X4W2nkENgCwOMZv0277bmORVksX8rGsTIzQBa20Jc6U
      u+YiqsPtXe/E11F7kAKitz0OAA2VkLsCYMFkYvxXr17FK6+8grW1NfzO7/yOuoBGiCJtA9Av
      znjz5ib+rz//Bd69BeiHuqhMX7RIbbYrNTG5K30X5Ygfax3s47o56Mpo6uCPrsy8TwiExlr3
      DurgmCb+KBPDt/kF6vqRV3hoETu1ZBhX3Tu6KwAWRLZEba+88gqWlpZUhs5FMn5q9+cvXMAf
      /+wdjGX1rgPfzeRTTl9wB8H8fTQ6EzRj03xddfuEe5o+q+ujDcboi+rGaWLIOrPuSiSI+CFM
      V/02JaJUXgC2271Mf5eeM5Rz1c06cGQsZ53avK+7AqBnkrKcqA0ANjc38fLLL0MIgW9+85tY
      X1+vMP5FmJtpmuL//tO/wT+8twuIpcq69V0sTRaVj3m/iLF6CymWZqKp9t0kRYVNGNr66dsP
      X+dkG2bQl0PSJdCawj80j9yZXRLIFmbu6o9XgtejZbgqqhufj4XF6a4A6ImI8VO+HgDY2trC
      hQsXMJ/P8cQTTxgTtemhg332569/9lLO/A8586lNm2pTVctIG7VJJEobvwmcIGU5T1DfllrT
      cl0EiQ+5BEmTiC/+GQmAJgJKF57c0evqi6k/NmvnuFCT9epDdwVAS+IaDcE99Nn29jYuXLiA
      /f19a6K2RTF+6tvFN97Bn71wGbbrGxfpeK1ogFoysy51A34OPG+8vgPVORqbPNOGOEM0fW6D
      tOrqpH7qoaScTLBak37Xfe+L0+t9dVl1vkn+9PbbKh3Un6NMdwWAB3Hnk55ojtPe3h4uXryI
      ra0tPP744/jiF7+4sHw9rr7+6uKb+P2/fQtpzvz7XoR12psQQsElXTNrcmoE2WiavgkHbwqT
      +JRv8m6NwrJFn0zP9/HO+RzVad11mn8fa77J+28rsLz9CDX96+rcPyi6exDMQLTQXcyeyk0m
      E2xtbeHy5cu4efMmHnvsMXz5y18+cMYPADc3b+EP/+3zeO3KBFJEvTCBPpjUQZJto7dxflfK
      e0BZdQ5hG17r+qwtydxhSa3XRQfpa9QUfVN3v60LWmnKTG3Uxo9SaxloY2qCoy8ailskfe4F
      AG0EneGbXupsNsOdO3dw8+ZN3Lx5E9vb24iiCOvr6zh//jzuu+++UqI2ysm/6MUwn8/xd//w
      Cp598SNM0iHQAl8lcmlA+qZoo6kuSnDwTay3qX9Wp62anvUde1MBYKrb1qcm5KPx2sasCwEu
      APT+toHBmpKvkGwDLfVBdwXAMSEdt3cx+yRJsLOzg83NTdy8eRNbW1tI0xSnTp3CxsYGNjY2
      sLa2VongWUTaBhe9+8FH+MOfXMDHtyUgipwrvlS3eNua3Kb6Fmk1NNE2fRhKiWkbhIuNmkJA
      Pv3j5Vu9W1GNXXK1URdpokMdtnr6Jl2L91VeFISV/dF7v4CqFdE3/LUo+swKAF/cHsgEwv7+
      Pra2tvDpp5/i1q1bmE6nOHHiBM6ePYuNjQ2sr69jNKrG0dOGoWygB8X4d3d38ed/+xJ+8dYt
      JMzR24bJlhhc7jxtOoajAAk11Xp1fNv2XKOxGZitvWg3AeASCE6BViOsTZaJj9Vka68JKagN
      KIXrmuo2ve+DcsC7IK82MNJh0WfGCWyDcUzOoOl0itu3bysoZ39/H8PhEOvr69jY2MAjjzyC
      5eVl48XxlPqZ/vksvD4pTVO8dPES/vTnl7A1HZSifNoucB5PrXBeU7keIQpf6kOT8jHRfRyD
      XuOVxezVCZa6vtbBSb7kxfwdguvAhTtTRlo9vuD+FpZV+fOjzOhtdCwtgCa4/Xw+x/b2toJy
      7ty5AyEETp8+raCc1dVVdQqXE2n2/B99fhh0/can+Dc/fglvXpshRfnCjb7IxbDaQjldNKGm
      AsAHn27bF1ff6qiJgGkCc+jQjE/9Pv2sw/d1f0DxJSrht7Y+Nl1PR4XBHhd4x0Zcvh55C4Dj
      9lJml5cQ49cpSRLs7e2VcPs4jrG6uoqNjQ08/PDDOHXqFIbDoVED1DX7g4jc8aHZbIaf/PIV
      /PiVTzBOBsCCmD8nU9TEYcA8TXHvDOt1C4EmzmGdmjDRto5417M2yKpunH29udr9IHNIMRcE
      rjnwde7qQqUtdXEC8/3QhScsyhHdiBTMJo6WBWDD7U1QTpqmKgTz5s2b2NzcxHg8xvLycgm3
      X15eduL2OsM/SiSlxNvvfYh/87ev4so2ILF4hrwI7aYPC2CR8I/+Xd28Ltqy8LFeXEKjVnBb
      wlm7Wmh6Gyam3TZYQH3XIB2HrY1WfrKW6/AoKFGudg9VAPhCOVJmqYy3t7fx6aefYnNzEzs7
      OyoEc2NjA2fPnsWJEyesuL0QxZ29hw3l+ND2zi7+7G9ewHPv3kHCDLXG8EvNvbWAn5neB9XB
      GYugNmNxOldrIoIOYkyto4GclXbTspu826ZCuWn9ddRGCOjv3af9unV0kHlFbRFQBwYBcSin
      jtknSYLd3V3lpL19+zaklFhbW8PGxgYee+wxrK2tqasSOR013L4JSSkxHo9x8c338Cc/fws7
      8QhShuhkwEv60VOUyzEjtQkdr983ssanrUXTItros85F9M9m7Rzknu7rVHtJ0cIB3jmAjBXo
      7S1EANigHBtuP5lMFG7PQzA3Njbw4IMP4vTp084QTK7ZH0Uox4ekzG4K+99+/4/x+u0TsN3U
      1ZTaMLRFz58rjM9EXbW/XhmchREsas5I8+zqgLfRoewVDYJqZJk1OJNhoy4Q0KKfWSSZ5rmz
      AGiC2xOUc+vWLYXb7+3tYTgcKtz+kUceURek6GQKwTyOzJ4Tzdv+/j7iOMZ4FoOyd7Zh3EEQ
      VCyrxiGIWhy2qZ02/TO2pf1dwUxbt9CcaD0dqY1LFlwLjXfRvgq9Pu9oHkMa57q62z571Oio
      8avWAoCgmiRJnFAOT51AIZhnzpzBxsYG7r//fpw8edKI2x9nKMeHSEBOp1OMx2OkaVq6M7UL
      DNGGQZfK8jgxQ/367z4RKfqzjfvU4nn92bZRPvr4THVJHH2+1FW4ucJT9e+PG9UJ2M57SlXU
      T0RTX9RYAJDGOpvNKtr//v6+Yva3bt3CfD5XqRMeeeQRnD592gu3P0ohmH0TQT3j8VgJz671
      AeUF2oeG7tt2W4FjJFHUW/mq41poE1VjqsNUdpHrtE+fRNeIKl7HXbKTc46OmKbgLQBIY53P
      50iSBACwv7+Pt99+W52mXVlZwblz5/ClL30J3/jGN7C8vFyp57iEYPZNZBGNx2NMp9PKd/Sz
      yyzQO+IC1Nssd2jzrlC2PpiK6oPR5FicxuQaI32vM/0STHaAvPCzvj8Ok0r7r2ae20b/lNZQ
      i4iiRZGXACDmNZ/Plbb/zjvv4NKlS3j00Ufx1a9+Faurq58b3L4J0XxNp1Ps7+9XFpnJV9Kk
      bp0ISlo0nm3aLK5wUl7GRCZo6SDINT8mP4r6TJY/Pw501COcDov62CdUh5eTWvv+oCOaODkF
      ADGn2WymcP7bt2/jueeew/r6Op555hkMh0NV3oTbf5YXDpHtBaZpivl8jv39fXVHsIlJ0j/u
      A+hC3J/QdHGbmLpOFAXTFG6y+Q8Oa4202fSH0dc2bdrizFvV1aOV1ze17Zsu3PuCGPu+BGnR
      ZBUABPfEcQwgy6lz4cIF3LhxA9/61rewsbEBoEh//FnG7V1E1pFu3Ugpsb+/j/39/Up5Ux22
      74AqE9ctCCOT1gRKW2Zncu6Xksc5DrT4CB+f8M/juKYOI5qo1KZ0n/3wpbq1+Xkm2zs2KUVH
      df4qAsDk5L18+TJefvllPPTQQ3jmmWcUYxkMBpV8+J83ojTSZ8+exdLSEoBMWO7u7irhyUnH
      G7vOne15eo9doKA6CEcJA3cHgYZtm2Cy47bGbJu/LtJkEYyi7fwdBtM6cmG4HajJWA5rjZcE
      AEEW5OTd29vDCy+8ACklfvCDH2BlZQVCiAO95vAoUxzHWFpawvnz55EkSRbHPx5jZ2cHAErw
      GFDF+5vg/zYnJdVjIqqf7inoEnHkcgQ7n8sedj5rCi/8rDCBptSWAbpCNG2wnq/Fqde7yD3f
      Fyzn6mtfa6txPSxwQIdDXXtzkVFnETUQx7HCqdM0xVtvvYW3334bTz75JO677z7F7AeDgTp5
      +3knmgchBLa2ttT8EeON4xhhGPYu3U2wDJFtwZN/xiR0mjKdPjYQj4b7rDD7OkjA9ozPZ3Vz
      5HRYG8q6nPHH6X3U7auDHEvdvAJl/xn/vO55vR293rYUUYQKSaDNzU08//zzOHfuXMnJG0WR
      0vrvUsHkd3Z2sLe3V5HgXEh2ifTh7fmWM2nr3CnM+0pQEX3XtX2f/gGFMsR/cjqujKjvfnep
      y/d91jKtHhlOG1q0grJI+KXO+qoEheQ+NeMYWsCpdRTN53NEUYTZbIZXXnkFt27dwre+9S2c
      OXNGaY0HecftcSC6HJ7CYomI0ZOlZMt/1JS6RPHQ8+QPAKAsAQAVYXCQ5r3QftIC58z0qFAd
      E9I1uuMkwHS/1HEm25yHYWi9NKqXdg2RcXWk1kogEKBI4eLKNaV/U2d12JQ7+jsCgI8++ggX
      LlzAww8/jKeeekox+yiKPvdOXp1msxk2NzcrjJ2Yv5QSURR5LzZ6SWmaGlNi1JExSsfwvkyC
      qCkG7HreBmVw68ek6ZfKZw9Z+8TbPMgIoabMvK78UYItTG2TtWjzAxylUFjbXPExSJlF6pFC
      y/eCrmy0nXuKjGuyb1TbECp028Q3usw3f5bq5/syev755zGfz/GDH/wAJ06cAIC7Tl4DpWmq
      TvHyDa4vHLKWfCJo6DMhBFLpthR8F2jXxeLN/OEWPCbHVl3PXCGlh80UF1H2qJIu2Olv8mfp
      ZRZFrv1ig1Bo77kUHr4/+4a3fOrgfkHqqw7F+t4XoM9RBalhsJGOVgBA9Mgjjyi4566Tt0zk
      yJ1Op5hOp8WkRRHCMKwkw6O5szF/CYlABJUXkTF/s4lmrMfi8Gv6zkxmoffG1or1sl7qTITP
      ALVx+h0U2eBDYpikRR+U1cX7wH/3cbS38X9wprxI4sKnxPS5kGuwEfT+6hYOH5c+f9GpU6cU
      3HPXyZsRvZjJZILxeOzEFYMgwHQ6VSefabJNGnCSJBBh9SSwgEAY+p8Cdm0O/fvDIJsF1Ccd
      9hiJTA53F+lMRhcCh2FB+EQN+ZTrmz6rlpdNAPms6cp6g53587ZSac4zFgVBgKWlpbtwT05S
      SpW3x3SQy0RRFDlx09IGtzh4dInfBQds+6zvJqrDXQGzz8G37uOyDpsy/7pyh8XEjhrzPE4O
      9MOgkkD2nCbbjooIs/48E5lFlKZZj+6pI3LeEtOzO1cD0O1OJtyybb/LbRxOCgJaQ60ZP7JF
      elyYP9AP42w7XluI5nFjnDZI8y7VUyMLKf+pz+6B3Ql81IiYZxzHmM1mKuEdfdcXcadVaBG0
      pQ3gUWdt/yi4HovZUDZGQyfI79LiyRahc9zoqI3joPwATUkCnc4AWC2A1jUeQ6KXmiSJcuzq
      ME8bqMXH4eS/oCTiyS5FFdeYeJYvS4+Rbi39UthTP2lI+eOGIM/i/wIwsX5P4ClvMgPH6HcX
      +dRLwQ8iH3SRple6N5NxrFSn/o00/lrzof27ykf+a4bIdrCuGK6mbIjyeyy9V1ah5E+XusVA
      TVluoTpfovSj0hYEpGHyKR7GYldb/rS+RWdZ1Q6DV2xvwfXKpaWElABEgMHySUuttsYWI5DE
      ZDKRo1E/F5AfReKe7/l8jvFkjPlsXvGU2xxxrqgbE4zTxnHF297Z3cXO9k7+efa/7EcAIcp9
      1UPjSiSqcQRGQcXL5Yu+XCyLXpKphJQppGKmeXx1mgISCAKBNM0iRaRMM2ae5nNPzyOfH0mp
      KUKEYVD8zJ3qYRBkcFkuHErMm7efTUJJgFT/zsZNmtjC5AAAIABJREFU9YdhiDDIflcMkAlp
      HpbH//FQPZePRY8rt70fUznTd10c+/zwE8F01BfeJx4pYuuXSZGp+4zvB9t86p+Z6tHXu4pl
      NyhIag3kP8tjUCXKvxe/olBICuL7Ts0R/xui2KtCIMi/D1i5ICsACGAyneF//pOXMDh5Dl2o
      Fwjysy4AkiTBiy++iIcefiiP6Mmctvp20g+O2MgWCeH7PFHGPBNVZyDK8bsuJiOlVOcGZCqz
      k4Si/UltDlPZ+m7D9mnjrqysIAgDlQjPRtRPV5gr1etLLibp49+yjVtnlHp7+vO2cdUFWNja
      55/7BGkMBgMMBoPS3RM2fxavr4/T6nX9JuEThiHiOG7VpgQpGAVME4jyvSP6XNrmzeZ34GGZ
      um/OVDevSykHohBSAFQfpcxDaQOBv/v5C/jlxwCC6hW53vPR0AdgWj2fWe8vHdza2dnBRx99
      hDiO84WDTuaUi0nqC99F5Y1RfQ0mTa30PTKmH0URwqDbuQ3OwFz9tX4ugOlsiiisPzVuO/DG
      mURT6qoH6XOtX2aka6qV9mvWU0V45ye/6R/XdvnfdWtAbyNJEuzv76vb+yaTSe/MvS3xuTP1
      qW6cUkqkSdn6CoPQvGZEdT2Z5li3PEyCHShuNRwMBlYhQOV4gkgqm6SF0CJl7Tu//jjujW6h
      y+rtw7/3mfAB8JdIB7dMmo+uLeh1dDGpKqde2SKg+nWiBdy0bVrcRBLZ5vBhFDZq04eivFCa
      We1zjstj2vQDAAKNedQJad6e3r7reZc10GXu69ps+jx/F3WCva6NNnuibp5s5Wut70AgQoQk
      TXOYsGox8ytR9fZtdbsshDRNMY/nGEQDTGfZYdAojCrlSvWhGE+gKXdhkEUMrqys4D/54Xfx
      L/7Vs5hjgOjMV1rPtc81lLY3fKwFADH++XxeieQh4maYK9eOrxbn+5JMkIDpWVt/XRCQ/reU
      uWYtCyHXJ5n6UhYAUAu9dh4DM67NzfqmlMoUoQgrc26zbGwaHH+Gf9+EmRr7ZzjtaaKmFpiL
      oTUV5jYyacU+AoWX43U0yXuv12nNkonivVEkmr7X9T7RZy6SMoNapZSYzooUMKmUGDjyfQkh
      EIpQCQJbO2fOnMF/9V/8Uzz30kU8+/oeRkvLzv7YqEkeIp2OHQREL5li9u/cuYPt7W2Mx2Oj
      Y2kR5KPt1WGRpjrq6uVmMh+jADL4BW4Tus181M1l9nnm4NUtE1t52lSVz1vCFYEIECfVaC6T
      VumyEnQIzweS0i08m/ZbN75ayE/7vgnEaOu3DYrS6yFK01TBGXUWixMy7EBCCESGVDVK0csD
      CUzP6U5wWxmdlOCQQM5pay1eIYQ1pQ5BSpQA8teeeBRytlcz8nryXRucjoUFwM2xyWSC2Wym
      HElCVPPbdyGbBm7a4DqDaaLh2SwDH0ZtK0Naj659dYEW6voQJzGEyHJI8XslrM+l0m6PdiDK
      seSylPhnulZvY+Cud+HDMF3WRh35KAR1sIauLNSV0/tZal9k7y8LXsgiX0IRlsqSYKHgUB6c
      YGPMpj60oSRNFMTShXg/wiDP7SUz6zUU9kObpjl0IQdU/sTKCu5dC3G7c8/Ldetk6sORFwBp
      muL27duYzWaYz+cq/w5gNt91qltQPHqnKcxjq68u9bK+wXQtsgvpAsn0vb7RmjKm0rPINJ0T
      Kycwm8/qTwQvgPlLmDe/bX0YoTiC0FrAZ200L5/6fMpxKo1PMOgpn3SCR/j+cVlHusUZiACp
      yJQuPtd6f231m4SQSdi4BJWL+Q6igXFempIOFwUigAgKIWabdz5Xtv6bSEqJB+45ga3rB58G
      5UgKAFoo0+lUXbxCZMu2aaM6DYra4+12IZsQ6sJweb1SZhoYYe6mxRgnsdPn0WSB1mplOfYo
      kWWNXD2xqs5b1I5Jc161mRchBGSaKod6XXtJkiiGWNbSBJI0RirTUjSTVRtmn3EGaLJCVPsO
      wayX4/X4wD18fXANHICC3JQlnaQIwyIUmkMjdXsgCiPnPLssKCml9bS4Pjcu+LTO6umD+Nzr
      abB9rMwm+11KiXtOjRB/vIfBaKVr161k4hWHKgBM2gHPuy+lVNE8BDOYtAoTmZg7bQwyS5sy
      fL1OXeK7Nr+uVfgSjxLic5RCIghEyQQvlUP5FrAuVHfGYfXEKiCB3d1d7/lMZVo6PixEditS
      k/7yTeqjNZOPhB+OIhNf5uGpaZoiQVLSYl3vlMgGGTYdiw2KMpEO7ZByYLIChRDF+GWq8i6Z
      5s4meNpYOaVoNZldlqSfA9D724cl3pX0+fAddxtlT0qJJ594HP/fC38BOVyCSOeIJ3vA6CTm
      8xjLy+2cw3UkhDgcAaCYWL4R5/M54jguXUxPRKcZ+UUrdcybM2Z6AalMlaNQBrnDssXhKZMJ
      a4NxTKZ0UzK1R2FoUivHy6YyRZqk+claOzSia5u2PpgYnJQSy0vL1puMmlCaphCB/xzx+Wwy
      r1JKDKIB5vG8Ilj7guLq1qWNTEqLT71Epnh2XhdZSVFQ3vZ1Vo7r8yZEc0z+IlfdNq2fC4o+
      BISPZeFLTZk/H8NwOMR3v34G89kOdu9s4of/6If48U+fw9vXp0gxAkQz5MOXDlwAELRDsfpk
      EtoGF4YhoihyluGkaxBqwaD4TMUKB+7FXrcBfV9IF8bigmsEK6OsA4sp7drkElCaGRFFKugx
      5RDAcDBEmmvNQgjs7u6i62lyPV66jvRx8VBLJ5OF+fa1QAQIo7CiODTR/JqUt9VRt1bIiuUw
      FrUZBAFiBrHozMiEX3dl7L5WLfUlSZKSVWDLX6/3zwYJdWGKfVsbtr77UJqm+OEPfku9oziO
      8U//8X+Aq1ev4sWXL+LFTyRmYrl3a+DABAAx/vF4jDiOO2eONOFZrnIShaOIIlfaQDI6SVm+
      hs2VMsGXXAJI73NJgwGQpknle/0KvFK9QiAIhDrsIgIBmWamepIkJfwzCANMpzMkyVhBcpPp
      RJn2XYj62bWOOkuG/CIJyrdb2eAQV12mvwlvb2pd8vdD4ZaUD0mdscjz1KQshcggKp9ODYRA
      nAJCFLBPFEUKFqxLxaGPzaQhGxUsw340aetN95xLsHLru25/2QRJXZm21MSSVWsnR0WIkiTB
      +fPn8R/97hfw7c0t/Is/eg5CrPRqCSxUAEiZOX0odJPH6bepi//0ld5FeaiUCTaHoW+dOuzD
      KU1TpFIiMjhgm9RNv9vgF16fEmbITxeHQRZuCYBHg5j6OhgW5vh8PlfQ2Gw2U47EcnqCog+z
      2UzVNZvNcPLkSUwnU8zmMxwGEfMkDZ87c00MSLAcLXX1Epk2dskCS1NAAGFUff9kQdGBplSm
      KnyVmHOSJsoSEyKffzDrBtn6zSy9qrUgAoFIhCWLyiTofMbrGqtPWb0MkQ7z+lIfylqX773a
      ABrda2HjI3zvJ0mCe86u44ePb+CvLnyKZHiqs8JF1LsAoE7PZjNMJhO1mG3mrUmK6xpDVzNP
      1ZlvGNKIeJ9Nz/lqFZwk25iu8j5jsmGKTlgoZ+DI+Y8JFyYtNQyjEhOncolsbp2NJ2MMkgGW
      89OMTYUAWVE+c27bXHESQ8pCSFFoqAnOEbnlo681Xs609vS6pCwcr0XqbHugQhJnfcr6mqUV
      oKSAyBR+Y3tSQgkKynCqR4Kp8Vl4j691Y9qP+pj52OIkQUBhkg7Lh+91/WcbasIb6pTEPpg/
      Cf8gCCtzZ+qLzzwRJUmC3/j2U3jwwZv4X//flzDDyV6EQK8CgKTV/v6+kbEQ2cwxWhAus1N/
      zqdPAJTmZGMGtgVvEkqmNqjvrjBVH/OX12WrxzQG/TuqiyiVUkEHVC4QAkmP5uR8PsdgMCgY
      midxmA4oa9TEUPVx6dYanze9Xv13oLAGTUqJqbyJaL0ra4v6pvmWePhpFp1VKAncH5FZBfTu
      y+1QnyT1HdWYdF8G34T4vJos5GzNB7mAShGnmTAwCQKd0Zr8TK5+uP7uQn3VFYTlG/9svEu3
      RoUocmm50tUIIXDxwitIJ7cRnV7vpc+9CQApJfb39zGZTLxelonBcVjGpHW4GCKfzDqT3dR3
      mxZoakffFPo4bW32obG4tAabFQUgz00eZCGADgHSlfb39zEcDjNm5pnagZflMezk6KQ+B0FQ
      cuYD5TEELKQzDMJabZSIIqaEEFkkEorwWtvzqZSI47lxvmk8XHtXc67U8/y7XHiIQOS4f85o
      QZg/+ZiCDFoIREUgUvt9vs86K5P/BChNRJZtN01TICifErZRlOfU4e3aLN22jNplOfdJJOBN
      TJ7INia+L238az6f4/0rtyBOP9A5Ay5RZwEgZRbGube3V3Hs+jA8k1asbyqTdqY/o8cb60QM
      xNS+6aWY+rWIhaTgGM8j7K6NycuY5iwIAsg009SEEFaooCvNZjMMB0PM0mYwEMF0FPpLq5zg
      Dj1SSN8oochi/BOJ0kEomRUuvdPynGVzQWcTwjzM1iXIkziuaOm6UDHt0srmFvn7SqsKCEFJ
      QohK9kt93mx7yDUOE+mOSF6Hff6yv6MwKmAQj6guXl8YhhgOhyrPl20MTfcenxudn/RtRRAE
      SRYQ7zfvj/4c97HxE+06vwqCAA/eewprkx1cvCawvLpWqbfpmFoJgNlshu3tbaRpWpHg1Al9
      kl0dK2tLmjltMXF94BTdRPZ5Rh+H/qxukZjM4ib1p0n5cFrTfvmWl7J8Ac1gMECaLC5XfFMf
      AJ1upjMOYRCW86g7mLG+RtQ5CUmhsanaVCZLLxACkjEJn4R2QgjA8z3Qu6X5D3NGSVo+kFkv
      3HmYhXPS2Mw5ZurWS51Fqpd1neWo2zu8Xy4Yw1QvlZ9OpxgOh6U6u+6xurb7pDAMK6fMdTJa
      A/k7BjJe6Lrf45lnnoGUEud+9hJ+9t4EQTgo19WQvAUALZCdnR3s7u6WErHxOP0mjF8nlxAw
      4Wguc9HWny7kEgJtiDaLbGDQmaAz19g4E0SewGs4HFpvijoMKsEcBo2JQh1dz/PynGjcvKzM
      P+FzWfIJUBlNcyyelwqucZlRJHSonkAEQJBp82EuZJI0QcIuOiGfAF0nmO27BAHLQd+E+dPv
      pvJ8H3ElLpUyv8KwaK8p+TLs2WyWCUcNPaBT/7ROfdAEWx9cn/W1B7jFxs9p1D4jBISUCIMg
      u7SqhhdQUM2DXziNn196FwhPd+q3twBI0xSbm5uYTCalBUgJ2oAy0z8o5uLLGPS/u/avL7yV
      Fk7TZ5r0n2Am0m4p9PCoUBCEKmyWm+lhEObaUTNKZao0qSRJETHHPH3HcyXZYDXdsig0ZDvj
      lzJj3oQF8zpsiQdVeV5PHu0jJRDldxlTP+rIBmmayinrMElyoZd/LgRIUlI4rU/bJqHp6qde
      ZjqdZtZpDkWFYdhKWXH1lz433QveB+/yPdVOh+LU2oIbCuZzOxoOIdO4M4pbKwCklNjb21OQ
      j8sU7zJ5TZ710S5sWGXXl6trm13q42l1TY69Pojwc9IswzDEZDrpvZ22ZMK3dbzZxtBs0BnN
      pT0aSSimFwSBgp905kXvB/nGVJZU5lSAWQhkh7UksnBafnuUPgYgE37Ix6IYkgSkAIREZi00
      YP56/VrPyifiSTFA5vwO2LzR81EQNbqq0/QefZ8hS2Q6naorGG1nBmzYus6HTJBLHZTVZU9n
      69nTn4cs6itAjv2HkbrdzlW/EAIff/wxZNz9vI1TAEgpcefOHezt7ZUa5xOsThkuUOvnE0JC
      yPWimn7v22+bptiW6OBPmsrO9/rWkoDSpo4S8Y3rI9iJcWXMUiDjn1U/QCjCDFYQ1bqCoNDm
      ZSJBd8jy+oFCQwwZE687wa6ECARMdz3rFLJkf3TgC8isCH6hiK/mr8M5nNFTumuZtwtZ9r+l
      Ms0PxhV1pjJFiHZr02Z1EJnGpiC5/PJ4+t619zgUq68hmos6v06fPgbdwrC1nWn+CQQ5fT2t
      LAC4du0azpw+hTsd3XhWAZAkCba2thTkY6IgCCqHqhZJnGHbHEO66acOQuUmNp/krtK+q9Aj
      bYHG45vPxqdNwr6JkUQisl7IfpBUYdQqdLPQznSojvc7EPy+hSzywqZlu5yRGbyEEvyWCQyo
      OP1iIycQQOnWMedGlbDeBlUpmo91rpgdwK/388X7Xcy/6DQUzEBwIIcHi7FlhaWUjbR/Ph7V
      H5lm+Zfy/FtAmTHydU/jBbJ3QbxFCFE5V6SPnT9vUgBda0wXJHXkq6jUUSACSAHEaaJ8Qj6U
      pimeeuopvPbnzwNrJ51l9Xerk3HnzOdzbG5uIo5jJ/MfDofGia7D3nhZF9W9GJPmYCszGo4g
      hMBkcnjwB22GygIShTPQdN0dJ5+FVWhEQBBGEAK95F9qQ2pDQiiMmX+nrx0T8fcvhTlsuAlE
      wQVuirQUv00R+GUlQgIyg4vSJCWgXN2BkJVJa61OExVCRY8Xt8+Dvu45s836V56XrE8FlKWe
      FzQfRR+LS9UDyDxVhYsqwprCSEW5b0DBmJVFIgCZZt/zewaoz8T0h8Nh6aIll++GE38fLiti
      oZY37Osz+yxL4dI0d9R4PMYgDOBjz7v2R0UAxHGMzc3NElSgY7Kj0agCBXHT3KaR8WdMHdIT
      aelt2Aala5X8d/p7MBggirJFtr+/b+ybbrqZiDa6SXupIyklkjSt5AkiLdRlAjaFq9JUIggA
      KVPMZocL++gO1xLT0KIeTOOUsh4CqdQpLZtblp10MmfkUsr8FDcgK6kwJCACJEkKQCKAyDF6
      E1PJNrW+Pk39T1jMvf69YEy8Oh/VYAv1uyZgAagDdAkTUuR0zOa2/EzmJC+sGFPfK5q+ui84
      my89xxKlilAMOXek0+l08tfocImUha+GIg6pTBzH3vvBzYSbUV2blTXOhFCVsvXSlM6cOYOk
      h5xbJU6dpim2trZKmiJNHIVl0WdGhiSLH/pQfbR/Mr0lmuUKcQkVzmCEEBiNRgoLT5IE09m0
      8oyrTVp0NCc+ycSoj2maZneqCkCIoGT2RWGk8ve46vClKMzi6AeR3ZF2UETvwEfb55SkidLI
      zQ5XKleOqRf5wS5IVHwr5AiVrE61dmSRaZMoEAESmTF+xTwNB+kKZp/1IJUphKymYC60dVnJ
      3FoimVkHUTTIhuJjKZnuW5bIE8elpYNlpH3zOgkWA8qOeR0u4Zo9MehC6ObjL8GZxSE+EhI0
      fdnhRFnigbpwmc/nGA6HyhLgkYe2K1grcyNlRbj0pfnb5kn/zERZhFpzmO3s2bOIAok6EVDH
      P5UAkDJz+JLZRQ9GUVSJ86fTanrFQmTON9dQnJ2xYLbUF34hjH+dhYzb39/H8vIyBoOBijDg
      Pg7S7peXlzGZTCpRT6QlcudUYxIZvilEikAMvOvwEYSmsk3z8vRNJPjmkp/uFH4OLwmkqId3
      CkSj3kpQSkYqS+tKacsiKIVwZsw+U06E8HfGciuRf545/dOK5q0/n40nAKREwqAdWpMRO61M
      WrsQArpFlUuPkiavGHZpDgN1JoXfmFfqj2DOc1kcHKPMpDrkQs+GQYAkzYQoCQmqKwxDiLB+
      LfA9x616IDtL0NRCNvGQJgqWrU7dB9OmL77PhEH3+iMgi73d3t6uOFp05g8QVp0UGoNnQ10n
      2AT38O9sdfNsmOPJGJPpBCdOnMhS6lLeGe1RGje/IIXa0f+ZtCMb0XdBEDqP9tuoiRAgSuIs
      p/9h4P9EuvYqpYQI3YoCRJZcS0Co+xv0OklrN1VEaEgqUwQo8unrWLsSAqShyjSPy2ft5KG6
      deNTaxRCxc5zuAXgF9c4hp6PS8oU8zgtfaYYKzJhFuVpM7iDmvebrGk6/5F3EDLNxqzuA7ak
      L+Dvjp8ULjN+qtS0RskakwoeojxNgD0LrM2qp885r6K9ysubEYYigpCXacqoTX01/W561vZd
      k30dhiFu376NQRhg0oIncIpMjJ9rMPrgOEPVJ1QnNcGgTeTP8Hi99RqgvW7SEuhgkJQSe7t7
      2cXpzIHHI0YmkwmiKFL58fW2TDeU+YyN7iFoI/H5PbY+RKY3abOHTeW5ggp/05lxCWZEdn0g
      5tXwy0wDsmNmpHGSoxeoZgDlbZVSRwuo6FEX/s3XZxkJzaKTRFrFvb3fobBbNFLKioAo5rfs
      dxAQlXHT37QnhbBn7+S/l5l/rtFrfdbHGVDdYSYgKCuqPn96e3wMdZSmKUajUeaHyKOHgOq9
      Azqk3GRfmBQ+neqYP7/fW/++SV9u3ryJ3/+DP8bO6MHOezsyMX+CfmyTryCTPErAtFBpkaj6
      LI5hFxk1ANRvJv6iiXHQScdiDEHJnA1koYnM4zmms6mKiLAldqLPfPA+IepzpJie5/BUKtNS
      tEQ99ikRhQOjn+OwiTTIAGXLSqcwDJFOzeO0rU+6rlIvS3BPkqQlDZwYOIWBSlnG932oWp/2
      LiWMEUxtidY1Jc6zpYamvaCvUS48qZxt/XLoNzOYa5iOAAIE6lxB9lFhjej/jFU0mCc6PCZE
      5peL47jkszSNpSnZ9mZZiUghmTLZBB1oQqurqxiH65DDtfrCNaS8IhzTU4MxSKoojEr/SKs1
      abbcEZQ2HDzvS9kMrVohNvMRKDBwSr6lBk5mcf6vlJc9lSo8LUkSxEmcQV9aW74ainOceRtZ
      /QU2a9K+OPZax/wLLfHwtX8TZXhpovLf67ADMWva1I3qRsbglKbLGJxKwlZZ2/mDEoDnnJnW
      p+l71ak+SRTwSRgWliVZ7vrvQKGEUHmbNaqvNwXHoCoYTeWCIABE5n/jkURBfqq5Yum1ZMqm
      fpM/wMYT6toxzUcq05wHVPc/rz9l+1cXxrxcpX5LJJiJpJQYjUb4vd/9Lub7t2vL2+qgfii1
      vKQhiMy8bOqd1qUcaRlpjqs26SBFC0Shfn2jVLlc6uoAUGS8NLQfiGyhzpMYoeb4CoIAAQKW
      9MsMW7ShDN7Iwz6ROTplWnSRm6iFtWUBuw11Z33Nr0bsm/H0SNl8p5AIFJqgNNScUe3u7ZYf
      yqfB9f5L5roGR6usoDDfV1CKJEIVNij6XT1YZNv0fRG1wQWbrxLiglNNzNHIQFH1+8ncoa6S
      DWYflpzUnExRc4tQUihc1HaATCfXHKrQbwNEptYC6IKbUOkRtrMh+topQ4nVudAhqyRJ8KUv
      nMe/98hl/Pz9GaLBsPKMiUz9KOEySgik3aUyH1gA/1NuQB4LnDMH/cUQptmkH0AeFhlXHWVA
      cSzeRLytFNl9v4K9vDZEOWaC3FTkWSNJu+eJw/LeeqWLUJqulBhEAyTx4UYB+VCaSvBLtEgB
      IOiKM9fMae8P0eiYfyql830XzDxQYZr0N6gHpBF7amxUbyfKHaw8kZ+N+duYi/69zvhN0UG8
      PFfESkpZUFyHqOP7nHxw9D5IyuxyKhIC5BMgYWAU/C37pOYwJTicKWEyrVyKY+OrLuavC2bi
      EU//5lO4dPmvsZVGmpLsT+2e0jpoIm728X8+lGk5QelSb9VhZrraNCDenhIAhogm1R7Y6UQH
      ZYw6v/ihxeENXg/lgKHoDe5X4X1RsIUwhPhppBYjZHZNH+Shh4H6UZkhpTKtHESk78M8c6jP
      WtK1ZeThp8S87Uy5KC/J8pISLubv2thNmb9eDWmYJBiR9cTaB70vJriFmEiJuVjWlxCZw5hH
      7uhEvrI2460oeaJ8J4MNvqlTUsnaIFioLZPkUUum9pMkqabgyJU41541QWG146JnMkmD7zxy
      FphXD7ba2tOpMirFtIWZYbtMSF2y2rSAJp10TUbTxbaysmIvL+r7JiWFzpnv/W1ijvOyhP8D
      2WIbRIPC0SvZpeMeRAtuNBx5MLrDJ2IuAJRANDNYtGIwqcywawq9TdKkFJxQbkNCxakjtwzZ
      Sc3smcXAOwBKkXIFM8i/E+V1w4MqaO/Z9gr/nhg/X3NefQtESTmhd2WzGkxk4hHZ2Mzh1ZRZ
      IGHCivrP/+mMk5cFMo1/NpupDKMmgeN6p/r3/G+CWnm/qe9JYs/t5WrTJsgBqMNz5HtdXVnC
      F4dbQOX0un0snIyhOUKIRjfOu3Ar08D17wj6cFFdyGkdTadTJEmC5eVl7O3tVfocBVFl89ko
      73VlHDaty0Z8kwdsLvh3Kb8Vqwb3UBABilw3R5X5C1IyPOcckBDMoktldqqax6+biC5WUXBk
      nho7kXn+e1lkyJSyONEqUcS5U3us915jbAr/FGdSpII6CVung2hA9fpT29yZ4t6JMVIKbEpv
      TekibMxc13ALqxkQLL2JCXKqjFMT8Hr/FQPPb8tTOYCCsOK7ccFK/BwPWQIEC3EB4eoLfcbD
      sDlvJGGsj5fm3gTb8vfRZn/y5x999FFIKfFnf38Rs7WHqn1Xh+/KAow+r3B5KaW61Jubu1y6
      9UVUN5fgdQuHBtCUkiRR943WMWdfQeBayD5YZxWisPfF1+8RBAGCMMA0xzv7fF99UhYfbrEQ
      FeqinS4Fn+vCASlNKZ+1uHZuRQUiyC5hz3P7EHPnbVGYJWeKLo3NRD4WZaWchIq2yQIQsqRs
      NCkcNgRQG15t1CLzdZemaZEOW1aZP1/fvI+UijuXrUCu8ZouGiJtmGSbEFDlTMyb91dXDKWU
      lYtWCIIRgTBaUHrfs1P4BTxNVoRpD1Id+oU0PJxbF7DF/JTJBs2ZMqH6EtX3ta99Dd8fT/Fn
      r+5jMBxphWwPZz8quYDa4mQ68UMP+sB4JIBLe+mbhHCnldXLmj73JV9hWTvfEhB5tFKdBQBk
      /R5EA8h0hlQtMPdJVmvTlk3UlYjJ87jwEhOgaBMJZV7zO331udXXkoBQeZV4eWL0URgVc6k5
      n43ameTOYbegpvLE7JpPTvVPyeqvtGNQQurelbKGckhMSJGfndD77DFW5O8RVeZJlkbpGSkg
      AxY9I6WRidIz+t3QOk8RIrNEkKB0stlUF30mpazkENIFj670mhQ9IfIrXdn645aCnlLDNI+m
      dewqY6IwDLF+eg1heguIU8znMQbL7jTRRF5ZPrT+AAAgAElEQVQ4j8/Ct3XSBQXRTz5xiyZX
      f/UFo5eNk7iaXMzC6PsaC0VE2bY0xVYD5RzqABQTFUFz6y0rK1RSub4o07xC5Ywt2mJl8v+C
      MECI4qCTlEUuHWIOqg7IQgPl7w5l+IY06Aw2qrbLBRPvs6mfNEfZXcZ8LSi2XTsXen3ltkTp
      kpg6Im3YdRcBMVNi9kqwQZbeSV5jxrDRTJipEOScSsw3t9p0H4apvzpDtQlhstKy+v0AOhd0
      pPOskhUqhApQIAFQGns+xsyKsysNTRSqOuRDSokHH3gA3//adUwmYzz62GP4w795DTdnyxiN
      RsZniCLeAIBK2l7d9NMvcyhJYiZRmxxuoPbUxracmKU+1Z2o1Z+x1VMnDPS+08aiRGJAlnKg
      yU0+vv3UXzoxetrgtNkpOyKRbuGouRL2MD8TtTm57UPkvAIMwlMgz1BZ3jgqXwyYYEM2Nyoq
      Rpa/S5RZzzcwMebCsuDE54YYpGvzCZHhvyq9gSrf/cRv1me38qWYnpRWS6aoqxC2lTpzi4wu
      gxeBUNaFKdsm+SVoLnWFiJg/bzMMQiXMqE6b5s/7LQIBMP1DBQygvG4CEeTwWZVM85ckCQaD
      gVKaXBlzh8Ohyh5sGi/9y6KBCuiQIE7im2FYXvtUl2nsxGvokGgWyFC2KEq8Wab43ve+o7Kr
      /pf/7Iv45//y/8Fm/AUEkUEIZIs7iwLig+CQhG6+0Qvh3eXe+Gob1TBNkwmftZVHJhhuKKLI
      A12z6INM2B/1k1slZNINB0MINke+Sd1MY9bnQv+bcEoSrtSf2WyGeTw3JqyzjZG3WScDTCdo
      F0G6WU74t34JOs0B3SsQGsJAqb8U3ZLm/yh8kcJHM8eqJcKitF61TUYwEJufIP+p+iPt64nq
      qJv7shVaWCXZd1VGSSfUyccFUYRe8/HQfBmdkshv96MTwjmUQkwoDLM00bn+nllwufOdsgGk
      Mtu/cUJ3AmjYe255UOoY2u9k1c3jOebxXEUWqaimNE9qxwSX0A6TkTVos3xs65e3Q/Xwfypi
      KmGBGBpP48yf+2b4iWeKPCvNOeOpptPao9EIq6urzA9UjIH4YHlcQvk4qT//+T/59xHv3cJ8
      OkYyG0PEE6SzvdziyyiiRmmApGFmR+bLgw2CAEiBBuewjKQz+GziKLsjM6FQZsTD4RBRGDlv
      KtPJZX41YWw0R9PpFEtLS5jN55Cefgqd2fi0TwtBnULMNX1+hd9Mzmrngb+/MAwhUlHk2SfG
      ov4vEOhOth60WRdRmJ9qQhTanYmZBnDnf68zt4MgwECISvZMIrIUKsIaBSPKlF8BmaZIaC3X
      zFHp/ftg6yRMAqGikUKeskQS9JH9wQWkya9ktGRyo0jkd1PrwsGk/Ys8ckvK7AS7yruk6qL2
      6Pd8tKI8xizqqOgbrWmaXyklQhEWETu5xWaEijXB6LteeZgot0p4n4iZ6gKAvuPzwyPwOI8T
      ohzBZ9r/XFCPRiMMh0NV5zyZs7DwtAh+QBkN4XMohMBwNMI//s4DWF8/jRvXr+Pjjz7EuXvO
      42fv3gKWz2YWLDVOAyLmmsrUGsLkYlz0skyhUfqg1Wda/fpkEWxwau0UAGB7e9vaPp+IJlRn
      ivIFMJlMsLKygjiOlQZeNyemvumaOd+4hOXzU4xCiOxUdUApFKrOt7rx5X8BQEnzoEXFIzSy
      kvUH0LxJmoUhwQ48isP2/rpaI3X1q45q5aUk7ZfWZ55mQ+Rhi/lzPqG6dURroYgAyojf80xR
      QlQnxYbb9pxx3sjCgKy9eCarN1t3CYOmeJABh+GkyPwMYVDE9PP+BeAX/rjnh3hClosnrfAI
      Cg3lbTTZ/wQHuc4U2LR/zht0WJyIQ5b8OX2MS0tLivHHcYzpdFqC01IUwpZCYunZ7GBpuX9L
      oxF+/cnHEScxHnzgPjz1609iNBphZfVXeP/aNk4sD8xhoAQvpGkKkZYrNZk/9HkQBJjNZ9mi
      sFgJXNgUTAYq0kEP3+PliCG6hBCX3K5FYGPCNunMpX0QBJhMJhgMBxgtLWE2nVaecZG+oKgN
      jvHx8DTdRM3+aJ4OA0DOxAJ1ErnE6IPipGkYht7Cxb8jUJgmfRDmpyXTJO+XYZPom7IrUVIv
      34OO/HNdg+YhpGYE2l2vjTL4I1HObShBnDHWID8pT9gyXxt6dIuxP8gvuwlyCMsw1yrpYh7W
      JEuCMXOi80gXEWTnFQgm430QsswY0zQt1Vneh9lMxkkCIVhfHYydMo/STWwmZu0i2mu6xcPT
      kOvav+7L0tvkz+lUsTDz5+M4xng8LniNCJCALBCzVUECNvvDDPmSojqZTvDUr30DTyFfQ0Z4
      QmZOwFSkJbPIRVJKrKysINlNSlJTpzrprFsDvG/z+Vwd5LBdcGLTYEzkelFGk1nr/3w2Rxhm
      ucjbXjYvhMBwOMxwfS3emLddZ3n5tAMUjJ0vZKpXXVof+G2adh0pfpUyRZLao6h439oyf+5A
      IwqEQAr2jnMHLm+bzHlTv0hzlqIMVQrKBQNpXT8+VLxrkTM/qou9k7wPOgRAp2dd50aUgz8F
      wjAqMX8JQNJBLANuzQ9j8WtN4yQurpjU3pNpzxOzNilrQhQH9gAPGFISXOXhZLFVIcsOb0JD
      eP/VPmEOXa6o9RFCP5vNKgfYlIosi9BdSs2t6xwSVWFLgo0+i+MsCk6msioAgCI2vYkpFQ0i
      JdWdDN7QHs+14WJ0pqsY65hCnaUAmGPxdY3PJtnJSeSKJLAJGhqrnkvENQ5dC+H16WM1WWum
      U7N0eQq3QgAgkYnyBdUZA6X+MY2NvtMtGX1e6EpCodVp0sqaEEE35ExUWlv2ZdYHUf5bCPOh
      KCJ1vaFGgv4nBcIwcwpTkrS6Ppr2TBCIXBsuhGDW9+Kei0pIrUWglvqZt8VhWmJ4FeElkTtd
      i/cpYD7hSt/VEa2zQAbKB0T1R2GUCSFZ8JLi/WeMULfCyI8RBFUB4Ks0kNJK9wmQMqbzGill
      EQ1IkFeYBRZQFFUd+sCJIvsGgwGiKDKeUwp1/iRIxkoECEoCkpz4pT6jyhcgcgtAZ7hhGJYu
      gzFtXIWP5RL8xIkTCESAvf39/HN7XK/VJPVg6qb85bxvNk2yDdW9QD4WyjNSVxfNV4ByOFea
      phgOh5hOp6VnXKajLuFNfdYFhan/XMMmvF9nzNl39nlQpi89HwiEMqxokLQwi88z7FiI7Hi9
      T8pwWne6Vl/3DJBr5gkFGWRjoyZDTftzKzGGLLUkNCRUpAs/tao0anoVovys7nDlWptrCeu9
      JKbtS/o6IKYriZeKnBnnZRNZwHf8Du8mGXp1KzcQAqnMtdMkyTwsUqpIo+IshNmPUdzkVt0T
      TYjmgRQyEw+UUqo0Gvz7IH//Cd0d7SkIh8Ohams8Hhuj+nRekP2NHG6rIh4mwcWFd8nXSBVS
      QYJYbI1zoiP108kUEAJxPM8/r+K4rknwZdI2SMn0HW0gHybRJs9QZVEkifH5EsRCiaO0S7DV
      Hcv5hfO65l7XB5Nm3cRKErlGITWbMhABpJBIErrEvPyulKMyzSMTUGYi9KcaS16/LRRRJ9po
      RBm8kePgkHCdkSKBBsHnQxRx2nn7YRDmTKe62VU9zOriz9qIoprCXMPWM7xm4y3vkSzCiM2H
      4O2QBcUH6FIS7Kf6bftNiCLqLFuLgYKTdOaTrbkUcZL1yydNebWPxd4p31uRa9IseZ++F/T+
      VyEkP0VCHxNBO6ZMtHQp0TyeZ/OLzNdQCuGEyASkLA6m2fgT7dvxeAwA6oCjbWz8XA4dgNQ1
      +yAIVXoT04FVAKVQ2TAMq/cB0HVq+gToE6YPSDHRbMd5bRaThLURYXSmvpj6qi8KWtz6GHQN
      qI0QUBq+cppl/+e5USjLJQDlqOLtpWmKwWBQ0cp9ICxXn3zggFCEIIecTFPEUhbnG2S5LIAi
      lj5NQZfnlgQiXI74bHMXlZrvO6YNmaK4/IcwZspjw0Nis3/kGyrCIrm1WnCZgrFmDKY8r8Xv
      mZVAk2DTrjkTz6CvINcCM4rCCDKU6uJymUlbVWcgAuXw1N8d32ulfSKgfDXl2ZWln2qaLYxI
      /4zaSJJEWVqsZLZO1By5E/GZ5sl0qtzEwCuWCcx8Qp+fOiWRW3kU+gpkShjxviiKSj5Gum94
      HjPBgAJGqfQH9lPu+me0NkmBzNZcAfGotrS5EiKzmlU4swQk0sJaQ+Gf4hFD6jxIGOLFF1+s
      RgHFcZydNM1xRrrWzTYYPvAmZmBdfXrd/MWSuWxi3DZmLqXE8vIyJpOJUYA0FQI2BkwbBygw
      Vl5v9nsZP6Tv9DS2rrZ9+teE+OYIYMExScGXGdaZCLAFK/M02XQo0G5R0d27WTbQHBaChJCF
      ryDTiPJ5C2Qp5UWa5tErIlRMlcIZM825UBRU9Ahp+CjSnGeposuRPFRX5mAtICulCetTwhi6
      CDNNjeLxRRAgTZI8MV9+wb0EZvM8pDfgkJiElEIdwnKl3+BKQxBqDFgWe9HE9H0t3SiKDAIg
      o0Da78jW2+FrWteK9fGoIeTKXpzEFf+TumUwLe5Bdgk3/XOuIPEIJjpVH8cxlpeXsbu7q96R
      lEWa8oKxAya7NQtXLYe31im4AoXvI+EH6XLvD1d8SWjpgkf9HRTWCG+fAj+EyMLY33//fUwm
      k6oAECLLdRHmcei+MIqPFu9ThpfVf1fanMYgdYlKz/A6yFtPp2dtVgS10cajr15UAlohJU0m
      w98Kpx0dMe+D9PHqGohp06kFLQr/BL90nihLyFXkPaebjihShvwGURgiTbNDVk4ek8MbVE8Y
      Rhk0o73nMAyMDCgTQIGqi2v6RVpjIEmrZzSykNPy+iFBHSBArJ4pLssgKMxG2XwJjPJMjPN4
      jnSeKsFBFM9jDIfD3AIqHNz8IBJEFu9eYPHlWHPSEgtYqMxQKZSWrweT1mwifa3ot1np5OOc
      FyKDQ1xhnPQ+VRSaEEWkFooDeGr8kE7mT/AI4d2mjJvE3OM4VsJ9OBxiaWkJu7u7yhKgIA9I
      KL9O1kaRatww6qwMpIrIcgmnQlCSRZuPA2WokE5O077hwoigskE0MFof6t0GAr/4xS/w+OOP
      47HHHiuigHRmGQGVCfZh8PxnUy1UnxQ+EJqk8XisMPPSwDz6N51OMRqNsLS0hMlkohYR4e5N
      +svHyH0IdNK0gB6yy6LVpmInG20bqKmgrNPobJAQt0IoTXYqU6RJ4WSl56I8WkExJsjSQSRa
      9EEQQKTu/hCsosaZPy/A5zPTnimtAadQcz7S2kjSBEmSIgwDdaIdspwKWp+HgFkLZE7TJpzn
      UTEB9U+Divi4CTbgMAFvD8gvF49jLI1G2aluJlTpfmoVUhgGkBLKpC+/4wIKK/elumd5fzmZ
      wrvb7lcTlRgtsjMLPKunVhrIrRblP0LxngmOoXctJZDKTMs2CSnac/9/dd/+JMlRnftlVnX3
      PHZ2BdgICAEW4AsyD2EiuLb84GKMgPBfa/9uIjDGvsZxFWALgxZhLKFFQiB52dndmenuqsr7
      Q9aXdfLUyarqmZV971GsZqa7KvPk67zyPLS3jhxjCINJrqoqnJ6eomkanJ+fg+YVnftM76Eo
      WQ/tyjNuRiwXgAwrCjDSlDrcp+o+8rYDKl9nGpa13qv1Cj/58U9w584dfPCDH4wWHml3lgOm
      NFgydViQSZXGIEvv6PdCCEkyltxZukiVzDjye73ZOMb1eo1bt26l8W76Aykje+dA9kXJhZuR
      fca8KF2SYCThkm5nWguwxrNUddebRDPKbB0cojTcxgpiTdsg1uelpIXeW0YQdyGxaCaR+qeJ
      y40ZdHRTc8lTLH3etzEw9zDK/W6B9T0lfBKOKbNDFzqEFtlBzpKVJemT5i5xuHpJvOsC9vtd
      ER8J+7ZB2AbUqxr7Zj8QfyBpUvwsMtiQ+h36jEAGzELkJeJvCVP8/SZgaSCl58jEIxPgQOgF
      Fhmdd1V2ryHPTXYWMJge7XMxaIISTwKlfiAymZOTk+SBQ1pD2qCD6mTdA2ma0RqJ9x5t0+fx
      AWLN4IkUHd75ZM6jtO8gEiFqIV152FGYQBjfS3T9HL70f17CU089hef+4Lnk6VRzEuRE7Xa7
      ZBO7zmaZMq/MPcu/dV6OpmlSWgSN0xKJWRaD0X73JbV0amPL/qy7D+eYSnkgipKhOhdNJXVd
      Z8zN0qKWEv8uDOmApeRgaVT1aoVmv09+w865XmIaCJ/sV274NL7eXZhtUwIXgvFgJgqD3RVA
      srNLaNpmuNjFOCqceNDGWrrojA+WzV/6HT3HNEnADaq+PHDr9RpNIzI/LlwfSoxDjITrxTwM
      LqIOafK893DB5ZKzQ8YEpC8/8bDOh8RBatDyHeusTp0ra9yls0gmkAl7DmmfTc+Zg9wqukYE
      8ZR7rO3a6KnTGftHFIVZrVZZhUAymxBC8vjJWnBM/dHfO1HDHHnk+Gja7CPfD7ksj7SjHn0m
      97xm6Py8C11MFyPH3HW43Eea/olPfiJlr+1Ch7ppW6zEIebBZmQqc1MsZQSWRD8H+jmLgfCW
      vq7rFIUXQnSjor1uro+u6zJGUupP4l5iDhJKh4ALOeSfz+8EEiNomuKdQ0mqs+bWO4cuPyvD
      /HXCfBMCdtttxuDJELmpaaefGrPEbXBzpGQ31OHl3AODdKLD6BORw0DkOnQpP9G4n0FiLs2b
      Bfa60kFVEc9+vipfoYsJcHqi45KENtVX3u9A20mEaKrSXlC6XZpP0tgwZPy0vFCmxtt1Xcor
      ReAFu3WGqO3ptuV+mJJsdVuaQVxHC7HyjI3bRXanIC0cct+SliSvHzdUDaOGl2zxPcMKrt8b
      giBbe8A7h+AdXOfSfYCch6VA3CXx926cqM/Kg9S0DZz3+MmPf4Lnn38+7js/MLkaiLZPTqqU
      vG8S2rxELZSbS34ufep1O0ME5ODOpJ+Vh1hP+lzBDAmWFnAIY+PG01IaMHjAbHtCXOqf78hn
      Sv1rqW0g/t2g0SF3H5MEmD7x3ue21SXjpQrbILozMjkZ8ZjTpjIJp2dAobeBuyoexpFvtXFB
      PAXp3YU0R1aYWlV1ctdbGrQmwTm6zw5BcAx6it+XBY30HecFuRlnjtlpDack7Ws8tJaQj+d6
      ZqRSOxLPKUuBhYs8k4NwFT3RmqZJhJtnYLPZpGSLmdkbw71AcoZwgzDATJw95r3ZZbiflB5Z
      SaPwVWRGfar7qvKTa1YCbd9PeZL6v+kZpGlJCAHb7SXeeecdHB8fpzuqKHT0gWBd16F1UU1h
      VKv3PpMIrsOp5WJOSfn6HSkRzUl4suKNJaVqBkBzkox1mAK5WEu9HuS49Qa3TClz7Wk8pg5J
      CDFak5JrSSJMAT++Aly8WKPNGWH6sE8RBHruTDFlieuwqQevHT7PamSRQQ3pKpbCaJ6o3Lh5
      Ex+QR0U752LunHoc4bwIQl48aL/fYdN7gWW49CYhMmVqPzI3zlKwxifXrq7rdMarqkppELSW
      ar1LOCRNh3y/pCFM4S1/n9IinHO9Z1k3uLL2fdPk+ujRo+z9EPrAql7YYmbRUhEl5/KiQune
      C8LMlryVUk+LvSpH4+mFs9K+jUyhgQ8+szb4Xvr/2te+ht1+l6R/uh7XHJs8tIyIuwnogy4H
      o5+xBmxtQPnelJQgmUeJ4LyXMCehE+Yk45JqXWqfZjFpLqB639UxCRwLbzDEvgsdQoehqpkf
      F1Qnrks1gdLYtDCQ7QuBP/ckL9ziQeNTyyHOFZCL/CERg6n3dE4Vxh7QdfBgcLHvIbFbrE+9
      WW9wtd1CosM4ihBC8kV1zvUWicHmu8h+3hM9aX8/OjpCCCE5PjjnsNvvcHF5gRTEljSyiPd6
      tc4EKtnHIfva2r9LaIJuW9II8zlEzzVUFXb7PRA6HB8fo2mazOa/Wq36mIMW/WbJqsyFrE3X
      x2h0I1ojTTyU1uV45RiTq/KC8yTfjekmXLIn8jspHLRtzMTsefnc97HdbnF6eprmjdp2LT0P
      5MbWdklLoi0hrLmzxa2nNgklEXlbb0nSul8L9HtS6inhvwTmVNU5XA6BQzUQYMzQ+w+zxHus
      t8ttrvOWvxdQmrN0sRsY1CWiTIOwexp5eNiGjbfyBCtiNmZ48j1qIEsl3hTg1ok0B4E/Bpyu
      tlsk2474TaxiarOqhgt7bdLhPRgTmQFICQpljikJQRC8mO6jA9CKvR3TdZPp8T6wpNXPQYlg
      TzGLJW1a7UkTz/HRUXqWjgu8D4xeYH2uK8FUhrmNOXc0sx2ivekxF1IaBrlm1r6lgDE3vhAG
      p47YKRLxB3Lvr5gUrv889ROzC5yfn+Ps7CzNB4PanHOoeZmwawcXS2kqSf7NfSrmkumkROhL
      C6QPmDZxcAFL+bi32y2ciy5bUxMpPYc2m80scVtK2KdU2am2rwOHHjTarnWfFhO/jjlqrs1S
      W9wjTdtkErZzIipWCR4y3YP2gNH90cauNc5M6DBwivuKfw8SWrwncVivV3AtsFQDoaTIgx4l
      Su73QcMh4YiiWmyebrJJUjOIvZ4znheZxTILYpqBmEG0E335RES02WZK6p7sY0LyLwmFut8l
      7bFkqLxbo51fevg0bZNlIWVwXuUr1K5ORDwWYOpxdEP0OELU5uit0ykTpZTw67ruy0LGFCtL
      PIIoFMlo8SE5YD9fCDEdVm+u0vdSIQQ8evgI73//+3sX77HnYy0DFpxadL7AS1n+XCJBT3F6
      iwFYz65WK6xWq5EEI9U/6dXDPnkIqN4Bdnm7Ur/6d2uzSc3kOgfivQTpkyxxt5jW3BrMPSvX
      W19UW/1aBFq+I/GWAVxJMqMhP0N0ODDijm52bVJ/lL4DMpU6fj82Lc6B9gwZ1gFJYkueVgBW
      63XSvr1zi86J/IzSbNP09XSDHTFvjZ9r4r03nRUIdJzQAU5L7NlzTGPJvFoWAL3HSPypAWXm
      Ey/yQvVBgwGMcm/RtW1f7zyM3Esh0ki1WdAIzUS2aVnu48pXcCTiXngmhXgZa9UWD6HfS25w
      i6eQIzV3SyiiEPD9f/o+/ucf/U/sm2a0typf5dlA+bs8sJzMhLBhA5SdlqTEQxZYf8ac2Rbh
      oBtdDLEfXA4lAzsUxgsxbdaxNud/B1iXVTqQ5VDQCfgsqWtOY0rvIiQfZGfcMwBIByIIRpFy
      tvQHTR7QTEOAIL4w9iFxFrjH713KuZ7GE5Q5jdR6AVgS3nCmIpHPCGeIgXhwMYhNBgfqs0l3
      TbnPgWjj3e13fS6iIegu9jm+e2EtX0q/ldBYZJ80mbRta5qSppi59Xvp3SlBQ/8tg1WBwZVz
      3+xH9zOSQVDy59rWjKQWDLvZR68hmcdL0kP6zyecHFD7WDzLyt/EuaPplcS/C128d1AmIwmM
      P6kx4JJiEPpyoUxTEkQ7ZEqv/fw1PP3001HzEZogPYacc0MuoBIR04u31GTQ9dITk8nJaldz
      0r8FzJtDZqBx2O/3WK1WcC7W1tS+znJsS/AvvVeSkKz2/yuBkgY5+5PAJUndasx6DhdrQf0j
      OlCNbWo1te8BcHn9Wzn3HvEAyGpQ+uCmZ40DDcTLQk0sedlX+VjmVJjp7aEJZqXPSHKvdTHB
      nLV35J6mqyk/45jJGHa7XRTOmnimQhelRHmw9Rgl0eS9hMz7RLfgStRyJQ5TZqQSEWc/mqFM
      wZygKKV+SvHeRbfOWIukyxKlaXw4L1pDlm0nSV8Ei8m2qDHKeWWfpQR+zrne7FklQSO+Xib+
      fC96jw2ZQgfmMwQrujAETaacZ6sar732Gl588UVcXl3290rjJIGjdNAcFCdKSt5UseSkZu97
      j7quELre1XK9jnnF226QviaIf8lsdHJygs1mg/Pzc9R1HYslK0JBbYVMYLPZLJI8lm5OHhrp
      Hy83UElq0ThIonooE9SQbWDR11JTxVIoCQMalzmQh2/UByIR55ikPZ+mGeJAL6Z0kOEA16ET
      qrSMvuyV9JRGWkp8VlCR74l+CAPjmZf+XcoBo4ON4IbiKQHRJ9zytEpzEUJWmIlCDyP0aTog
      kaKnVylyn7/LNAyrajCPOheDlSwbMffSocJENKt0KQ13bcTrLGlTE+hsLwb0zH98+aqB62E5
      OnjnRaGbvt/+wp82flmXgO0kF+UUG+JTLYgB/9ha/L0D3bq63r5PrWKk5aTiQVFbRhjSkcTz
      EF2S5bvcF+v1Gt/+9rfxwp+8gKttLFVLj67o9RfGGoCccKqCjLrVE1kC7xyurqJXQ92HQTdN
      E/PGi/ZlW1MmE8mxf/vb32Z2PI2PJlKSmemxHQLpeTfftsZ7igEFIBVAvwkMGUjnL/v+K8Ey
      FTkXsxXqZyjFOkfiV9NrcthvtJlz7kPXF5J3QxCM6M+MgcCQV0a6Uco9lJtWpu3WHNfQevwv
      FYRhZCaARrgWUnKzgPikO4GeGTX7JqVH5iU18bciupOEGmh2G6RHSv75/AzzWrkqSf+WFDwF
      6YzRfk1J19VZW3LupkyIJWsEi8gk4bQn7Fr610xHn8suBOH2iYx4y70mz3TXxeDEqNk1iVk4
      N1QG4/ssauO9x6pe5QJOfx+gx08hYnAX7VJGXp4R35uU5Px0IWC/2+Pbf/tt/PEf/3GqL0KG
      lRf4iWPLTEASEcuLZA66XmXm7/Si8GrhiRTz80+pmJSEkuQjJ0dzzT7M3XufvJX04ZYwNzb5
      TroYRMgmviT5z90/tG0D71ZjImUwuClJUT4rC75PgUX0bgKSoLJ9fq77lT+B3OtH5z8ZOrAt
      MJ7SvwEWobHuBaz1cs7BhXGuIaOTbA9QgxmhX2CGlnlB+utTyifhDz1RjblUZVRoDACSpr8U
      BOUiAQnIzVNy3Um4fF/LgKAdJyyNt7Rf67qG63wfyzHt9KFpgzb1yJQOfFYzeFnNbKp9/s3q
      ciHI/Vdl+zg9D1fUrryPxdWDC2n9KEBLDdC5XODlsxZ0IWTEP7l9uj5VOADn8mJHdV3j1Z/c
      xRtvvIGvv/j1NBdkNs5FV1FXxTPDSzSWHL0AACAASURBVP1UE3h0AIwFmyMUelPrpERyA1Ft
      nSMSzg3eRzKfjGZYmkPvdrvEAWV71wVuapnXR6bQICwlpiGErMg9L/ZKmswS/KZUYP0s+7gJ
      8ef7WZ4a55O6P0cMS+un8QrIJTPrfdnOks/k4eFhTPss0HQxfmcYV9QQkmlTXRJHwkwTTZ4b
      ShMTLZ1yXG3bwQGJMToXTVucbxnVSVs9VX30c5YlVcQQXcx1k8RtYDwBYb/Hps+KOTWXJWY/
      jHFZbImW+KWJi+/ruxXJvKWLp25Xrhv/lhX6KCHLM0QckrQuTCcZk4RH8Lm3kZ6byuV0UfZr
      7eHK+164GAJy+WxcX2EHQtx7P/63H6OqKnzzW9/E1dVV6kvXLtYCYl1aQCYoWxKwYMEct5fq
      iTbtyHf3fcZKmZ87I7gYAh8sQqylvUMIq2ZoPMCSGfHQ6w0m8ZB9yjoAMhe8ficVkL9BPiY5
      zkztvaZ3lAQpoSHIqloBYebib0oTsw6nbiptYoeM6S1hOpn20UuWvk9fwVKd0dtI4jf8LusP
      MA9Mj9QIXG/HYhUyLcWO8OmlXRKZlYhhodZL33Xib0nkw7jtfc6gtjiBkoFHZgUAbYvU/xzo
      MZW04znIhR+Hul4V4xGs/qfWPplJehoyZw2IezsAvecaNS6pipJ2aVMwmUXA2MFgydwMBNvr
      LwbG2r/ehXhP8dZbb+GVV17Bxz/+8b6WxMCs9H6T+6mWH2oJ9EkQCgly8Cw9qYmyRcTTYPqI
      xBJDkuM4xPtgCbCtNnSoMCSi03a40iYleOfRohvdxo8YQBcDTm6SlqM0n4fC3Nj4t3WhugRH
      2Q5V8HTg9PO9+qrfLc2lbJuHNUlmqqBKCCExFe/jTwZxsfc5oNSltYGpS1+ZCZVzaK0bczXx
      HoVSPN0CIQSqrh1s5ON+Q/qZM4mBulU+ltukR90hcJM959xgnpDvl5gmgJHHVKlveg5x+Ema
      NqCVtM9F54+le5vaoDR9a0Z0HagMYbDyFS4uLtB1Hb7xjW9gvVmj2TeZR5imr12I8+B8wQuI
      iF4ncZF8vzRYmj9I1IeCyPbBpf+xpTZP9a/HJBnEdaESB7lUMk8yU8vkEQUJErrBPZGugs45
      rOrDianGoYTXdUCPheYDqZprNf1QaNs2EVzv/XCRKMGVJX3uJ+lyTLwsbQ4gUegSvZb1Cviu
      Ve/Bew90SLEJsV1kJgJLatV4yzutkjlx3+xT9kZ+ncW89AQnYOg/+Byv2Pd4zjlWzp2cKykp
      XkcYPGSvldZUMnb+5P0e22cAnO57pPm5WM9YOgC0xrgiE/JJAIj3fwFOnFmH8nmaE7wsM9Hc
      XFnzE0KA8w7f+c538M1vfhMBPV2t7D3Id9LlPgwvIInQk9YA9GBKRVAksvxpSXhRYqSN2H5X
      gjYfSXe9QxZC/rTcUUubAsgLkEvCGT0FXCJ6+sKSof6HgsWADgW9J6KaGwBE4mDlIb8Ons65
      zN7dhRC9m9zwDImxPvDr9TqTAqVUL9V/PSYgNk8ixyyQhKl6rlw/SvDRdptZCRLe/EkTD71A
      un5MOkW5NLENUedI/XG+Y5qB6B1CokZtIghJvyRBcy29+G5K2p6DKcFvDnRf+m8Z6avX37Jg
      jIQ/OPh60NjjM2Mc4nvDnm8C03b35sEu9rFyq7xfsQZyPpaMm/jqceQ4jWniS//nJbzwwgvZ
      vdDcmsnU0fUUkjc50PJ9rYJ43wdvPH5cfNey0ZluoBhvaEtDsFQwiV/KA25I3iXpjZ9NqXej
      AxVF2KS+k+AN9U7tiyzGOOx2O/PyXMNNtBwL5CbtO8iYlCUNHbJ/rDXzzsFVVR8xmTNNmhCB
      PC2HdBRguxaO8h22Y5naDhoDAHQh5XyXHixVVSUCcbQ5wtX2qjf5VKMDTkbRNq1omILOgJcW
      Xvh+27XjWAQL3zDsO2kuoLmM8ziXT+im5o0SnkzcSJxkENycwDeliY4ZjZXCJKDhHlHvcJ7a
      XjhJgmWI78+ZQucsGBwr58Dy3KqqCj//j5/j6uoKT73vKez3jZlOQuMs90wIYSgKrxFg4jct
      fS/VCkpckJzHKti8pC1eCEsPGr0BnXMpc+GSdlltjG0wmEyCNU9zmoPJMBBD0K22ZB9W/9vt
      FiGEviThWBuwmNuThDRfXSxGEUIY3YFct/+pedRBRJJR84CUCFWJqVrPXBcym79kMuIiv6oq
      HB0foes6XF5epn5N4t8N70liLC+ItbSY8sMUBCAbehdCPy4/SHyWmvSeJPGXTF7fP8ytp9wn
      U8/yuVW9Mr8PISTbmbU3abIDgBZt5jUm7+303ioxOznPOiuzFEyqqsKvf/1rvPzyy3j22Wfx
      J3/6J1EYKgVYGkRfzol5zc8kanpirmsH5ODqusbR0VFCtKqqollDS27yM05I27VJHSM4Nx0F
      LJ+z+tLZKPn5HAGR7YT4R1Fj0P3r7+e+s9xgrbE8aWCb9GixvrfWTeIlCZSeY/0s+9LfO+eS
      cGJ5hpWgxKQOYQDsk7jpwwUguTACSF5GR0dH2G132O528F4Ugg+DqWoqMSMQXQ7lXouxNi1C
      mHbV1GOP/Q2u2NpVUD4nTVCl+XgS2iaDTpl5uCSYzkFpX9FNVmr4FmHP559rap2zof2qqlLt
      YWYM0Gd06bnU45a4Xlxc4B//8R/xsY99DF/5X1+JWkjTjqKb59ZfgnkHoFXhmy6w9/EAbLdb
      XF5eprw+S2zaJUJd1RVc69CgTZHGVVUtlvxLBGfqHYuTW3cAvCA91HtnjvBL84VknpYKvsQE
      cB1wbrDTa2nT6m+KUVnMQs9riYnK9+c0kKl55fsWfhYMGUodnJKuAGQMKVZbi/cTV9srtE2b
      tBlNdKYkVWuvtl2HrpMJEsfussM7A9OmpFrXVfHuRo+nBHPEX65PqR8GbbZtmzQj2bZFEJfu
      6RCiKUVGR5MJaDxkH03bYFWv4OuoVbahEwoefxNZPgXN9P090ByeJYagswyTkbz11lt49dVX
      8dW/+Go/jg7ej8/NXH8a0h2AdWB0g9fh9szSeXFxkfq5urpatHEs3BKOGNK/doIBWESZYylN
      ksx4yDZLBEUuHDeUvtUPIaQQ7ydFgMlYNutNL2VEKbjruknX2Lk2NVwX35LUEfHugJC75lrS
      3SEH25LaLFyuMx7OtWy3rurk8eOcyy5cJbTiAPPf1XYLdLZrspT+NfD9aGsedK44fitCtzTW
      AN97rNHcI7UXq19gcK+UuOm7ldK+K0nvsj9qcRY9KM3JHMh2NO4AMi2rBJWw4Xvv412My2tW
      UIvSUNrfep7pjjpVn1yaN3/84x+nxG4Rx7KnzyFQs6AKVaQp//lDVGVgUDEvLi7MNkr2xUMH
      ZF2SlNotfc4Lp0P6DSHeF+z2vTdTfwDpkdK0baqodFPgqFj/oGkb7HYdTo6Pk7lBmtumyIHE
      34JD5mDu2a7rEESAE9+ZY/KWxqVxniM+hx6KEMJ0cJXoTkbVJqbvYu4X5yODCCGkLJtWrn2e
      uyl8+hdGPuWhA0KQEdjlsTpHLzOfJdGbA2qZWvuU+Mkzx6CkJeeXMT2aSGvtTsMhZiFLQ51j
      XK5ntHHtWnS9x5V3vk/21mZBfXJODrEsTAXYUgilMOt89Jh8/fXX8fSHPpT2wpRAVQJpTQgh
      RA1ASr1zC3cIE+i6LoUl//8ASzWcIT1rwPHxMU5OTjKX1raLdkznnpwtnrlamrZB2MeMmHIt
      MrVdFJkowZMgnnPPkMBZQV1z+0gfppJmd12wtIhSOl/agmUeeJ0SgMBzxIhdmoH0QV0qrDjn
      sqSBlIzbtlmg9gPAkAxM+vrrvkoaHOfdwjcxTKajrupk3qVZx0olQYGLHj1yXuRzS5lACaRg
      WLJqlIB1f9PzbsgMmxgBrpclgW1YEppMacE92WwbfPOb38T3vvc9PPPRj8biNYqpHcoI+Gwt
      Va2S1CXB4nI3Xaj/F2AJ8Q+hjzvo58x5l1JTHx8f49HjR7H+QV0hupYtq/15CNRV3S94LNtH
      m2bmFdXRm2Ram5oyx8jvbwLSbGL1Jfs8xIZptcMUuktNQAPRj3lXyvOEjDlYbn7jc9Gh6ouz
      6OfYd8kEp9uWRJLRrDRBlIY3aCSDRL7kPEugq23JxBilZQ9XRU+to6OjJPDRnCpdtxnAxepl
      WoOQY7Xma8nnFo7S4jBldZDt+Si99fEuSGkheP9lRXYvEaDnQM8H4zkCorD56OHDVNy9xNTm
      9hXvqZq2yS+B+SIvTqTHzqGDkLZp3vBbhGVKFft/hYEkCQh9ulzP4gsB+7BPZpnQBTQhbu5Y
      9Wkc0r4U5ohw3c9n0zRYrVbJNZTa3MXlBeAdfKGN0ho8KY1lwLNO0c5z6v0ULDH9pLsgFaEt
      S4ZKc9lA1Mc57y0CL6tEEU5OThJBk8+uV+viHqZ6L5m21acFOltoCYivfEf3Ic0BBMls2rbF
      ej0eh2xjXdfYbDYAkGn7Omuvcy65MVs4yP41PhL30l4eEU6haXAOZHtac9ZMNhL+4ZklnjYa
      XwvHKbDOhvc+JtUMwBe/+EV873vfw4svvmhGPsufFjAuRd6DjNihLCy91EvHUi3l5uY/7TY3
      1ebUM0/Cpn4IUA3uuha1H7wnmI64rmpsd9t4UWfMh/xsCrgB5i6q9Pzs93tst1s459LaeVHY
      ew6Im1wficd1GTHHPRWgIuE6ByTrD2O7qHMO9+7dw49+9CP827/92yKziwXaY4bE5Sc/+UmG
      u97nei/QLCrz/S85D6N2VD788fy4FDNj9aGlwWhWarNkaVLAsPbIer3GZrNJ3n2mVta32zTj
      am96PksmqhKDkufFghBCdu7083Kvy/0eTX2J/B8U6T4lfc9po5aWI99brVb4gz/4A/zd3/1d
      8jqS87CU+EsYUaRoux68D65z+LmYhKmb7uvC0gVZCrPEB7FQiUXEXc8IWOt1Crc5nEsHWi+y
      dUhS+lyHVHv0SaikNwGaLLTEJUESzRIOSxgRfdp12w8ePMDzzz+Pz3/+83jllVfgvccbb7yB
      7dUWt05vYbfd4ddv/xoPzx/i7OwM+90ev3771zh/cI7j42NcXlzil7/8JaqqSm7M9JBpmgab
      zQa73S59tlqtcO/ePbz22mvJhPLuu+/i5z//OZyPhHO9XqOqKvziF7/AW2+9lcwjGjRD4WdD
      yP94LqO9Pxe89D/O6xyT5+e6Ljc90C4vLw+6m7EItxaWSvt2ygxofVc6S3JOeW7I/GTlLyAP
      QiyBnuNDYY74s/0QAj784Q9ngp419hKOznmRKry/y9Id6dJyh+SfkYjwkGw2m0UcUA9cImn1
      c0ibh+CtcZEgJer/DvPUEkLonEvBITeZnyc1r0xpQAlQM4JDJatDNBKpCfz2t7/FvXv3cHp6
      ipdffhlf+MIX8Ktf/Qree9y9exfPPvssfvnLX+L46BivvPIKnn32Wbz55pu4fXYb//7v/44v
      fOELWK/X+M1vfoPtdot79+5l5qSf/exn2Gw2ePXVV7Fer/H7v//7+MhHPoKf/vSnuHfvHqqq
      woc//GG89eZbeOedd3D//n1sNht89rOfBQD853/+Z4a3ZoqSaDZtk+onc+qo9a3q1ahsq5Ty
      tYRvzZleF17WMsaGGUJpKj6k/SVreBMByupL/pSfJ3z7Qk8BOcNwfZK9KTyHKO2ygDN3bkvE
      X/9NhvX000/j9ddfz75fBCHQMwAhxBxUXjZwdXU1SpDGWqRLfM0l4iGEkZqy5LBnqtiEaifb
      fS9A46mDR6ZAm3FCCGkOp7QqrTnxXc6dxs3SNpZIY6WDb+Gy1GWwBF3vIaIlsDkmr3G5Dg5y
      Lz548ABnZ2f4zHPP4eHDh/jpT3+aCNrZ2Rmatkm27Ph3tH93XYdPfepT+P73v4+3334bzz77
      LH7+85/j/PwcZ2dnAKKQ9MEPfhDvvvsu1us1zs/P8fLLL+Pdd99NdvDT09OU14a4/epXv8Ld
      u3dxeXmZlV/U54hmlN1+l9xK+xGm31b1Kplq4PJU11rq1m6Xeq01Ds7F2J3dbofbt2+nmJ4p
      sDTWmwoVT0rjl7jJJGoykVpA7muv8eBzm82m1+bGheZ1n7p//bm1DpbZ/NOf/jTeeOONyVxq
      Fjg33GPVVXR7T6MjYbIIAS90pdtWqYMpqZ0/pZRQgrkNtiSgYylMSUL8fSqf+1x76da9vyzU
      6Ypln/LnFE76syX3C3Nh/e8FENuSSWqJxLi4L2ebkqqqwjPPPIOTkxNcPH6M3/3d30XXdckM
      I99P74iD9/jxY3zgAx/AgwcP4Fy8zDw7O0vm0hACnv7Qh/BP//RP+MhHPoLz8/Okpqe2DZPM
      /fv3U4I/LeWR6LMkZHRLHC4TnXMJx5Gm0IVUC5j7TXreyPEuJcyrVdQsHj9+PPn8IYReP1si
      jE8CLJziHA4+98zvU/kKq/6nfFfO9dHREY6Oj7Hb7bDb74Tn3TIBTD4r98TcPSk/+9SnPoW3
      3nqryHCm5iGrRfL2228H2pd2u50pHUjEuRHmBmj97v318oofClJqrqoK3/nOd/DVr351xDQ4
      eVMq2KGESS4I29Hpa61kc8AQHDLHZInXIaA1CYuRPIlDJ8cOIAVL6WeWjnXJOugxaRwoye/3
      e7RdtNHv9/vkneadx+XVJY6PjxOu2+02aQS8ZD8+PkZVVbh79y4++clPpvPQdV2My4DLoluP
      jo4yxqwvI0MIePz4Mc7OztL5k8Q/ak6AlevHYSASzD8T/xf6alTKm8T5jNBdR5rmXceU+agk
      2erPrM+lICCr5ZUuhpdYJKx+9ff62TkmGRDNYbvtfKEczdRC5OLJFAM3zgg7NZ67d+/izTff
      xNXVFf7qr/5qsVAnhQtpjakPlcD2+/0sAyhN/HtlrrH6t7SZpXhYZhe2O0eQrI3Pz51zo/Su
      h4BFvA9lTtedkzmQGobvo2ERcn9p63BZ/R9CnEpakexLuieGbigwxOA9MqSry6usLfkeYy22
      2y0++MEPpnxPtIUDSNI813q73WaSHbVsKYisVquUAyeaJGLkdIgfmGMOoSfwASDRd30sg57D
      JFVivHcOAUbJa+YqcZoz2Wr8Qxuygjr0tWfbZGya3lhJ8yxwzqXIbn12lsyD1Ky1hrW92ppt
      0IQuxy1NTQAQOiSHkWoh8ScO77zzDr70pS/hfe97XzGKfMlZ4vmoaY6YInbXgTni+CRgjpjo
      xbASty1tX8MSSZyTzIWeI/46zF72NbeBl0pD7xXwcjLiAvguMoA5idNatynVVz9nPSu/19qo
      loxDiJenuupXqW0mHNzv9llfVjoSfUcjJX/9rPTPjhJ+nMcpoiuwzfBm3qIps2VJgrfA+1i/
      Q6Z00W0tPUskhmXN26c0GnDxcrVpmzQWaT51blwdbGhHzHnPVCx7vkVD5E+97yxaSY3NuSGf
      mPMerbqv4Wu8W3DOQUaJL9GUPv/5z+PVV1/Fl770JfNZOa/WOPTztbXoU8RfXoZOSQPvpbQ/
      p4KW+l4iNcz1K9+f0wjk85YEZW0u/btWU0sbXfZHkBf67zV47+G7Puo5BMD5tOGlyjmnjueE
      okvpLPQ45iQb2Vb6TuBCxuxgM6gSgy2p3DKVipYarX2p8Ryk2vFBXbJ+IdiVxUrPlsCah/V6
      jYuLi+yieq59uea6X+96DZGfs1/FuOP650WArD09J4yFENC1HXydF36x3rGIuwZrb0hpvAsB
      Xri4cszSHMg22q6Fr8bJJK0+vff453/+Z/zFX/xFkc7ZTLVMFxe5tmhJVn5mdfpeQ2ngUxNS
      4t7Ws5y0OYai2z8U76UHu8RkljC0uTEfCpNE3DugPy86CK1kHpiyX4bQYd+0qKo6y4dznfHQ
      3U+CJETc33n/lv3WNjGWIt31HuLvJGQ6MrMnh7Fk5ESkr8ZTEv8QQl/DFiNNYEpzlOdcElma
      r+TzpvmjzwvElByltMvyfOXv50xPMn8SWT3nmsnqsTnkl57WeT1ESOIdD9BnG+1dSH1Vxcph
      feAjANSuHu0FPV7uhTknDu893nzzTdy5c2fyLrUkMJbO7GQ6aLlxZZGY/0qCX5ImlsKcZCfb
      5SV46ZKWz+tDMCdR8TnLxDOnTVgEX8OTJvIlmFIlgUHjsFRtC+b2kevzoJQimlnMfc7cEQN8
      Bp95wM7nM8IPQZi1BjPCZrNJPvAhhKLUbZ0VeuYwY2jXdoMZIIrCAAYiOuWHTpzqKo/2Za2A
      kjYi359qG7AdN6z9Kdv3yCX8Ur8W3ZEamnxeeszIoDneqwSEkeur1e91CL9852p7hbqq0fQ5
      uLo21uZY1WPp3hq/bMs7h865rMazBO89fvGLX+Cpp57CvXv38PDhQ3z5y1+eFJpK+7AENVU8
      SjDylp+bSkcp3pQoLwGLmz+JdiRY+GtJQ79/Ey+mKelZP8e+Sxzdel7DkkR0qbraTN1XwpQA
      kLmXTUiac8BMmkwhXdrUXAtZZCV97pAKoIT+chG954xVOFvPMyVzLe2TcTCGgOPScR/9b1G6
      c0Px+GTCgPTe6edPZBLNgpACMjt213WJ4FlpRyrvgWDXH5gj3paWaRFvS7PRc6k/swQgrXXr
      Nqi5kQ55H6NZQz8HrMPL2rxAXkXOGpOlgUwJV7LqmnMe+24f5925RYKE7EvPzapeZXeV8pk3
      33wTb775Jt555x0cHR3hj/7oj4qBudc9b3UKHukb2Ww2MZlZwdxjdaIJ05NiCjdlAhbepQ0N
      IEliS2MMDnnm0DlZol0c0o4G731K3buUqc0xU8unfopAmH0AqX6Afla3UYv+uGa8YKQJhcSj
      6usw031S4z4+QIOJaN80gMgEKfGR5gCmvub7bLKD9kTx0dwRAN8HEJFJNG2DqqoTgQsB8D5K
      1S0Jf19gfqqil0yAJxlj6D2Govmhw6pejeZAn2sKEjJoainMaae6L4lDIv4YM6hU36BgOikJ
      p5o5WLjI31tB/Fd1bhlYImCxr6nPtJeTcy4FE37ta1+bFdIkQzvUQmOWhJSbZ+qnBP3ZTZnA
      e2VmKjEtYLDJAeNizBrkhM/h+6S0lykp5VCgGWOp5H8IWJ5OS7Uf9Ic7ER8jhmBaYkVvBsmL
      pZTyr/N73QfTAYcQkoYhiQ37bdpmCAIKIRF9vf1lHzTPVHWdmBjH4H2Ftm0Ss6Kk2XYdqson
      qV+2OXXo27Yd5qLXJNKcGEFHJYGFDNZ7H5lzN5yX9Khsv9dgOAa2kdaM0nv/swv9eQuDFh7n
      I0+kR2CBljlI66LGJK0Y+nkpSDB+QscjkEHJVOwSbkr/rq6u8IEPfCDFmcyBpkdLIasHwIYs
      wnNIw3NcfwlcZzBWG/L3knkC6Iu8IN5hMs++PvRTbWkVV8NNx6Lfr+s6+Z9fZ65pi37SsESt
      lqD3ii66MtfWWPDIiY7GSf6tE39ZIAmkJERt147SeixZBhLGGHWam6JimypLaK+x1CJHl0XI
      5O8sN+i9R9MXjgGEGckPjGSJNgQAVV0nzxYAcN7Bh5BdU2REPeGT11IYadzBwflceySj0RK2
      cy7b83xuag25ViTkGrTUH0LMgBrnyifvPWueJKOiiUoWhroOsP/f+Z3fwQ9/+MMRbpYQskRA
      L8FIA9CbaQqmzBQ3ZQLvhQmkhA9xXdUrdO02fc48/0sz/B3KtKbwWfq+vBybakd/z416KFzH
      1Ff0AArxcnYlNM7hYFcjgd0aqzTZpaAfg1BaOEuiUJpzLR1HqT+WCrwOBARUrrJtxyGPBg8B
      qCtbSrcIlzTThBD6u48BqqoyPWKsscp34j2GQ+hxK81tccwF+iClcImTNrPwc0ls+VlJ26QW
      SEm+Q8CU4Yq47Js90Kd4XxKkxX6rqspSfxwCMhiX6TouLi5wcnJiaihS6LwpnVye4cyAObOH
      VCcPZQaDSvzep4+gpMXf02c9cSkxAKkWazucHocFFjHVnN56X9YLlc+UJEP9ncRfwpJ1KpkI
      Ss/IDSsPezr8Cr/KVZmNOYiL1IChsIwEHvJhzVoEN+Rv0vPSdm0mAc8dHklcZdS8cy6XgBcK
      PZpBZeckuHT5rS+rLUmPdn3vvOE22mf3VQxEj419W8D61lrSnGIio/Fae09oenI/WLgByCKs
      ZbtT60cTDvMwlZ6R6yvdaQ+hW9SmOVfeezOBJBlZCCFpF1obZ4ba559/Pt3HcrwlWHIuLVjE
      ACQxtL6zELgp8Z9SZ6676eYIIs0+rIS2Xq9xdXVlpr/oui4l8QKQKifptuXvU5HIUvrV74YQ
      MtdUJviy2pqVenspzlrLuU20RPq31sual0REfT5X8kCSEJ4cn6SEZhA1UwESU48UgCCg7dqs
      RgAvFKX0PcegeREpmS3twfHCuk2xxfGeIU/JoGFVD8VV5DxIpqIvGyU+8h1pWmlDBwj7O9O6
      S+JxqCDFVO6s5CVhSYCUBcS7baPmN7cOnBPtgu6cy+rnWqAv7WWb/Enp2/ncnXbJeKy4EckI
      iCO/C2HIt0a6KAv2JLzrGufn5zg5OUl48PvSuZ2ilyVwzt1MA7AaLBGxQ2CpZmH1MaVO8sA4
      50ZlAynpn5yc4OrqCiHEhF5nZ2fY7XbmYvNnXduuYFObszQ2/TsZkZWJdU56LRHem8B11rPU
      juXFktRhBKzqFY6Pj3G1vUrF1UMISStwzgFtACDGFPJxy/gA78ZmpZKAQUktD07q91d/MSvt
      64wq7ibml8Rfrhv7Ib5zhF968lgETkqusp9D0oQ7F+3ZdV2nsyDbX9qO/kwyraoap84oAfGx
      8JxKXmlp4xGHLjFphzERXiTcOFvjY590spBRzLoEqHZbJTRNgy9+8Yv467/+a3z961/HnTt3
      inNTmr8lmi1wTROQNleUELoJ8S8R+Sm1z9oAEugaaHkP8Lb90aNHWK/X8N5jv9/j6uoKt27d
      GtnMnYsus1T39BgOJbT6kPFvmYFx6h3595TWdRPm/KSIP9vS7UnJP5pXeoLXBbSIanMbBmIZ
      x5JLzwEAQkznrCWrOewlkUr3sUsysgAAIABJREFUDYiXlCGEJFkTdNxDR8JCu1D/M0l6RmI8
      4m3t60S8Q56wkTjpudTzeYjEryVrpn6W7VvP67/n9r3Wvpack9Ldj5w7+b3WKthP0zbZOOnq
      vjTVO/cGl9fSGBg1zTMrAwYl6LGQYZCenJ6e4vj4GLdv3y7SWflT/k5BlrmbprSreg4x3bj8
      vITUTcAa2JxZQ7+rTR78Wdd1thj8zLmh/KU25Wy3W5yenmZE2CLWU1K2dIMrjdlqk9Lwksg/
      jdvchl5KzJeYSp4USOJf+Zh0LaA/dG28FCXa1sbv/0rZSKcYITAWZLrQZdJ46E+6dz7la5F9
      ZQzGOXR033SDh4qVn4drq4kX3xvwCUAvsboejw5dIjQSB/nuTYDxIcxQqmEpoddAnJe8Z0nW
      XJ+u6xITWWob70KHrh3u6/j+3P7QkPam82iDHSvE9qqqwmq1SkyUxYAk09J3eCcnJylT7b/8
      y7/gT//0T9P3S9d2vV7HtObCi6okaAEiFYREnr9PcQ45eVMTcQhYRP/QdmQ+lO12i5deegm/
      +MUvUjssZ0cbqa6BQDwkLuTiloTWtE1ms51aJGtOuUEBpIvoFFQ0s+glbcha9ENBH44SHktV
      zal+2L73Hiu3SiaO/W6f7PbOOcAP0blZG71rZWyjyoq5WP3I8UmCJmMiQoi2fpoHpgjf0E/f
      Z0DyIpEmn0TYlUSrCThdF2nOcv0YnXOofZ29cwgRswQNPUdHR0dZGuyp9w8Bi4hZ9IZ3LjRv
      hRCylNHe5xe0c+0GDJeukWkMRV4Opi29GdKlFB62psG9tFqtRn78Em8pQLRtm921PPfcc/jZ
      z36GP/zDP1yuyTkXq8Y1DY6OjrJ5lY4Ccq4yE9BSiV4zjKlNVXp37jtLTZxq2zmHH/zgB7h/
      /z4A4HOf+xx++MMf4s///M/x+PHjlLL18vISR0dHCCGYG50bhZwYGBiAvgiWG1O+3zCGwJBS
      TAbAdAEOqTi1cw6np6dmoNacJHUT4q/NJksP/ZQmeQhEgje8W7nhos8JAivtOQEhEcaSX7gk
      tpJB8rBqX3VKilrC1kRLtlN5j6bthkIzhs+2JP6W6ZDEP5kT+myRjG3QWkMJlmqCEnguppid
      JXXLdw5NuS4vw5PPvrjwjVK3z0xHc8KnFtKG8QBt06DzHlUYStYeqg0DyO6kZF0J+dxut0uO
      JLINagO73S4xCD2OR48eHVzysRL7SdKvEKITyfHxMfb7PR5fPE77qdZS0NKNM8UctIagv7su
      lIhMVVX47ne/iy984Qv4wAc+gIcPH+K1117Dt771rYSHPGzyYqs0Tul+ah1WAFnAETUO5+Il
      YQgdOsQQ/imQ8ySJPz2R5rx19DiWbOYpKcySRufastb1kEM110eSmJwHPDLV2bn8MlnjXyIW
      ac8jGMS/yoK0SvOlx991XTL5yP2S4hTEfiq10/Zt0DRZhQr6YntunkrneE44oy+7ZgAlbcOS
      fPdNA+eQmWosHC3oQpfcc8kEV9VqMdPTeAHjmiDRayw3wy1tV7YvA0WL2ke//yg8Mn8Ua4Pz
      Oz0f3nu8/fbbeO6550xXbT3GqfHz+a6L9TpWqxXWq3W6kK7lS4dKDUuQsDbMUqSX9FnXNV5+
      +WW8//3vx+3bt7Hb7bDZbPDpT38abdtmB1G7kpXGG0JIkbaD6jiWup0bvImkyWZVVegwbpPv
      6LFWvkq2/qOjI2w2G1xeXqJpmizNsG5raYCafG+O+JckQPmZJqo3YeoW6DmKZoGYnoHaQQh9
      DQI3DpTSuLM9ZtikJ01d1VmwVMA4QndubFpqp6ePxF0Sm0yKrIZ1Zz+b9RpdCNjto4vxerUG
      FhzHm65B0jhE2uc5wk+tumlbAMMdTegZViqOUmA8eu9I27wV9bxkzJxrmpJG48SQd+k6xB/I
      o+ilVcBMFdI/J72A2KdMLS0/B6IJiHRNM2KNc4k+SGiaBrvzHbwsRgPBADIueeCElGBpW0sJ
      E5+V73nv8Zvf/AZ/+Zd/OUptIJ+ldH0IyHQLU6A1BLp/+Som/aoKh0er07QZPnz4MG2QOTjk
      4Os5tqQVi6CHEM1aFfPA9F9LDei6YB0AzVxSBak+PTTXfbbilYvsIhL/4TCGLqCqq+y52g8J
      1iy8Sn1wbpzLCRgJkaWJOOcy8wPnMHmP9AnfmPlzvV4vStthEYqpeSXQa0TmhiqlneBPSpSD
      idKBtjkS2IA477XKoZPaCEMJ0UMvZqXWYa1Vp+ac49F75jq0rqqqkZ+/znRKnGge0kk35bMW
      XF1dJY2hqio8fPgQTz311Cj9iDWGqXV2Spqo+cJNCf9SicmCEgfTErolpXZdhwcPHpgHpAsB
      6PJCFoeA9z65YZ6cnODRo0fZokvQG5eHf7MZV1ALIaTgMkYLSgmsJB2MxneDCOlJwil+l+l4
      qfEwRz7dI5e0W4KSFJd9HvhDrnsAA4YtosE00L7u5zERi74eq3AF5l2NJt4arOAtSr9VNaQM
      kYTf2sOU/IEhYEjeQ+hAMMmclwC1xhJRkuCcw8nJSZQQ+8BGLWVawtcgqVeIjw2khRpWnHeg
      c0PQViqiEoZLWVkU/RDiL8cng/X6p8C7gyXeQodAVVXJBZzmPtrcrXVnEGcplsiCO3fu4M03
      34RzDm+88QY+8pGP4J133sHt27fxwgsvTCZxtCwaxWd/9atfhZLkV2pcDo5uk1VVZQWyS+9o
      eBImhK7r8N3vfhff+MY3cHl1lS5Dokrv8L//8X/jz/7sz65FMJ1zaJom1UxgnIAcExeWEpSW
      MLhZpO1aJo1iW1VV4ejoKOUDeZJgSQPWWC0GIFXyEnEstfkk8LYOukyVwGeoMXVd19uih5TR
      JLAy8CcS8CZzKySR2jd7xAjjIfJXgzT9rFfrEcHUIBk7iQaZhUy1rC+ydeqPUtt1XScvkFUd
      A7ms+BWJo3MOx8fHKbIdsOsbl9bE1haHALksvxFywkhXRWnGszQm2Y8U/IhDVvg9KiHRo6xe
      jdopScdLQTPIJAj0Jh7NrKckf81Q9Vjrusb9+/dx69at5Bn1y1/+Eu++++5h3kHI11uCB0SV
      ogUceOD8PhHFq6srPH78uGguedLETENd1/jYxz6Gu3fvYtXfsDMFrDSgNm2bBYMsAS7U5eVl
      ItA6CycPsTV38mAR5AH33mfuYtIuLP9ddw61RCKlp71iNCUJUWtgJU8b3a/E/bqaoSQGVOEr
      XyWPoLZtE+PNL4cBIF5K7pvBjVfmhWlVQjfiHHrpkRLslLZE4WeJBszn6IlBvCITyRmaBGlL
      t3DgelxdXaFtBo2Cd0hz0DRNVlydbsjWPuR8N/28JoIcokmoaXNNnIwrICd2q3oVpXNnMxu5
      f2TfIcQ1bdqmTyYooqj7ALlVvTLTaVxHA8gYleEhx2fquk6OG5r4l6wDCe9Cm03T4NatW9j3
      KcfbtsUzzzyDqqrws5/9bBJvi8FY409iDf1Q52ze3PQnJycjF6frwJJFmWNMXdfhM5/5DF5/
      /fXkgsdIUOka5dwgCS4lqjwQAPDgwQOs12ucnZ1laraUAizcpbQiienR0RHu3LmD4+NjrNdr
      nJ6eZu5bNwFJ+LXkP3i+hOxgzkFJ4pDS85RJ5xBGMGWy4GEkUeD+kPM8JJSLZh9G5Goia0Xn
      xotCB+eGgi0S2q4XJIStfsnYpHYhnQYqEbvAMWrY7/eo6zoJC0B/Z7Df4fLqEheXl8L92Kf5
      mItS598Sn7m1itGwgyAR7wI6hIxZ9sJRGKqehV4bqKq8WA0hI/Z9uu2mjYxm3+zTnUPXteBr
      sT+XgjrXq7UZeKfH8iTojvUsny+lhym9O4Ujk/m1XWTqn/3sZ5N5SMPSNSTUQO7by81AX9VS
      B48fP56VdpYWGylJT9aBsLgacT49PcV+vzfbk4e7bTt0LqpUuuKQ7ouaEeH8/Bzr9Rq3b99O
      cQX6hl9DCCHTAkgsj46OcP/+/cS0SirhofM2NVdAvKxMkqeokDXVjmU6mNofcm2sduZgKXPW
      pgO+R8mQY6WLYTaOALN2bZLs3VjqJtHjs5qB8HMCbcTUSrfbq1xTUQS6ZLIAkEWjk/Ai9H1U
      tmcLz3Jpf7Zdi5WznQ2ssfffDHOVCswMz0lhQM4NXWRjv8zH41KxFuf6SmXUGAJSDQN5Rqtq
      0AAljlpKnzKRlPbXFBNe0sZ6vR4Ffi0F7SbsnAOcvJ+NmWLX1ToJPhoH62/rLBLSDSUlKjkB
      U4ew9B03/CGVpiit6M/mJk/j+vGPfxx3797FZz7zGZOYVr5Km6rrYu5v3ozTLVCCLJco8Wma
      Bvfv30dVVTg5OcFms8HV1RUePnxYlFq1pAMMc0gTxqG1B3iJPKeFSQmdYAU4WQSb/+T7JdVa
      vq/nf6nkXwLdd0ltJmSplB1GHkshhNx8oIjulB288lWfnmFM/CVI4SSE6NpJIYRScde1cEaV
      L42X1DZZozbh6cb9asJYgspXaPZNSrzHFBAl4h+1CtcnvuvST9lv6ELSuPguL2Mj/tJWPtTa
      rXvNHXLuMa4KZ43RohWlgEmuqYwyn6I3ltakf5f78hCiD+ROA1JwiYxuyGrqMARD6lgYjRdB
      nxf9TPICWq1Wo8RFhx5cSrJTZoySdK6fsSZxbmKfeeYZ/OhHP8Lv/d7vJRcq/T7rqXZd6Ksv
      5S55khBKLYYTfXR0lBGHBw8eoKoqnJ6e4vbt2zg/P59cCKbY1YFmIUTPoNVqldltS1KMTHlh
      gZznpEp6X5ROdDtt16FtmxQ+br1XlhBzPCw8teQ+BTJ7Iw+DNPcAyGzYUpps2zaq0H68dwJi
      DV4/YX7RuA/PDZGX9vf5+Louus+mZ/sfUirWOEhJNvm1BwDUUJRGMzUGyfC1NtC2LR4+eojb
      Z7dTnegSVFWFClFb9aHXbNre1BTiucq6D4NkTuLfY5XhJ1NDLyGgU8Rafl96rgsd6nqFdubu
      UzLeKZCCz3WYgGwDwOjCHEDSgiyt2jpH1n7Sz2Yi72q1ygoQaORKJgr+Xtf1Iht2OqDKLm61
      bb1bgv1+jxdffBF///d/n7x+SpF03gHB8CWXY6Qdj6Yg+Yx8p2kanJ+fp41uaT9sh9HCuh2t
      IUjJ2wJe3C31BFhCaGX/LE1IMxHtySWp65D25Tsl0NJv29uXmc3Ve585LmhNpn8xuXi2bYvg
      1Hzz0F7zHoR7mFLqFPFnLEM2PriRvVqPmxpEcjTonQb0HE5Jely7pmngK4/VeoXQDXtaxiHM
      eQBZ39VVnRXl6Sc1Mh55h+Jy8w3XRDKnQ4SLEkj8rLMdELBerdP5Kp3/xLgPBPZfYgTsQ+eJ
      8t7DhWj2oeto147d2LX5Z2qt9H7Q+GSRwNQE5N/SDGANQnZEd0mqvBYhnEP0JsBAGkrZul85
      CZRq29Bl9VY1jvJwAEi+0hwnzWbcLHO5aOYIZbqg7iNUZXZSCfEyrZq8e7junCZLr/NwLhSj
      badgTgKbO9DZWjgAPROSRKWu6+wSWLfPz9uuixGQhsTue48i/a4lZQGA8z0z7C9+264dpTyQ
      B5PEP3khYTBHTnlT8d3kEuyAerVK9nLdV2l/hRDS3UHTNsB+cJGU8QicT0r/1vpIhiRxl6a0
      EEKWPVXiGi+6h0A7qenO7Zel58fCWULbttgcbVBVFS4uLrCqc2YqifehAo3Vt7UvmWHAolNw
      wHq9QtsOuQQ0Xbq8vMSdO3cy64QGLUjI/uXvWTZQS8pfMhH8fu4y1ELiSUJd1/jBD36Az33u
      c8UNDOhNFjLJx3pHFnKQm0T7/Jf7mIfERNrcBFeyY9K9dM7N7xCCzX66PiFXVprxGmsm+75O
      jIDcj0y0loWx1+MEcHIvAzDLKw4H02XeNxJvKb0Dg8mN9vsuDCUErTmWZptSUJnVL/umiyiA
      VK2qpHFNrbGcD1Ysq/o9JQn+0dFRcvGUc8A5ROi9fzoyZGRaDec02avV2msmfahAodf1OtA0
      DbouOn80TYz/KEn8193vlqBcEghHUjwC1utNNKlNCAbM2aT7K2nnFnB/ZgygBMmLQZlsSlLS
      fxes12s8fPgwBVOVfKeB3v2vcsMhDXnKBm1SyKRHNwQklRjA0dFRyu99dXU1q0rqhWRRDmuu
      CZaJ61CwTA4A0uWeVVfXwl1LvXDj4h/sbwkkJtuboDSuwBCpLaU2vkvzjIMbEemoAQbTXdBX
      sc2u7bDf79PFrcYtXYYWVHy6MaYxiyamSj52oUOzb7K5n3JrXEpEJcGV8+S9T7EtUvqXfWTp
      Bxwy7Z5eOtK0I/ucisI9lF7cVHDkefntb3870qyn2pZzURJkShK39RzvFrMzE0Ifw2SfZ0a2
      B0TacnFxkZmbD2WmpBujgjD6wTkp7r2S5q8DVGO50DIKT0J2eLxHbZQK5PdAZCyDdNwlLwbt
      OSXh8vIylZI8OTlJHkJUu0tq2RLCv3TjHgLJ5MCLXwZEVUPucv08f9Id0TnX31EGVC73uFnK
      AEbtAqk+gCQwWnqSPwlt16YIXb2XHexiKrxX2Kw3WK1WaB+1WcK4GHwU1XMrFxHnsWt7F0fH
      WsHDxWOR+Iu7Au/8ZCI1zsGS+ZTMRL4LRO2C9wOS8EsGPJo7MZ90lbW0mSkTl7UmNwV693Wq
      FnSaByEsWTESi/oo7GO5L/m7vMuTn+vcTiGEmA7Du3SONFS+QnAhlRwNITqg3L59O909zrmi
      W/NQzy2CHHCJGD1JJrCEi5ZActXSArHtLsSNws+rqs6YAImenrCkEQgNwuqP+NC907kYcg8g
      VQrSm4CR1ZJg6jGUNI7rgpb2JPGfKqpNDSgxQMe90Bcnd4evpdYksndJSHuQh4w/6evPvzVx
      5+9N0wz40t+chLsf16peYbvbInSq2pvwcrGYYmSiMTlcYjL9/UXlK4TQoQtjSTwJFX3KawCT
      LpBLIRUAcfb+Wa/W2G63mT05McM+z9GAZ8SKY5cmQomblPwtvK11lgS0BJLWWHTHO4/jk+iS
      3XZtMv8R35OTE3Rdh+12m5woDtGetKY5h68ELfCZbtUF4p/hgkhXvvKVr+Af/uEfcHx8jMeP
      H2O32+G5557Dxz/+8ZEZS/at3dqLNYH5wFRsgP5bPzvX9hSh04hPfc9F+Zu/+Ru88MILi7i7
      Q34gNLZTKisvjizGQHwkbpeXl8kcxPuGO3fupIUjXIeYWwdhqSrK9ZWHPiU0U+usIS+dGNKl
      JjqgQzgoqyZB7y2WQAQwMuPIg0ii3oUOqIZYFEqnci3aNtZ0raoaob8cbpqowQQE3Dq9lRiD
      DCpM/fYE0DLjMB0C+/QuEv+Y47+PwG6idFr7Ot+/kUJH97+O0cHVyHVXzo+eDz1/nDf5vHyH
      dwByDybGGqKJK4RhrmPeHpcxY0nELG+e0hnXMCeIarpitRlCvPA+PT3FdrfF5eVVep4u1rpQ
      SomYL8G/pIGVhLTSObXWptSfbOerX/0qzs/PcXZ2Bucc/vVf/xU//elP8alPfcrsT+PsnJuu
      VqLVhjlzBJ89ROKzPlvid8sNF0JItss7d+7g3XffTaYfS9KQ79dVHYtvqAs261JRL9AhKmwI
      IZP4aYdk7hD2yQtdC9fSoUoHcyJfCXOmlOZUmrVYkUnnxJd9jlxr+/sCzod89xBp1QKvqkER
      n9FzvUsv8WCSNo13vLj1QAipOAYAVHWFo80Rjo+PUVUVLi8vR9J39OYZ3x3IORomJcYesD/n
      BhOWvlwPPVvhvq/rOgsK1PtOr7Ncn5FGN/EsbcgWAUpFdjCckyG9ymD24b4lvtqNVEu+pb8P
      3Sel551zuLi4QF3VuHV6CiC/K9PBgNZZk3Nmzb01X6RbTBOiz0hpfaYsCKXxyVQot27dSoLN
      888/j9dee82sIaLnjfh6+YVsnA+VQH6n7dZzwM6fBLCd3W6Hr3zlK7h3794i1W6K65YYk/6n
      A7mstksSRggBjx49SmYhGXMwh6d1uEogC51rf3eNs0yLoZ9jG23Xjrw/AkJv8x6k7ycBci9a
      OFlzPuA6Lm4jk7+xaLdzsfTm2a0znJxGLe3hw4cj4h9TFMQEg5aAQgKeBAMAXZunn3DOZUw+
      EY3kToxEbPW+kcSnBHKvTAlXTOS2b/Y4PT3F8fFx+rdar5Mmk9JMGIIF+ysF0c3tzxBiTMxu
      t8svyw8APS/OuTQ2GSPCc7rdbrMYCpkX7NB+rfHEX+bTtBPntBa9pjk1/qTlTsROkSFcXl5O
      MgDOVxe6IRL40MnnAnNTM82tLGz8XoHcXDJ7JoBswfksPy8R40P6laA5raVSWnPBrKIs9CAJ
      g8Z5Doc5XOmTrQ+plI6dc6n2LoyNlaQGwDyszkXTBaVJbV+dm+vr7hfL/NA10Y6/qlajZyn1
      AsB2t8O+2ePO7TsxkO/heSLE3nt45EE6HZmHA2Cgm77v7bjS9CJBMtiB+LiB+BsePxJ/tjm3
      ly1izDsO118w77a7aG4S+3jdxxrQVEIGJdfI9F9XuFr4yHdkjBAvoJfa5KUAZO1runmSYEot
      h4yB8+G8G9l/p7TNWUKNPtNu2GeF7fmu1kDmQMaCzDm2dF2HT3ziE3j99dfxyU9+coS37I/p
      O7JAMN3gFMjD0bZt8pQ5JAncUrAIosRPprHQ0tkSom9xU/l7aUNT7dXpnrWEroktvYL4rOyP
      /v38zPeRn7qNOWmhNJYpKc06TFm7hlrre9PAvovBLTTH8fLbakfjKX/SY2Vov6wBSDzJ+MkI
      5CWblP4ZwIU+5fNuF7Npyj0ribRzLr0bJXuXgpwkpHec7R0k8Y74DOktKu+TBij3m0VQp/ZB
      6cwmTSNE76UQosbWdV3MhyXqHTjncOvWrVTbo+TqLOd4qTZaAq6dPgulsUjtWwqCej66rkvV
      +dhPmtOei7dtO7onORTk2L3zQJXX95ZtJ2EqjANlLRq8b5p07jQDsd59+umn8cMf/hCf/vSn
      s/oEQG7+4pi9ZbNbsphyMF3XJbWD9kuZM+dQ0JMl8dOD5j8WpHn/+9+Px48fp++tuqAaSpKV
      xKf0nvc+5R3KCVmA84M/P+eCydvkeKRaqtVqydCYsltufsulVBMM3ebUOk/NvfU8zQOSgAF5
      rdTS3FlSbdeFZGZKHiwKNwsGTXSdFXgx19PHnE6b9QYXFxeZB4x0v0zP97EEMnpXzwXvINJl
      eAF4H+NcbJeFWyTxT9J6fzcjL+r1pf2SM8u2mZBN2vJ1UR2aZSjQWQSsFIFqmcas/cT5omBD
      YeoQ6V+DlbhRBnDqvU9NzcFl7x5C/yRjyc5LFwDlsqxxkAWhgLHZaHDJXnZRLNv5/Oc/j29/
      +9vxPIUYVKiBY5yMA5gDjZCuclXyYFjadkkrsSQSwlNPPYXz83McHx/HxexyKXyq/RIeVj8S
      qqrCer3GbreL7n5VhcoNrnLcVHQ/Oz4+TptOZwBlYA4gagv3khYJbdM0ScIgkPFaB5DtSlOZ
      tdGtDaaJNC9aHSNi+0tOtk+iwXmw5rp0yCJu8fDQ/mxpZyWtzjmHSknQ8vfc1LHG+cPzFFxD
      u47FNFLAjRsih/W+YPzElACh54cF5CVhyIh9zwArXw33C8Ck50ZpjzrvY5plIQHL+AZ5VuhT
      XiI2cg9x79KWrwn7FMGStQ2moEQH9Gcl7z9Ng6iZSnqlz5rEcwq4t+UaxoR5+TOSGWhtxxpf
      F+L5YSEYOcZSSVo+86EPfQhnZ2f427/9W3z0ox/F7/+P/zHqL1V/swa1VBMoSSIhhFQ16DpQ
      kkxlnxYcHx/jP/7jP/DhD394eEc8akltUwssD6Tc0NY7ZAKp3Z6I6bmktnR2dobNZpP5/ZNA
      S28QvaH5mZZ25iTAOQI8R/zTfPRpiKNmU2exAvJZVqSayiwp+5SV2kIIYOCUZkAaP+vvjDgD
      wiMotrlZb/D44nGUfn006jvnitL7QIw7c57aLv+8pIUBZMT9XujHx/XWkj7/pkbUtO0oVsV6
      Xv+LduQ9Wu29RdNPQIp3cC6WMJ0S3OTYqDWQQRGHubO1FKzxWSCLs1M4olAk2+H7FLLkePTd
      odxPlhQ/8oYraJ1aE7AEm91uh+12O1yMNy32u/0oN1Np/FrYuXXrFr71rW8hhIC7r7ySmS2l
      6ckMBONCsrES0ZOhyHqwFmhiNUW0LAJnSfH8GULAxcUFbt++bfZXkhqmcJHfTUkzBGkOgnPJ
      3sp2eFGu4wfm5kLjJKVt9qtdBrVkrImChCVjY98hDMFJTvWj29XjLEn9nJPoJhldNNN3fVCZ
      ZDSS0GR4mYFZ7fBdACrhbeUQNZrgcul/NI7ejFiK/I3zoC73+vXXEmW6RMegFcj16ULAKB1A
      iM+bKa1N6TEGq8VEd7mLsXwuBiqO613IUoaSCGphgIGOGkpM9Dog92zTNckt1To3+ncSZJqz
      5H65vLxMGjVBt6kZutxzS8uASiiZe5ZaI4BlObXYT9u2+OxnP4vvfve7uLy4TPRHOnIUA8Gs
      BiVUVZUKocib9UPaO+T5JVLufr/H0dFR9lxJEpki+BZoJmAdPMlMNfEnjtJcxM+W9K3HtNls
      zGdLYy0R/6UgmQ2NJprJcIM559IFVMnv2jk3TjPgkIhf6VJVzpfUHui5o/uJhxaZJrjdbeEw
      CBVMZ6zHmv9dvpNKOCHi34UuC0KTBETu42gyqRC66LYKDHso/hyKqZM5lkxM2edtHwXrhsvx
      3W6X4k6YNVevH+Hi4gKnp6e4uroq7k96Cek5seJQ9HxNAaOPpSsspX/ez1j4zDEE+Yz+Ke+w
      uE4y0SOT5Mlx0clhyue+BNaF95x2K9+1NBFJf+SZa9sWX/7yl/HSSy/hy1/+8uhS373zzjvX
      vgRIUaML7fxLBzn1Xukd5/oAkL5uqvz8wYMHuHPnzrWJn4XHErD6094ppQM2N+brqNc3Gb8m
      dkuet6Ty6+BkMjUgmUMkc7JwYBvEx5r/Jfgt1ZKs5yUhvwnMadgSB0lAJXGeO68kiExbfCh+
      SwUuC+I8oZgNs9Tnof0wdpExAAAAJ0lEQVRMtcM50hrAXN9L8AOW08up9qZwk+eBz92/fx/v
      e9/7Rn3/X00oLStRhzXtAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='map (2)' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
